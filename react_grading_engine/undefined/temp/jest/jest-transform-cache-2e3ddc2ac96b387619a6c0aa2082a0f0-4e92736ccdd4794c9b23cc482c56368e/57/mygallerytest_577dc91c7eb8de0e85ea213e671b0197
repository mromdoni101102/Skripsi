d2a3b54d66f588df948dbe2954c725f1
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');

// ======================================================================
// BAGIAN 1: PERSIAPAN LINGKUNGAN
// Kita tidak butuh jest.mock untuk utils.js lagi. Kita akan uji hasil akhirnya.
// ======================================================================

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
const submission = require(process.env.SUBMISSION_PATH);
// Ambil komponen MyGallery dan Profile dari file mahasiswa
const MyGallery = submission.MyGallery || submission.default || submission;
const Profile = submission.Profile; // Kita asumsikan Profile juga diexport dari file yang sama

// ======================================================================
// BAGIAN 3: "CHECKLIST" PENILAIAN FUNGSIONAL YANG FOKUS PADA HASIL
// ======================================================================
describe('Praktikum: Komponen MyGallery', () => {
  // Render komponen mahasiswa sebelum setiap tes
  beforeEach(() => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(MyGallery, {}));
  });
  test('Kriteria 1: Harus menampilkan judul utama "Notable Scientists"', () => {
    const mainHeading = screen.getByRole('heading', {
      level: 1,
      name: /Notable Scientists/i
    });
    expect(mainHeading).toBeInTheDocument();
  });
  test('Kriteria 2: Harus menampilkan DUA nama ilmuwan sebagai sub-judul', () => {
    const mariaHeading = screen.getByRole('heading', {
      name: /Maria Skłodowska-Curie/i
    });
    const katsukoHeading = screen.getByRole('heading', {
      name: /Katsuko Saruhashi/i
    });
    expect(mariaHeading).toBeInTheDocument();
    expect(katsukoHeading).toBeInTheDocument();
  });
  test('Kriteria 3: Harus menampilkan gambar avatar dengan SUMBER (src) dan TULISAN ALT yang benar', () => {
    // Cari gambar Maria berdasarkan alt text-nya
    const mariaAvatar = screen.getByAltText('Maria Skłodowska-Curie');
    expect(mariaAvatar).toBeInTheDocument();
    // Periksa apakah src-nya benar
    expect(mariaAvatar).toHaveAttribute('src', 'https://i.imgur.com/szV5sdGs.jpg');

    // Cari gambar Katsuko berdasarkan alt text-nya
    const katsukoAvatar = screen.getByAltText('Katsuko Saruhashi');
    expect(katsukoAvatar).toBeInTheDocument();
    // Periksa apakah src-nya benar
    expect(katsukoAvatar).toHaveAttribute('src', 'https://i.imgur.com/YfeOqp2s.jpg');
  });
  test('Kriteria 4: Harus menampilkan detail spesifik seperti profesi dan jumlah penghargaan', () => {
    // Cek detail Maria
    expect(screen.getByText('Fisikawan dan kimiawan')).toBeInTheDocument();
    expect(screen.getByText(/Penghargaan: 4/)).toBeInTheDocument();

    // Cek detail Katsuko
    expect(screen.getByText('Ahli Geokimia')).toBeInTheDocument();
    expect(screen.getByText(/Penghargaan: 2/)).toBeInTheDocument();
  });
  test('Kriteria 5: Komponen "MyGallery" harus diexport dengan benar', () => {
    expect(MyGallery).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJwcm9jZXNzIiwiZW52IiwiU1VCTUlTU0lPTl9QQVRIIiwiRXJyb3IiLCJzdWJtaXNzaW9uIiwiTXlHYWxsZXJ5IiwiZGVmYXVsdCIsIlByb2ZpbGUiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJfanN4UnVudGltZSIsImpzeCIsInRlc3QiLCJtYWluSGVhZGluZyIsImdldEJ5Um9sZSIsImxldmVsIiwibmFtZSIsImV4cGVjdCIsInRvQmVJblRoZURvY3VtZW50IiwibWFyaWFIZWFkaW5nIiwia2F0c3Vrb0hlYWRpbmciLCJtYXJpYUF2YXRhciIsImdldEJ5QWx0VGV4dCIsInRvSGF2ZUF0dHJpYnV0ZSIsImthdHN1a29BdmF0YXIiLCJnZXRCeVRleHQiLCJ0b0JlRGVmaW5lZCJdLCJzb3VyY2VzIjpbIm15Z2FsbGVyeS50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGplc3QtZW52aXJvbm1lbnQganNkb21cbiAqL1xucmVxdWlyZSgnQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbScpO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyByZW5kZXIsIHNjcmVlbiB9ID0gcmVxdWlyZSgnQHRlc3RpbmctbGlicmFyeS9yZWFjdCcpO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMTogUEVSU0lBUEFOIExJTkdLVU5HQU5cbi8vIEtpdGEgdGlkYWsgYnV0dWggamVzdC5tb2NrIHVudHVrIHV0aWxzLmpzIGxhZ2kuIEtpdGEgYWthbiB1amkgaGFzaWwgYWtoaXJueWEuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDI6IE1FTkdBTUJJTCBLT0RFIE1BSEFTSVNXQVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaWYgKCFwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdTVUJNSVNTSU9OX1BBVEggZW52aXJvbm1lbnQgdmFyaWFibGUgbm90IHNldC4nKTtcbn1cbmNvbnN0IHN1Ym1pc3Npb24gPSByZXF1aXJlKHByb2Nlc3MuZW52LlNVQk1JU1NJT05fUEFUSCk7XG4vLyBBbWJpbCBrb21wb25lbiBNeUdhbGxlcnkgZGFuIFByb2ZpbGUgZGFyaSBmaWxlIG1haGFzaXN3YVxuY29uc3QgTXlHYWxsZXJ5ID0gc3VibWlzc2lvbi5NeUdhbGxlcnkgfHwgc3VibWlzc2lvbi5kZWZhdWx0IHx8IHN1Ym1pc3Npb247XG5jb25zdCBQcm9maWxlID0gc3VibWlzc2lvbi5Qcm9maWxlOyAvLyBLaXRhIGFzdW1zaWthbiBQcm9maWxlIGp1Z2EgZGlleHBvcnQgZGFyaSBmaWxlIHlhbmcgc2FtYVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMzogXCJDSEVDS0xJU1RcIiBQRU5JTEFJQU4gRlVOR1NJT05BTCBZQU5HIEZPS1VTIFBBREEgSEFTSUxcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmRlc2NyaWJlKCdQcmFrdGlrdW06IEtvbXBvbmVuIE15R2FsbGVyeScsICgpID0+IHtcblxuICAvLyBSZW5kZXIga29tcG9uZW4gbWFoYXNpc3dhIHNlYmVsdW0gc2V0aWFwIHRlc1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICByZW5kZXIoPE15R2FsbGVyeSAvPik7XG4gIH0pO1xuXG4gIHRlc3QoJ0tyaXRlcmlhIDE6IEhhcnVzIG1lbmFtcGlsa2FuIGp1ZHVsIHV0YW1hIFwiTm90YWJsZSBTY2llbnRpc3RzXCInLCAoKSA9PiB7XG4gICAgY29uc3QgbWFpbkhlYWRpbmcgPSBzY3JlZW4uZ2V0QnlSb2xlKCdoZWFkaW5nJywgeyBsZXZlbDogMSwgbmFtZTogL05vdGFibGUgU2NpZW50aXN0cy9pIH0pO1xuICAgIGV4cGVjdChtYWluSGVhZGluZykudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnS3JpdGVyaWEgMjogSGFydXMgbWVuYW1waWxrYW4gRFVBIG5hbWEgaWxtdXdhbiBzZWJhZ2FpIHN1Yi1qdWR1bCcsICgpID0+IHtcbiAgICBjb25zdCBtYXJpYUhlYWRpbmcgPSBzY3JlZW4uZ2V0QnlSb2xlKCdoZWFkaW5nJywgeyBuYW1lOiAvTWFyaWEgU2vFgm9kb3dza2EtQ3VyaWUvaSB9KTtcbiAgICBjb25zdCBrYXRzdWtvSGVhZGluZyA9IHNjcmVlbi5nZXRCeVJvbGUoJ2hlYWRpbmcnLCB7IG5hbWU6IC9LYXRzdWtvIFNhcnVoYXNoaS9pIH0pO1xuXG4gICAgZXhwZWN0KG1hcmlhSGVhZGluZykudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBleHBlY3Qoa2F0c3Vrb0hlYWRpbmcpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIHRlc3QoJ0tyaXRlcmlhIDM6IEhhcnVzIG1lbmFtcGlsa2FuIGdhbWJhciBhdmF0YXIgZGVuZ2FuIFNVTUJFUiAoc3JjKSBkYW4gVFVMSVNBTiBBTFQgeWFuZyBiZW5hcicsICgpID0+IHtcbiAgICAvLyBDYXJpIGdhbWJhciBNYXJpYSBiZXJkYXNhcmthbiBhbHQgdGV4dC1ueWFcbiAgICBjb25zdCBtYXJpYUF2YXRhciA9IHNjcmVlbi5nZXRCeUFsdFRleHQoJ01hcmlhIFNrxYJvZG93c2thLUN1cmllJyk7XG4gICAgZXhwZWN0KG1hcmlhQXZhdGFyKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIC8vIFBlcmlrc2EgYXBha2FoIHNyYy1ueWEgYmVuYXJcbiAgICBleHBlY3QobWFyaWFBdmF0YXIpLnRvSGF2ZUF0dHJpYnV0ZSgnc3JjJywgJ2h0dHBzOi8vaS5pbWd1ci5jb20vc3pWNXNkR3MuanBnJyk7XG5cbiAgICAvLyBDYXJpIGdhbWJhciBLYXRzdWtvIGJlcmRhc2Fya2FuIGFsdCB0ZXh0LW55YVxuICAgIGNvbnN0IGthdHN1a29BdmF0YXIgPSBzY3JlZW4uZ2V0QnlBbHRUZXh0KCdLYXRzdWtvIFNhcnVoYXNoaScpO1xuICAgIGV4cGVjdChrYXRzdWtvQXZhdGFyKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIC8vIFBlcmlrc2EgYXBha2FoIHNyYy1ueWEgYmVuYXJcbiAgICBleHBlY3Qoa2F0c3Vrb0F2YXRhcikudG9IYXZlQXR0cmlidXRlKCdzcmMnLCAnaHR0cHM6Ly9pLmltZ3VyLmNvbS9ZZmVPcXAycy5qcGcnKTtcbiAgfSk7XG5cbiAgdGVzdCgnS3JpdGVyaWEgNDogSGFydXMgbWVuYW1waWxrYW4gZGV0YWlsIHNwZXNpZmlrIHNlcGVydGkgcHJvZmVzaSBkYW4ganVtbGFoIHBlbmdoYXJnYWFuJywgKCkgPT4ge1xuICAgIC8vIENlayBkZXRhaWwgTWFyaWFcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnRmlzaWthd2FuIGRhbiBraW1pYXdhbicpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KC9QZW5naGFyZ2FhbjogNC8pKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuXG4gICAgLy8gQ2VrIGRldGFpbCBLYXRzdWtvXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0FobGkgR2Vva2ltaWEnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgvUGVuZ2hhcmdhYW46IDIvKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnS3JpdGVyaWEgNTogS29tcG9uZW4gXCJNeUdhbGxlcnlcIiBoYXJ1cyBkaWV4cG9ydCBkZW5nYW4gYmVuYXInLCAoKSA9PiB7XG4gICAgICBleHBlY3QoTXlHYWxsZXJ5KS50b0JlRGVmaW5lZCgpO1xuICB9KTtcblxufSk7XG4iXSwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBQSxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDcEMsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUUsTUFBTTtFQUFFQztBQUFPLENBQUMsR0FBR0gsT0FBTyxDQUFDLHdCQUF3QixDQUFDOztBQUU1RDtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLENBQUNJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxlQUFlLEVBQUU7RUFDaEMsTUFBTSxJQUFJQyxLQUFLLENBQUMsK0NBQStDLENBQUM7QUFDbEU7QUFDQSxNQUFNQyxVQUFVLEdBQUdSLE9BQU8sQ0FBQ0ksT0FBTyxDQUFDQyxHQUFHLENBQUNDLGVBQWUsQ0FBQztBQUN2RDtBQUNBLE1BQU1HLFNBQVMsR0FBR0QsVUFBVSxDQUFDQyxTQUFTLElBQUlELFVBQVUsQ0FBQ0UsT0FBTyxJQUFJRixVQUFVO0FBQzFFLE1BQU1HLE9BQU8sR0FBR0gsVUFBVSxDQUFDRyxPQUFPLENBQUMsQ0FBQzs7QUFFcEM7QUFDQTtBQUNBO0FBQ0FDLFFBQVEsQ0FBQywrQkFBK0IsRUFBRSxNQUFNO0VBRTlDO0VBQ0FDLFVBQVUsQ0FBQyxNQUFNO0lBQ2ZYLE1BQU0sY0FBQyxJQUFBWSxXQUFBLENBQUFDLEdBQUEsRUFBQ04sU0FBUyxJQUFFLENBQUMsQ0FBQztFQUN2QixDQUFDLENBQUM7RUFFRk8sSUFBSSxDQUFDLGdFQUFnRSxFQUFFLE1BQU07SUFDM0UsTUFBTUMsV0FBVyxHQUFHZCxNQUFNLENBQUNlLFNBQVMsQ0FBQyxTQUFTLEVBQUU7TUFBRUMsS0FBSyxFQUFFLENBQUM7TUFBRUMsSUFBSSxFQUFFO0lBQXNCLENBQUMsQ0FBQztJQUMxRkMsTUFBTSxDQUFDSixXQUFXLENBQUMsQ0FBQ0ssaUJBQWlCLENBQUMsQ0FBQztFQUN6QyxDQUFDLENBQUM7RUFFRk4sSUFBSSxDQUFDLGtFQUFrRSxFQUFFLE1BQU07SUFDN0UsTUFBTU8sWUFBWSxHQUFHcEIsTUFBTSxDQUFDZSxTQUFTLENBQUMsU0FBUyxFQUFFO01BQUVFLElBQUksRUFBRTtJQUEwQixDQUFDLENBQUM7SUFDckYsTUFBTUksY0FBYyxHQUFHckIsTUFBTSxDQUFDZSxTQUFTLENBQUMsU0FBUyxFQUFFO01BQUVFLElBQUksRUFBRTtJQUFxQixDQUFDLENBQUM7SUFFbEZDLE1BQU0sQ0FBQ0UsWUFBWSxDQUFDLENBQUNELGlCQUFpQixDQUFDLENBQUM7SUFDeENELE1BQU0sQ0FBQ0csY0FBYyxDQUFDLENBQUNGLGlCQUFpQixDQUFDLENBQUM7RUFDNUMsQ0FBQyxDQUFDO0VBRUZOLElBQUksQ0FBQyw0RkFBNEYsRUFBRSxNQUFNO0lBQ3ZHO0lBQ0EsTUFBTVMsV0FBVyxHQUFHdEIsTUFBTSxDQUFDdUIsWUFBWSxDQUFDLHdCQUF3QixDQUFDO0lBQ2pFTCxNQUFNLENBQUNJLFdBQVcsQ0FBQyxDQUFDSCxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3ZDO0lBQ0FELE1BQU0sQ0FBQ0ksV0FBVyxDQUFDLENBQUNFLGVBQWUsQ0FBQyxLQUFLLEVBQUUsa0NBQWtDLENBQUM7O0lBRTlFO0lBQ0EsTUFBTUMsYUFBYSxHQUFHekIsTUFBTSxDQUFDdUIsWUFBWSxDQUFDLG1CQUFtQixDQUFDO0lBQzlETCxNQUFNLENBQUNPLGFBQWEsQ0FBQyxDQUFDTixpQkFBaUIsQ0FBQyxDQUFDO0lBQ3pDO0lBQ0FELE1BQU0sQ0FBQ08sYUFBYSxDQUFDLENBQUNELGVBQWUsQ0FBQyxLQUFLLEVBQUUsa0NBQWtDLENBQUM7RUFDbEYsQ0FBQyxDQUFDO0VBRUZYLElBQUksQ0FBQyxzRkFBc0YsRUFBRSxNQUFNO0lBQ2pHO0lBQ0FLLE1BQU0sQ0FBQ2xCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUNQLGlCQUFpQixDQUFDLENBQUM7SUFDdEVELE1BQU0sQ0FBQ2xCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUNQLGlCQUFpQixDQUFDLENBQUM7O0lBRTlEO0lBQ0FELE1BQU0sQ0FBQ2xCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDUCxpQkFBaUIsQ0FBQyxDQUFDO0lBQzdERCxNQUFNLENBQUNsQixNQUFNLENBQUMwQixTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDUCxpQkFBaUIsQ0FBQyxDQUFDO0VBQ2hFLENBQUMsQ0FBQztFQUVGTixJQUFJLENBQUMsOERBQThELEVBQUUsTUFBTTtJQUN2RUssTUFBTSxDQUFDWixTQUFTLENBQUMsQ0FBQ3FCLFdBQVcsQ0FBQyxDQUFDO0VBQ25DLENBQUMsQ0FBQztBQUVKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==