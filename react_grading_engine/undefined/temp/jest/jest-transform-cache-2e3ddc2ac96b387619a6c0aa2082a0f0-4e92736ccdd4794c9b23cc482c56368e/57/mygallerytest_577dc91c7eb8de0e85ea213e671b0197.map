{"version":3,"names":["require","React","render","screen","process","env","SUBMISSION_PATH","Error","submission","MyGallery","default","Profile","describe","beforeEach","_jsxRuntime","jsx","test","mainHeading","getByRole","level","name","expect","toBeInTheDocument","mariaHeading","katsukoHeading","mariaAvatar","getByAltText","toHaveAttribute","katsukoAvatar","getByText","toBeDefined"],"sources":["mygallery.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN\n// Kita tidak butuh jest.mock untuk utils.js lagi. Kita akan uji hasil akhirnya.\n// ======================================================================\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\nconst submission = require(process.env.SUBMISSION_PATH);\n// Ambil komponen MyGallery dan Profile dari file mahasiswa\nconst MyGallery = submission.MyGallery || submission.default || submission;\nconst Profile = submission.Profile; // Kita asumsikan Profile juga diexport dari file yang sama\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL YANG FOKUS PADA HASIL\n// ======================================================================\ndescribe('Praktikum: Komponen MyGallery', () => {\n\n  // Render komponen mahasiswa sebelum setiap tes\n  beforeEach(() => {\n    render(<MyGallery />);\n  });\n\n  test('Kriteria 1: Harus menampilkan judul utama \"Notable Scientists\"', () => {\n    const mainHeading = screen.getByRole('heading', { level: 1, name: /Notable Scientists/i });\n    expect(mainHeading).toBeInTheDocument();\n  });\n\n  test('Kriteria 2: Harus menampilkan DUA nama ilmuwan sebagai sub-judul', () => {\n    const mariaHeading = screen.getByRole('heading', { name: /Maria Skłodowska-Curie/i });\n    const katsukoHeading = screen.getByRole('heading', { name: /Katsuko Saruhashi/i });\n\n    expect(mariaHeading).toBeInTheDocument();\n    expect(katsukoHeading).toBeInTheDocument();\n  });\n\n  test('Kriteria 3: Harus menampilkan gambar avatar dengan SUMBER (src) dan TULISAN ALT yang benar', () => {\n    // Cari gambar Maria berdasarkan alt text-nya\n    const mariaAvatar = screen.getByAltText('Maria Skłodowska-Curie');\n    expect(mariaAvatar).toBeInTheDocument();\n    // Periksa apakah src-nya benar\n    expect(mariaAvatar).toHaveAttribute('src', 'https://i.imgur.com/szV5sdGs.jpg');\n\n    // Cari gambar Katsuko berdasarkan alt text-nya\n    const katsukoAvatar = screen.getByAltText('Katsuko Saruhashi');\n    expect(katsukoAvatar).toBeInTheDocument();\n    // Periksa apakah src-nya benar\n    expect(katsukoAvatar).toHaveAttribute('src', 'https://i.imgur.com/YfeOqp2s.jpg');\n  });\n\n  test('Kriteria 4: Harus menampilkan detail spesifik seperti profesi dan jumlah penghargaan', () => {\n    // Cek detail Maria\n    expect(screen.getByText('Fisikawan dan kimiawan')).toBeInTheDocument();\n    expect(screen.getByText(/Penghargaan: 4/)).toBeInTheDocument();\n\n    // Cek detail Katsuko\n    expect(screen.getByText('Ahli Geokimia')).toBeInTheDocument();\n    expect(screen.getByText(/Penghargaan: 2/)).toBeInTheDocument();\n  });\n\n  test('Kriteria 5: Komponen \"MyGallery\" harus diexport dengan benar', () => {\n      expect(MyGallery).toBeDefined();\n  });\n\n});\n"],"mappings":"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","ignoreList":[]}