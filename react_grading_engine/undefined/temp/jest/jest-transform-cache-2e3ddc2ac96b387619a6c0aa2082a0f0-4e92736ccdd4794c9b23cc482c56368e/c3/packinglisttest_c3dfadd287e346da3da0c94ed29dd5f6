68d28576d4e82b03b6cbfb4ce7dd46fd
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');

// ======================================================================
// TIDAK ADA MOCKING DEPENDENSI KARENA KODE INI MANDIRI
// ======================================================================

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
// Mengambil komponen PackingList dari file jawaban mahasiswa.
const PackingList = require(process.env.SUBMISSION_PATH).default;

// ======================================================================
// BAGIAN 3: "CHECKLIST" PENILAIAN FUNGSIONAL
// ======================================================================
describe('Praktikum: Komponen PackingList', () => {
  beforeEach(() => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(PackingList, {}));
  });
  test('Kriteria 1: Harus menampilkan judul utama "Sally Ride\'s Packing List"', () => {
    const heading = screen.getByRole('heading', {
      level: 1,
      name: /Sally Ride's Packing List/i
    });
    expect(heading).toBeInTheDocument();
  });
  test('Kriteria 2: Harus me-render sebuah daftar (<ul>) dengan 3 item (<li>)', () => {
    // Cari elemen daftar
    const list = screen.getByRole('list');
    expect(list).toBeInTheDocument();

    // Cari semua item di dalam daftar
    const listItems = screen.getAllByRole('listitem');
    expect(listItems).toHaveLength(3);
  });
  test('Kriteria 3: Item yang sudah dikemas (isPacked: true) harus dicoret dan punya tanda centang', () => {
    // Cari item berdasarkan teksnya, lalu cek parent-nya
    const spaceSuit = screen.getByText(/Space suit ✅/i);
    const helmet = screen.getByText(/Helmet with a golden leaf ✅/i);

    // Harapannya, teks ini berada di dalam tag <del>
    expect(spaceSuit.tagName.toLowerCase()).toBe('del');
    expect(helmet.tagName.toLowerCase()).toBe('del');
  });
  test('Kriteria 4: Item yang belum dikemas (isPacked: false) TIDAK boleh dicoret', () => {
    // Cari item berdasarkan teksnya
    const photo = screen.getByText('Photo of Tam');

    // Harapannya, teks ini TIDAK berada di dalam tag <del>
    // Parent dari teks ini seharusnya adalah <li>, bukan <del>
    expect(photo.tagName.toLowerCase()).not.toBe('del');
    expect(photo.closest('del')).toBeNull(); // Cara lain untuk memastikan tidak ada tag <del> di atasnya
  });
  test('Kriteria 5: Setiap item list harus memiliki class "item"', () => {
    const listItems = screen.getAllByRole('listitem');
    listItems.forEach(item => {
      expect(item).toHaveClass('item');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJwcm9jZXNzIiwiZW52IiwiU1VCTUlTU0lPTl9QQVRIIiwiRXJyb3IiLCJQYWNraW5nTGlzdCIsImRlZmF1bHQiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJfanN4UnVudGltZSIsImpzeCIsInRlc3QiLCJoZWFkaW5nIiwiZ2V0QnlSb2xlIiwibGV2ZWwiLCJuYW1lIiwiZXhwZWN0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJsaXN0IiwibGlzdEl0ZW1zIiwiZ2V0QWxsQnlSb2xlIiwidG9IYXZlTGVuZ3RoIiwic3BhY2VTdWl0IiwiZ2V0QnlUZXh0IiwiaGVsbWV0IiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwidG9CZSIsInBob3RvIiwibm90IiwiY2xvc2VzdCIsInRvQmVOdWxsIiwiZm9yRWFjaCIsIml0ZW0iLCJ0b0hhdmVDbGFzcyJdLCJzb3VyY2VzIjpbInBhY2tpbmdsaXN0LnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAamVzdC1lbnZpcm9ubWVudCBqc2RvbVxuICovXG5yZXF1aXJlKCdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tJyk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHJlbmRlciwgc2NyZWVuIH0gPSByZXF1aXJlKCdAdGVzdGluZy1saWJyYXJ5L3JlYWN0Jyk7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRJREFLIEFEQSBNT0NLSU5HIERFUEVOREVOU0kgS0FSRU5BIEtPREUgSU5JIE1BTkRJUklcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMjogTUVOR0FNQklMIEtPREUgTUFIQVNJU1dBXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pZiAoIXByb2Nlc3MuZW52LlNVQk1JU1NJT05fUEFUSCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ1NVQk1JU1NJT05fUEFUSCBlbnZpcm9ubWVudCB2YXJpYWJsZSBub3Qgc2V0LicpO1xufVxuLy8gTWVuZ2FtYmlsIGtvbXBvbmVuIFBhY2tpbmdMaXN0IGRhcmkgZmlsZSBqYXdhYmFuIG1haGFzaXN3YS5cbmNvbnN0IFBhY2tpbmdMaXN0ID0gcmVxdWlyZShwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpLmRlZmF1bHQ7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDM6IFwiQ0hFQ0tMSVNUXCIgUEVOSUxBSUFOIEZVTkdTSU9OQUxcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmRlc2NyaWJlKCdQcmFrdGlrdW06IEtvbXBvbmVuIFBhY2tpbmdMaXN0JywgKCkgPT4ge1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIHJlbmRlcig8UGFja2luZ0xpc3QgLz4pO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMTogSGFydXMgbWVuYW1waWxrYW4ganVkdWwgdXRhbWEgXCJTYWxseSBSaWRlXFwncyBQYWNraW5nIExpc3RcIicsICgpID0+IHtcbiAgICAgICAgY29uc3QgaGVhZGluZyA9IHNjcmVlbi5nZXRCeVJvbGUoJ2hlYWRpbmcnLCB7IGxldmVsOiAxLCBuYW1lOiAvU2FsbHkgUmlkZSdzIFBhY2tpbmcgTGlzdC9pIH0pO1xuICAgICAgICBleHBlY3QoaGVhZGluZykudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDI6IEhhcnVzIG1lLXJlbmRlciBzZWJ1YWggZGFmdGFyICg8dWw+KSBkZW5nYW4gMyBpdGVtICg8bGk+KScsICgpID0+IHtcbiAgICAgICAgLy8gQ2FyaSBlbGVtZW4gZGFmdGFyXG4gICAgICAgIGNvbnN0IGxpc3QgPSBzY3JlZW4uZ2V0QnlSb2xlKCdsaXN0Jyk7XG4gICAgICAgIGV4cGVjdChsaXN0KS50b0JlSW5UaGVEb2N1bWVudCgpO1xuXG4gICAgICAgIC8vIENhcmkgc2VtdWEgaXRlbSBkaSBkYWxhbSBkYWZ0YXJcbiAgICAgICAgY29uc3QgbGlzdEl0ZW1zID0gc2NyZWVuLmdldEFsbEJ5Um9sZSgnbGlzdGl0ZW0nKTtcbiAgICAgICAgZXhwZWN0KGxpc3RJdGVtcykudG9IYXZlTGVuZ3RoKDMpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMzogSXRlbSB5YW5nIHN1ZGFoIGRpa2VtYXMgKGlzUGFja2VkOiB0cnVlKSBoYXJ1cyBkaWNvcmV0IGRhbiBwdW55YSB0YW5kYSBjZW50YW5nJywgKCkgPT4ge1xuICAgICAgICAvLyBDYXJpIGl0ZW0gYmVyZGFzYXJrYW4gdGVrc255YSwgbGFsdSBjZWsgcGFyZW50LW55YVxuICAgICAgICBjb25zdCBzcGFjZVN1aXQgPSBzY3JlZW4uZ2V0QnlUZXh0KC9TcGFjZSBzdWl0IOKchS9pKTtcbiAgICAgICAgY29uc3QgaGVsbWV0ID0gc2NyZWVuLmdldEJ5VGV4dCgvSGVsbWV0IHdpdGggYSBnb2xkZW4gbGVhZiDinIUvaSk7XG5cbiAgICAgICAgLy8gSGFyYXBhbm55YSwgdGVrcyBpbmkgYmVyYWRhIGRpIGRhbGFtIHRhZyA8ZGVsPlxuICAgICAgICBleHBlY3Qoc3BhY2VTdWl0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSkudG9CZSgnZGVsJyk7XG4gICAgICAgIGV4cGVjdChoZWxtZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpKS50b0JlKCdkZWwnKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDQ6IEl0ZW0geWFuZyBiZWx1bSBkaWtlbWFzIChpc1BhY2tlZDogZmFsc2UpIFRJREFLIGJvbGVoIGRpY29yZXQnLCAoKSA9PiB7XG4gICAgICAgIC8vIENhcmkgaXRlbSBiZXJkYXNhcmthbiB0ZWtzbnlhXG4gICAgICAgIGNvbnN0IHBob3RvID0gc2NyZWVuLmdldEJ5VGV4dCgnUGhvdG8gb2YgVGFtJyk7XG5cbiAgICAgICAgLy8gSGFyYXBhbm55YSwgdGVrcyBpbmkgVElEQUsgYmVyYWRhIGRpIGRhbGFtIHRhZyA8ZGVsPlxuICAgICAgICAvLyBQYXJlbnQgZGFyaSB0ZWtzIGluaSBzZWhhcnVzbnlhIGFkYWxhaCA8bGk+LCBidWthbiA8ZGVsPlxuICAgICAgICBleHBlY3QocGhvdG8udGFnTmFtZS50b0xvd2VyQ2FzZSgpKS5ub3QudG9CZSgnZGVsJyk7XG4gICAgICAgIGV4cGVjdChwaG90by5jbG9zZXN0KCdkZWwnKSkudG9CZU51bGwoKTsgLy8gQ2FyYSBsYWluIHVudHVrIG1lbWFzdGlrYW4gdGlkYWsgYWRhIHRhZyA8ZGVsPiBkaSBhdGFzbnlhXG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSA1OiBTZXRpYXAgaXRlbSBsaXN0IGhhcnVzIG1lbWlsaWtpIGNsYXNzIFwiaXRlbVwiJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBsaXN0SXRlbXMgPSBzY3JlZW4uZ2V0QWxsQnlSb2xlKCdsaXN0aXRlbScpO1xuICAgICAgICBsaXN0SXRlbXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIGV4cGVjdChpdGVtKS50b0hhdmVDbGFzcygnaXRlbScpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxufSk7XG4iXSwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBQSxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDcEMsTUFBTUMsS0FBSyxH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