{"version":3,"names":["require","React","render","screen","process","env","SUBMISSION_PATH","Error","PackingList","default","describe","beforeEach","_jsxRuntime","jsx","test","heading","getByRole","level","name","expect","toBeInTheDocument","list","listItems","getAllByRole","toHaveLength","spaceSuit","getByText","helmet","tagName","toLowerCase","toBe","photo","not","closest","toBeNull","forEach","item","toHaveClass"],"sources":["packinglist.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// TIDAK ADA MOCKING DEPENDENSI KARENA KODE INI MANDIRI\n// ======================================================================\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Mengambil komponen PackingList dari file jawaban mahasiswa.\nconst PackingList = require(process.env.SUBMISSION_PATH).default;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL\n// ======================================================================\ndescribe('Praktikum: Komponen PackingList', () => {\n\n    beforeEach(() => {\n        render(<PackingList />);\n    });\n\n    test('Kriteria 1: Harus menampilkan judul utama \"Sally Ride\\'s Packing List\"', () => {\n        const heading = screen.getByRole('heading', { level: 1, name: /Sally Ride's Packing List/i });\n        expect(heading).toBeInTheDocument();\n    });\n\n    test('Kriteria 2: Harus me-render sebuah daftar (<ul>) dengan 3 item (<li>)', () => {\n        // Cari elemen daftar\n        const list = screen.getByRole('list');\n        expect(list).toBeInTheDocument();\n\n        // Cari semua item di dalam daftar\n        const listItems = screen.getAllByRole('listitem');\n        expect(listItems).toHaveLength(3);\n    });\n\n    test('Kriteria 3: Item yang sudah dikemas (isPacked: true) harus dicoret dan punya tanda centang', () => {\n        // Cari item berdasarkan teksnya, lalu cek parent-nya\n        const spaceSuit = screen.getByText(/Space suit ✅/i);\n        const helmet = screen.getByText(/Helmet with a golden leaf ✅/i);\n\n        // Harapannya, teks ini berada di dalam tag <del>\n        expect(spaceSuit.tagName.toLowerCase()).toBe('del');\n        expect(helmet.tagName.toLowerCase()).toBe('del');\n    });\n\n    test('Kriteria 4: Item yang belum dikemas (isPacked: false) TIDAK boleh dicoret', () => {\n        // Cari item berdasarkan teksnya\n        const photo = screen.getByText('Photo of Tam');\n\n        // Harapannya, teks ini TIDAK berada di dalam tag <del>\n        // Parent dari teks ini seharusnya adalah <li>, bukan <del>\n        expect(photo.tagName.toLowerCase()).not.toBe('del');\n        expect(photo.closest('del')).toBeNull(); // Cara lain untuk memastikan tidak ada tag <del> di atasnya\n    });\n\n    test('Kriteria 5: Setiap item list harus memiliki class \"item\"', () => {\n        const listItems = screen.getAllByRole('listitem');\n        listItems.forEach(item => {\n            expect(item).toHaveClass('item');\n        });\n    });\n\n});\n"],"mappings":";;;AAAA;AACA;AACA;AACAA,OAAO,CAAC,2BAA2B,CAAC;AACpC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEE,MAAM;EAAEC;AAAO,CAAC,GAAGH,OAAO,CAAC,wBAAwB,CAAC;;AAE5D;AACA;AACA;;AAGA;AACA;AACA;AACA,IAAI,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE;AACA;AACA,MAAMC,WAAW,GAAGR,OAAO,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC,CAACG,OAAO;;AAGhE;AACA;AACA;AACAC,QAAQ,CAAC,iCAAiC,EAAE,MAAM;EAE9CC,UAAU,CAAC,MAAM;IACbT,MAAM,cAAC,IAAAU,WAAA,CAAAC,GAAA,EAACL,WAAW,IAAE,CAAC,CAAC;EAC3B,CAAC,CAAC;EAEFM,IAAI,CAAC,wEAAwE,EAAE,MAAM;IACjF,MAAMC,OAAO,GAAGZ,MAAM,CAACa,SAAS,CAAC,SAAS,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE;IAA6B,CAAC,CAAC;IAC7FC,MAAM,CAACJ,OAAO,CAAC,CAACK,iBAAiB,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFN,IAAI,CAAC,uEAAuE,EAAE,MAAM;IAChF;IACA,MAAMO,IAAI,GAAGlB,MAAM,CAACa,SAAS,CAAC,MAAM,CAAC;IACrCG,MAAM,CAACE,IAAI,CAAC,CAACD,iBAAiB,CAAC,CAAC;;IAEhC;IACA,MAAME,SAAS,GAAGnB,MAAM,CAACoB,YAAY,CAAC,UAAU,CAAC;IACjDJ,MAAM,CAACG,SAAS,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFV,IAAI,CAAC,4FAA4F,EAAE,MAAM;IACrG;IACA,MAAMW,SAAS,GAAGtB,MAAM,CAACuB,SAAS,CAAC,eAAe,CAAC;IACnD,MAAMC,MAAM,GAAGxB,MAAM,CAACuB,SAAS,CAAC,8BAA8B,CAAC;;IAE/D;IACAP,MAAM,CAACM,SAAS,CAACG,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IACnDX,MAAM,CAACQ,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;EACpD,CAAC,CAAC;EAEFhB,IAAI,CAAC,2EAA2E,EAAE,MAAM;IACpF;IACA,MAAMiB,KAAK,GAAG5B,MAAM,CAACuB,SAAS,CAAC,cAAc,CAAC;;IAE9C;IACA;IACAP,MAAM,CAACY,KAAK,CAACH,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAACG,GAAG,CAACF,IAAI,CAAC,KAAK,CAAC;IACnDX,MAAM,CAACY,KAAK,CAACE,OAAO,CAAC,KAAK,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,CAAC;EAEFpB,IAAI,CAAC,0DAA0D,EAAE,MAAM;IACnE,MAAMQ,SAAS,GAAGnB,MAAM,CAACoB,YAAY,CAAC,UAAU,CAAC;IACjDD,SAAS,CAACa,OAAO,CAACC,IAAI,IAAI;MACtBjB,MAAM,CAACiB,IAAI,CAAC,CAACC,WAAW,CAAC,MAAM,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,CAAC;AAEN,CAAC,CAAC","ignoreList":[]}