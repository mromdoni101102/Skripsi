{"version":3,"names":["require","React","render","screen","process","env","SUBMISSION_PATH","Error","Tantangan3","default","describe","beforeEach","_jsxRuntime","jsx","test","teaHeading","getByRole","name","coffeeHeading","expect","toBeInTheDocument","teaPart","getByText","tagName","toLowerCase","toBe","teaCaffeine","coffeePart","coffeeCaffeine","sections","getAllByRole","filter","el","toHaveLength","forEach","section","heading","querySelector","definitionList","toBeDefined"],"sources":["tantangan3.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// TIDAK ADA MOCKING DEPENDENSI KARENA KODE INI MANDIRI\n// ======================================================================\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Mengambil komponen utama dari file jawaban mahasiswa.\nconst Tantangan3 = require(process.env.SUBMISSION_PATH).default;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL\n// ======================================================================\ndescribe('Praktikum: Komponen Drink (Tantangan 3)', () => {\n\n    beforeEach(() => {\n        render(<Tantangan3 />);\n    });\n\n    test('Kriteria 1: Harus me-render DUA komponen Drink, untuk \"tea\" dan \"coffee\"', () => {\n        // Cari kedua judul minuman\n        const teaHeading = screen.getByRole('heading', { name: /tea/i });\n        const coffeeHeading = screen.getByRole('heading', { name: /coffee/i });\n\n        expect(teaHeading).toBeInTheDocument();\n        expect(coffeeHeading).toBeInTheDocument();\n    });\n\n    test('Kriteria 2: Data untuk \"tea\" harus ditampilkan dengan benar', () => {\n        // Cari elemen yang berisi teks 'leaf', yang seharusnya hanya ada di bagian teh\n        const teaPart = screen.getByText('leaf');\n        expect(teaPart).toBeInTheDocument();\n        // Pastikan parentnya adalah elemen <dd>\n        expect(teaPart.tagName.toLowerCase()).toBe('dd');\n\n        // Cari elemen yang berisi teks kafein teh\n        const teaCaffeine = screen.getByText(/15–70 mg\\/cup/i);\n        expect(teaCaffeine).toBeInTheDocument();\n    });\n\n    test('Kriteria 3: Data untuk \"coffee\" harus ditampilkan dengan benar', () => {\n        // Cari elemen yang berisi teks 'bean', yang seharusnya hanya ada di bagian kopi\n        const coffeePart = screen.getByText('bean');\n        expect(coffeePart).toBeInTheDocument();\n        expect(coffeePart.tagName.toLowerCase()).toBe('dd');\n\n        // Cari elemen yang berisi teks kafein kopi\n        const coffeeCaffeine = screen.getByText(/80–185 mg\\/cup/i);\n        expect(coffeeCaffeine).toBeInTheDocument();\n    });\n\n    test('Kriteria 4: Struktur HTML untuk setiap minuman harus benar (section > h1 + dl)', () => {\n        // Cari semua elemen <section>\n        const sections = screen.getAllByRole('generic').filter(el => el.tagName.toLowerCase() === 'section');\n        expect(sections).toHaveLength(2); // Harus ada 2 section\n\n        // Periksa setiap section\n        sections.forEach(section => {\n            const heading = section.querySelector('h1');\n            const definitionList = section.querySelector('dl');\n            expect(heading).toBeInTheDocument();\n            expect(definitionList).toBeInTheDocument();\n        });\n    });\n\n    test('Kriteria 5: Komponen \"Tantangan3\" harus diexport dengan benar', () => {\n        expect(Tantangan3).toBeDefined();\n    });\n\n});\n"],"mappings":";;;AAAA;AACA;AACA;AACAA,OAAO,CAAC,2BAA2B,CAAC;AACpC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEE,MAAM;EAAEC;AAAO,CAAC,GAAGH,OAAO,CAAC,wBAAwB,CAAC;;AAE5D;AACA;AACA;;AAGA;AACA;AACA;AACA,IAAI,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE;AACA;AACA,MAAMC,UAAU,GAAGR,OAAO,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC,CAACG,OAAO;;AAG/D;AACA;AACA;AACAC,QAAQ,CAAC,yCAAyC,EAAE,MAAM;EAEtDC,UAAU,CAAC,MAAM;IACbT,MAAM,cAAC,IAAAU,WAAA,CAAAC,GAAA,EAACL,UAAU,IAAE,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEFM,IAAI,CAAC,0EAA0E,EAAE,MAAM;IACnF;IACA,MAAMC,UAAU,GAAGZ,MAAM,CAACa,SAAS,CAAC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;IAChE,MAAMC,aAAa,GAAGf,MAAM,CAACa,SAAS,CAAC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC;IAEtEE,MAAM,CAACJ,UAAU,CAAC,CAACK,iBAAiB,CAAC,CAAC;IACtCD,MAAM,CAACD,aAAa,CAAC,CAACE,iBAAiB,CAAC,CAAC;EAC7C,CAAC,CAAC;EAEFN,IAAI,CAAC,6DAA6D,EAAE,MAAM;IACtE;IACA,MAAMO,OAAO,GAAGlB,MAAM,CAACmB,SAAS,CAAC,MAAM,CAAC;IACxCH,MAAM,CAACE,OAAO,CAAC,CAACD,iBAAiB,CAAC,CAAC;IACnC;IACAD,MAAM,CAACE,OAAO,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;;IAEhD;IACA,MAAMC,WAAW,GAAGvB,MAAM,CAACmB,SAAS,CAAC,gBAAgB,CAAC;IACtDH,MAAM,CAACO,WAAW,CAAC,CAACN,iBAAiB,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEFN,IAAI,CAAC,gEAAgE,EAAE,MAAM;IACzE;IACA,MAAMa,UAAU,GAAGxB,MAAM,CAACmB,SAAS,CAAC,MAAM,CAAC;IAC3CH,MAAM,CAACQ,UAAU,CAAC,CAACP,iBAAiB,CAAC,CAAC;IACtCD,MAAM,CAACQ,UAAU,CAACJ,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;;IAEnD;IACA,MAAMG,cAAc,GAAGzB,MAAM,CAACmB,SAAS,CAAC,iBAAiB,CAAC;IAC1DH,MAAM,CAACS,cAAc,CAAC,CAACR,iBAAiB,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFN,IAAI,CAAC,gFAAgF,EAAE,MAAM;IACzF;IACA,MAAMe,QAAQ,GAAG1B,MAAM,CAAC2B,YAAY,CAAC,SAAS,CAAC,CAACC,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACT,OAAO,CAACC,WAAW,CAAC,CAAC,KAAK,SAAS,CAAC;IACpGL,MAAM,CAACU,QAAQ,CAAC,CAACI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;;IAElC;IACAJ,QAAQ,CAACK,OAAO,CAACC,OAAO,IAAI;MACxB,MAAMC,OAAO,GAAGD,OAAO,CAACE,aAAa,CAAC,IAAI,CAAC;MAC3C,MAAMC,cAAc,GAAGH,OAAO,CAACE,aAAa,CAAC,IAAI,CAAC;MAClDlB,MAAM,CAACiB,OAAO,CAAC,CAAChB,iBAAiB,CAAC,CAAC;MACnCD,MAAM,CAACmB,cAAc,CAAC,CAAClB,iBAAiB,CAAC,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,CAAC;EAEFN,IAAI,CAAC,+DAA+D,EAAE,MAAM;IACxEK,MAAM,CAACX,UAAU,CAAC,CAAC+B,WAAW,CAAC,CAAC;EACpC,CAAC,CAAC;AAEN,CAAC,CAAC","ignoreList":[]}