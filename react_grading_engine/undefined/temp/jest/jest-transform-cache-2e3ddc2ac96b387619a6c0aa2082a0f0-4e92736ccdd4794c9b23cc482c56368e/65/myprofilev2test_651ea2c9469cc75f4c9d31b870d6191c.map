{"version":3,"names":["_getJestObj","mock","MockedCard","children","_jsxRuntime","jsx","className","virtual","require","jest","React","render","screen","process","env","SUBMISSION_PATH","Error","MyProfileV2","default","describe","beforeEach","test","cardElements","getAllByRole","name","filter","el","classList","contains","expect","toHaveLength","photoHeading","getByRole","level","toBeInTheDocument","avatarImage","getByAltText","parentElement","toBe","toHaveClass","toHaveAttribute","aboutHeading","description","getByText","tagName","toLowerCase","headings","toBeDefined"],"sources":["myprofilev2.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: \"MENCEGAT\" IMPORT YANG BERMASALAH\n// ======================================================================\n// Ini adalah bagian terpenting. Kita beritahu Jest untuk mencegat TEPAT\n// alamat yang diminta oleh kode mahasiswa.\njest.mock('../../components/props/Card.js', () => {\n    // Sebagai gantinya, berikan komponen Card tiruan yang simpel ini.\n    return function MockedCard({ children }) {\n        // Kita beri class \"card\" agar tes struktur tetap bisa berjalan\n        return <div className=\"card\">{children}</div>;\n    };\n}, { virtual: true }); // virtual: true membuatnya tidak perlu file fisik sama sekali.\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Mengambil komponen utama dari file jawaban mahasiswa\nconst MyProfileV2 = require(process.env.SUBMISSION_PATH).default;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL (VERSI LENGKAP ANDA)\n// ======================================================================\ndescribe('Praktikum: Komponen MyProfileV2', () => {\n\n    // Render komponen sebelum setiap tes agar tidak perlu diulang\n    beforeEach(() => {\n        render(<MyProfileV2 />);\n    });\n\n    test('Kriteria 1: Harus me-render DUA komponen Card (tiruan)', () => {\n        // Kita cari berdasarkan class 'card' yang ada di komponen tiruan kita.\n        const cardElements = screen.getAllByRole('generic', { name: '' }).filter(el => el.classList.contains('card'));\n        expect(cardElements).toHaveLength(2);\n    });\n\n    test('Kriteria 2: Card pertama harus berisi judul \"Foto\" dan gambar avatar', () => {\n        const photoHeading = screen.getByRole('heading', { name: /Foto/i, level: 1 });\n        expect(photoHeading).toBeInTheDocument();\n\n        const avatarImage = screen.getByAltText('Aklilu Lemma');\n        expect(avatarImage).toBeInTheDocument();\n\n        // Memastikan judul dan gambar berada dalam satu \"Card\" yang sama\n        expect(photoHeading.parentElement).toBe(avatarImage.parentElement);\n    });\n\n    test('Kriteria 3: Gambar avatar harus memiliki atribut yang benar', () => {\n        const avatarImage = screen.getByAltText('Aklilu Lemma');\n        expect(avatarImage).toHaveClass('avatar');\n        expect(avatarImage).toHaveAttribute('src', 'https://i.imgur.com/OKS67lhm.jpg');\n        expect(avatarImage).toHaveAttribute('width', '70');\n        expect(avatarImage).toHaveAttribute('height', '70');\n    });\n\n    test('Kriteria 4: Card kedua harus berisi judul \"Tentang\" dan paragraf deskripsi', () => {\n        const aboutHeading = screen.getByRole('heading', { name: /Tentang/i, level: 1 });\n        expect(aboutHeading).toBeInTheDocument();\n\n        const description = screen.getByText(/Aklilu Lemma adalah seorang ilmuwan terkemuka/i);\n        expect(description).toBeInTheDocument();\n        expect(description.tagName.toLowerCase()).toBe('p');\n\n        // Memastikan judul dan paragraf berada dalam satu \"Card\" yang sama\n        expect(aboutHeading.parentElement).toBe(description.parentElement);\n    });\n\n    test('Kriteria 5: Kedua judul (\"Foto\" & \"Tentang\") harus berada di dalam tag <h1>', () => {\n        const headings = screen.getAllByRole('heading', { level: 1 });\n        expect(headings).toHaveLength(2);\n\n        // Memeriksa teks dari setiap heading\n        expect(screen.getByRole('heading', { name: /Foto/i, level: 1 })).toBeInTheDocument();\n        expect(screen.getByRole('heading', { name: /Tentang/i, level: 1 })).toBeInTheDocument();\n    });\n\n    test('Kriteria 6: Komponen \"MyProfileV2\" harus diexport sebagai default dengan benar', () => {\n        expect(MyProfileV2).toBeDefined();\n    });\n});\n"],"mappings":"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","ignoreList":[]}