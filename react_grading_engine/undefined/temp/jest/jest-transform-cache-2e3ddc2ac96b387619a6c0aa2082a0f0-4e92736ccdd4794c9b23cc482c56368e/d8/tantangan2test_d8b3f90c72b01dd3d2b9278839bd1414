4d43f0ef7c7d113d4e5223abb19dc12c
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');

// ======================================================================
// TIDAK ADA MOCKING DEPENDENSI KARENA KODE INI MANDIRI
// ======================================================================

// ======================================================================
// MENGAMBIL KODE MAHASISWA
// ======================================================================
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
// Mengambil komponen utama dari file jawaban mahasiswa.
const Tantangan2 = require(process.env.SUBMISSION_PATH).default;

// ======================================================================
// CHECKLIST PENILAIAN FUNGSIONAL (VERSI LENGKAP ANDA)
// ======================================================================
describe('Praktikum: Komponen PackingList (Tantangan 2)', () => {
  beforeEach(() => {
    // Render komponen sebelum setiap tes agar tidak perlu diulang
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Tantangan2, {}));
  });
  test('Kriteria 1: Harus menampilkan judul utama "Sally Ride\'s Packing List"', () => {
    const heading = screen.getByRole('heading', {
      level: 1,
      name: /Sally Ride's Packing List/i
    });
    expect(heading).toBeInTheDocument();
  });
  test('Kriteria 2: Harus me-render struktur dasar (section > ul > 3 li)', () => {
    const list = screen.getByRole('list'); // Mencari <ul>
    expect(list).toBeInTheDocument();

    // Memastikan list berada di dalam section
    const section = list.closest('section');
    expect(section).toBeInTheDocument();
    const listItems = screen.getAllByRole('listitem'); // Mencari semua <li>
    expect(listItems).toHaveLength(3);
  });
  test('Kriteria 3: Semua item list harus memiliki class "item"', () => {
    const listItems = screen.getAllByRole('listitem');
    listItems.forEach(item => {
      expect(item).toHaveClass('item');
    });
  });
  test('Kriteria 4: Item dengan importance > 0 harus menampilkan teks "(Importance: ...)"', () => {
    // Cari item berdasarkan teksnya dan pastikan teks importance muncul
    const spaceSuit = screen.getByText(/Space suit/i);
    expect(spaceSuit.textContent).toContain('(Importance: 9)');
    const photo = screen.getByText(/Photo of Tam/i);
    expect(photo.textContent).toContain('(Importance: 6)');
  });
  test('Kriteria 5: Item dengan importance = 0 TIDAK boleh menampilkan teks "(Importance: ...)"', () => {
    // Cari item berdasarkan teksnya
    const helmet = screen.getByText(/Helmet with a golden leaf/i);

    // Pastikan tidak ada teks "Importance" pada item ini
    expect(helmet.textContent).not.toContain('Importance');
  });
  test('Kriteria 6: Teks importance harus berada di dalam tag <i> (italic)', () => {
    // Cari semua elemen <i>
    const italicElements = document.querySelectorAll('i');
    expect(italicElements).toHaveLength(2);

    // Periksa isinya
    expect(italicElements[0]).toHaveTextContent('(Importance: 9)');
    expect(italicElements[1]).toHaveTextContent('(Importance: 6)');
  });
  test('Kriteria 7: Komponen harus diexport sebagai default dengan benar', () => {
    expect(Tantangan2).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJwcm9jZXNzIiwiZW52IiwiU1VCTUlTU0lPTl9QQVRIIiwiRXJyb3IiLCJUYW50YW5nYW4yIiwiZGVmYXVsdCIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsIl9qc3hSdW50aW1lIiwianN4IiwidGVzdCIsImhlYWRpbmciLCJnZXRCeVJvbGUiLCJsZXZlbCIsIm5hbWUiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsImxpc3QiLCJzZWN0aW9uIiwiY2xvc2VzdCIsImxpc3RJdGVtcyIsImdldEFsbEJ5Um9sZSIsInRvSGF2ZUxlbmd0aCIsImZvckVhY2giLCJpdGVtIiwidG9IYXZlQ2xhc3MiLCJzcGFjZVN1aXQiLCJnZXRCeVRleHQiLCJ0ZXh0Q29udGVudCIsInRvQ29udGFpbiIsInBob3RvIiwiaGVsbWV0Iiwibm90IiwiaXRhbGljRWxlbWVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0b0hhdmVUZXh0Q29udGVudCIsInRvQmVEZWZpbmVkIl0sInNvdXJjZXMiOlsidGFudGFuZ2FuMi50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGplc3QtZW52aXJvbm1lbnQganNkb21cbiAqL1xucmVxdWlyZSgnQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbScpO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyByZW5kZXIsIHNjcmVlbiB9ID0gcmVxdWlyZSgnQHRlc3RpbmctbGlicmFyeS9yZWFjdCcpO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBUSURBSyBBREEgTU9DS0lORyBERVBFTkRFTlNJIEtBUkVOQSBLT0RFIElOSSBNQU5ESVJJXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTUVOR0FNQklMIEtPREUgTUFIQVNJU1dBXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pZiAoIXByb2Nlc3MuZW52LlNVQk1JU1NJT05fUEFUSCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ1NVQk1JU1NJT05fUEFUSCBlbnZpcm9ubWVudCB2YXJpYWJsZSBub3Qgc2V0LicpO1xufVxuLy8gTWVuZ2FtYmlsIGtvbXBvbmVuIHV0YW1hIGRhcmkgZmlsZSBqYXdhYmFuIG1haGFzaXN3YS5cbmNvbnN0IFRhbnRhbmdhbjIgPSByZXF1aXJlKHByb2Nlc3MuZW52LlNVQk1JU1NJT05fUEFUSCkuZGVmYXVsdDtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBDSEVDS0xJU1QgUEVOSUxBSUFOIEZVTkdTSU9OQUwgKFZFUlNJIExFTkdLQVAgQU5EQSlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmRlc2NyaWJlKCdQcmFrdGlrdW06IEtvbXBvbmVuIFBhY2tpbmdMaXN0IChUYW50YW5nYW4gMiknLCAoKSA9PiB7XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgLy8gUmVuZGVyIGtvbXBvbmVuIHNlYmVsdW0gc2V0aWFwIHRlcyBhZ2FyIHRpZGFrIHBlcmx1IGRpdWxhbmdcbiAgICAgICAgcmVuZGVyKDxUYW50YW5nYW4yIC8+KTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDE6IEhhcnVzIG1lbmFtcGlsa2FuIGp1ZHVsIHV0YW1hIFwiU2FsbHkgUmlkZVxcJ3MgUGFja2luZyBMaXN0XCInLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGhlYWRpbmcgPSBzY3JlZW4uZ2V0QnlSb2xlKCdoZWFkaW5nJywgeyBsZXZlbDogMSwgbmFtZTogL1NhbGx5IFJpZGUncyBQYWNraW5nIExpc3QvaSB9KTtcbiAgICAgICAgZXhwZWN0KGhlYWRpbmcpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSAyOiBIYXJ1cyBtZS1yZW5kZXIgc3RydWt0dXIgZGFzYXIgKHNlY3Rpb24gPiB1bCA+IDMgbGkpJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBsaXN0ID0gc2NyZWVuLmdldEJ5Um9sZSgnbGlzdCcpOyAvLyBNZW5jYXJpIDx1bD5cbiAgICAgICAgZXhwZWN0KGxpc3QpLnRvQmVJblRoZURvY3VtZW50KCk7XG5cbiAgICAgICAgLy8gTWVtYXN0aWthbiBsaXN0IGJlcmFkYSBkaSBkYWxhbSBzZWN0aW9uXG4gICAgICAgIGNvbnN0IHNlY3Rpb24gPSBsaXN0LmNsb3Nlc3QoJ3NlY3Rpb24nKTtcbiAgICAgICAgZXhwZWN0KHNlY3Rpb24pLnRvQmVJblRoZURvY3VtZW50KCk7XG5cbiAgICAgICAgY29uc3QgbGlzdEl0ZW1zID0gc2NyZWVuLmdldEFsbEJ5Um9sZSgnbGlzdGl0ZW0nKTsgLy8gTWVuY2FyaSBzZW11YSA8bGk+XG4gICAgICAgIGV4cGVjdChsaXN0SXRlbXMpLnRvSGF2ZUxlbmd0aCgzKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDM6IFNlbXVhIGl0ZW0gbGlzdCBoYXJ1cyBtZW1pbGlraSBjbGFzcyBcIml0ZW1cIicsICgpID0+IHtcbiAgICAgICAgY29uc3QgbGlzdEl0ZW1zID0gc2NyZWVuLmdldEFsbEJ5Um9sZSgnbGlzdGl0ZW0nKTtcbiAgICAgICAgbGlzdEl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoaXRlbSkudG9IYXZlQ2xhc3MoJ2l0ZW0nKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSA0OiBJdGVtIGRlbmdhbiBpbXBvcnRhbmNlID4gMCBoYXJ1cyBtZW5hbXBpbGthbiB0ZWtzIFwiKEltcG9ydGFuY2U6IC4uLilcIicsICgpID0+IHtcbiAgICAgICAgLy8gQ2FyaSBpdGVtIGJlcmRhc2Fya2FuIHRla3NueWEgZGFuIHBhc3Rpa2FuIHRla3MgaW1wb3J0YW5jZSBtdW5jdWxcbiAgICAgICAgY29uc3Qgc3BhY2VTdWl0ID0gc2NyZWVuLmdldEJ5VGV4dCgvU3BhY2Ugc3VpdC9pKTtcbiAgICAgICAgZXhwZWN0KHNwYWNlU3VpdC50ZXh0Q29udGVudCkudG9Db250YWluKCcoSW1wb3J0YW5jZTogOSknKTtcblxuICAgICAgICBjb25zdCBwaG90byA9IHNjcmVlbi5nZXRCeVRleHQoL1Bob3RvIG9mIFRhbS9pKTtcbiAgICAgICAgZXhwZWN0KHBob3RvLnRleHRDb250ZW50KS50b0NvbnRhaW4oJyhJbXBvcnRhbmNlOiA2KScpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgNTogSXRlbSBkZW5nYW4gaW1wb3J0YW5jZSA9IDAgVElEQUsgYm9sZWggbWVuYW1waWxrYW4gdGVrcyBcIihJbXBvcnRhbmNlOiAuLi4pXCInLCAoKSA9PiB7XG4gICAgICAgIC8vIENhcmkgaXRlbSBiZXJkYXNhcmthbiB0ZWtzbnlhXG4gICAgICAgIGNvbnN0IGhlbG1ldCA9IHNjcmVlbi5nZXRCeVRleHQoL0hlbG1ldCB3aXRoIGEgZ29sZGVuIGxlYWYvaSk7XG5cbiAgICAgICAgLy8gUGFzdGlrYW4gdGlkYWsgYWRhIHRla3MgXCJJbXBvcnRhbmNlXCIgcGFkYSBpdGVtIGluaVxuICAgICAgICBleHBlY3QoaGVsbWV0LnRleHRDb250ZW50KS5ub3QudG9Db250YWluKCdJbXBvcnRhbmNlJyk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSA2OiBUZWtzIGltcG9ydGFuY2UgaGFydXMgYmVyYWRhIGRpIGRhbGFtIHRhZyA8aT4gKGl0YWxpYyknLCAoKSA9PiB7XG4gICAgICAgIC8vIENhcmkgc2VtdWEgZWxlbWVuIDxpPlxuICAgICAgICBjb25zdCBpdGFsaWNFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2knKTtcbiAgICAgICAgZXhwZWN0KGl0YWxpY0VsZW1lbnRzKS50b0hhdmVMZW5ndGgoMik7XG5cbiAgICAgICAgLy8gUGVyaWtzYSBpc2lueWFcbiAgICAgICAgZXhwZWN0KGl0YWxpY0VsZW1lbnRzWzBdKS50b0hhdmVUZXh0Q29udGVudCgnKEltcG9ydGFuY2U6IDkpJyk7XG4gICAgICAgIGV4cGVjdChpdGFsaWNFbGVtZW50c1sxXSkudG9IYXZlVGV4dENvbnRlbnQoJyhJbXBvcnRhbmNlOiA2KScpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgNzogS29tcG9uZW4gaGFydXMgZGlleHBvcnQgc2ViYWdhaSBkZWZhdWx0IGRlbmdhbiBiZW5hcicsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KFRhbnRhbmdhbjIpLnRvQmVEZWZpbmVkKCk7XG4gICAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0FBLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUNwQyxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFRSxNQUFNO0VBQUVDO0FBQU8sQ0FBQyxHQUFHSCxPQUFPLENBQUMsd0JBQXdCLENBQUM7O0FBRTVEO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLENBQUNJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxlQUFlLEVBQUU7RUFDaEMsTUFBTSxJQUFJQyxLQUFLLENBQUMsK0NBQStDLENBQUM7QUFDbEU7QUFDQTtBQUNBLE1BQU1DLFVBQVUsR0FBR1IsT0FBTyxDQUFDSSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDLENBQUNH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