d6c8003d8eaf8c522dc5d1fe8cd09c0a
"use strict";

// ======================================================================
// BAGIAN 1: "MENCEGAT" IMPORT DENGAN ALAMAT YANG TEPAT
// ======================================================================
// Perhatikan, path di sini sekarang './profile', SAMA PERSIS dengan
// yang ada di 'import' kode mahasiswa. Ini adalah perbaikan kuncinya.
_getJestObj().mock('./profile', () => {
  return function MockedProfile() {
    // Kita beri tanda pengenal agar bisa kita hitung
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      "data-testid": "profile-component"
    });
  };
}, {
  virtual: true
});

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA (TIDAK BERUBAH)
// ======================================================================
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
const submission = require(process.env.SUBMISSION_PATH);
const Gallery = submission.Gallery || submission.default || submission;

// ======================================================================
// BAGIAN 3: CHECKLIST PENILAIAN (TIDAK BERUBAH)
// ======================================================================
describe('Praktikum: Komponen Gallery', () => {
  beforeEach(() => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Gallery, {}));
  });
  test('Kriteria 1: Harus menampilkan sebuah pembungkus utama', () => {
    const {
      container
    } = render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Gallery, {}));
    expect(container.firstChild).toBeInTheDocument();
  });
  test('Kriteria 2: Harus me-render TEPAT 3 komponen Profile (tiruan)', () => {
    const profileMocks = screen.getAllByTestId('profile-component');
    expect(profileMocks).toHaveLength(3);
  });
  test('Kriteria 3: Komponen "Gallery" harus diexport dengan benar', () => {
    expect(Gallery).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJNb2NrZWRQcm9maWxlIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJ2aXJ0dWFsIiwicmVxdWlyZSIsImplc3QiLCJSZWFjdCIsInJlbmRlciIsInNjcmVlbiIsInByb2Nlc3MiLCJlbnYiLCJTVUJNSVNTSU9OX1BBVEgiLCJFcnJvciIsInN1Ym1pc3Npb24iLCJHYWxsZXJ5IiwiZGVmYXVsdCIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsInRlc3QiLCJjb250YWluZXIiLCJleHBlY3QiLCJmaXJzdENoaWxkIiwidG9CZUluVGhlRG9jdW1lbnQiLCJwcm9maWxlTW9ja3MiLCJnZXRBbGxCeVRlc3RJZCIsInRvSGF2ZUxlbmd0aCIsInRvQmVEZWZpbmVkIl0sInNvdXJjZXMiOlsiZ2FsbGVyeS50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGplc3QtZW52aXJvbm1lbnQganNkb21cbiAqL1xucmVxdWlyZSgnQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbScpO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyByZW5kZXIsIHNjcmVlbiB9ID0gcmVxdWlyZSgnQHRlc3RpbmctbGlicmFyeS9yZWFjdCcpO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMTogXCJNRU5DRUdBVFwiIElNUE9SVCBERU5HQU4gQUxBTUFUIFlBTkcgVEVQQVRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFBlcmhhdGlrYW4sIHBhdGggZGkgc2luaSBzZWthcmFuZyAnLi9wcm9maWxlJywgU0FNQSBQRVJTSVMgZGVuZ2FuXG4vLyB5YW5nIGFkYSBkaSAnaW1wb3J0JyBrb2RlIG1haGFzaXN3YS4gSW5pIGFkYWxhaCBwZXJiYWlrYW4ga3VuY2lueWEuXG5qZXN0Lm1vY2soJy4vcHJvZmlsZScsICgpID0+IHtcbiAgICByZXR1cm4gZnVuY3Rpb24gTW9ja2VkUHJvZmlsZSgpIHtcbiAgICAgICAgLy8gS2l0YSBiZXJpIHRhbmRhIHBlbmdlbmFsIGFnYXIgYmlzYSBraXRhIGhpdHVuZ1xuICAgICAgICByZXR1cm4gPGRpdiBkYXRhLXRlc3RpZD1cInByb2ZpbGUtY29tcG9uZW50XCI+PC9kaXY+O1xuICAgIH07XG59LCB7IHZpcnR1YWw6IHRydWUgfSk7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDI6IE1FTkdBTUJJTCBLT0RFIE1BSEFTSVNXQSAoVElEQUsgQkVSVUJBSClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmlmICghcHJvY2Vzcy5lbnYuU1VCTUlTU0lPTl9QQVRIKSB7XG4gIHRocm93IG5ldyBFcnJvcignU1VCTUlTU0lPTl9QQVRIIGVudmlyb25tZW50IHZhcmlhYmxlIG5vdCBzZXQuJyk7XG59XG5jb25zdCBzdWJtaXNzaW9uID0gcmVxdWlyZShwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpO1xuY29uc3QgR2FsbGVyeSA9IHN1Ym1pc3Npb24uR2FsbGVyeSB8fCBzdWJtaXNzaW9uLmRlZmF1bHQgfHwgc3VibWlzc2lvbjtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMzogQ0hFQ0tMSVNUIFBFTklMQUlBTiAoVElEQUsgQkVSVUJBSClcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmRlc2NyaWJlKCdQcmFrdGlrdW06IEtvbXBvbmVuIEdhbGxlcnknLCAoKSA9PiB7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgcmVuZGVyKDxHYWxsZXJ5IC8+KTtcbiAgfSk7XG5cbiAgdGVzdCgnS3JpdGVyaWEgMTogSGFydXMgbWVuYW1waWxrYW4gc2VidWFoIHBlbWJ1bmdrdXMgdXRhbWEnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBjb250YWluZXIgfSA9IHJlbmRlcig8R2FsbGVyeSAvPik7XG4gICAgZXhwZWN0KGNvbnRhaW5lci5maXJzdENoaWxkKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcblxuICB0ZXN0KCdLcml0ZXJpYSAyOiBIYXJ1cyBtZS1yZW5kZXIgVEVQQVQgMyBrb21wb25lbiBQcm9maWxlICh0aXJ1YW4pJywgKCkgPT4ge1xuICAgIGNvbnN0IHByb2ZpbGVNb2NrcyA9IHNjcmVlbi5nZXRBbGxCeVRlc3RJZCgncHJvZmlsZS1jb21wb25lbnQnKTtcbiAgICBleHBlY3QocHJvZmlsZU1vY2tzKS50b0hhdmVMZW5ndGgoMyk7XG4gIH0pO1xuXG4gIHRlc3QoJ0tyaXRlcmlhIDM6IEtvbXBvbmVuIFwiR2FsbGVyeVwiIGhhcnVzIGRpZXhwb3J0IGRlbmdhbiBiZW5hcicsICgpID0+IHtcbiAgICAgIGV4cGVjdChHYWxsZXJ5KS50b0JlRGVmaW5lZCgpO1xuICB9KTtcblxufSk7XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQSxXQUFBLEdBQUtDLElBQUksQ0FBQyxXQUFXLEVBQUUsTUFBTTtFQUN6QixPQUFPLFNBQVNDLGFBQWFBLENBQUEsRUFBRztJQUM1QjtJQUNBLG9CQUFPLElBQUFDLFdBQUEsQ0FBQUMsR0FBQTtNQUFLLGVBQVk7SUFBbUIsQ0FBTSxDQUFDO0VBQ3RELENBQUM7QUFDTCxDQUFDLEVBQUU7RUFBRUMsT0FBTyxFQUFFO0FBQUssQ0FBQyxDQUFDOztBQUdyQjtBQUNBO0FBQ0E7QUFBQSxJQUFBRixXQUFBLEdBQUFHLE9BQUE7QUFBQSxTQUFBTixZQUFBO0VBQUE7SUFBQU87RUFBQSxJQUFBRCxPQUFBO0VBQUFOLFdBQUEsR0FBQUEsQ0FBQSxLQUFBTyxJQUFBO0VBQUEsT0FBQUEsSUFBQTtBQUFBO0FBdEJBO0FBQ0E7QUFDQTtBQUNBRCxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDcEMsTUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUcsTUFBTTtFQUFFQztBQUFPLENBQUMsR0FBR0osT0FBTyxDQUFDLHdCQUF3QixDQUFDO0FBa0I1RCxJQUFJLENBQUNLLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxlQUFlLEVBQUU7RUFDaEMsTUFBTSxJQUFJQyxLQUFLLENBQUMsK0NBQStDLENBQUM7QUFDbEU7QUFDQSxNQUFNQyxVQUFVLEdBQUdULE9BQU8sQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNDLGVBQWUsQ0FBQztBQUN2RCxNQUFNRyxPQUFPLEdBQUdELFVBQVUsQ0FBQ0MsT0FBTyxJQUFJRCxVQUFVLENBQUNFLE9BQU8sSUFBSUYsVUFBVTs7QUFHdEU7QUFDQTtBQUNBO0FBQ0FHLFFBQVEsQ0FBQyw2QkFBNkIsRUFBRSxNQUFNO0VBRTVDQyxVQUFVLENBQUMsTUFBTTtJQUNmVixNQUFNLGNBQUMsSUFBQU4sV0FBQSxDQUFBQyxHQUFBLEVBQUNZLE9BQU8sSUFBRSxDQUFDLENBQUM7RUFDckIsQ0FBQyxDQUFDO0VBRUZJLElBQUksQ0FBQyx1REFBdUQsRUFBRSxNQUFNO0lBQ2xFLE1BQU07TUFBRUM7SUFBVSxDQUFDLEdBQUdaLE1BQU0sY0FBQyxJQUFBTixXQUFBLENBQUFDLEdBQUEsRUFBQ1ksT0FBTyxJQUFFLENBQUMsQ0FBQztJQUN6Q00sTUFBTSxDQUFDRCxTQUFTLENBQUNFLFVBQVUsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0VBQ2xELENBQUMsQ0FBQztFQUVGSixJQUFJLENBQUMsK0RBQStELEVBQUUsTUFBTTtJQUMxRSxNQUFNSyxZQUFZLEdBQUdmLE1BQU0sQ0FBQ2dCLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBQztJQUMvREosTUFBTSxDQUFDRyxZQUFZLENBQUMsQ0FBQ0UsWUFBWSxDQUFDLENBQUMsQ0FBQztFQUN0QyxDQUFDLENBQUM7RUFFRlAsSUFBSSxDQUFDLDREQUE0RCxFQUFFLE1BQU07SUFDckVFLE1BQU0sQ0FBQ04sT0FBTyxDQUFDLENBQUNZLFdBQVcsQ0FBQyxDQUFDO0VBQ2pDLENBQUMsQ0FBQztBQUVKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==