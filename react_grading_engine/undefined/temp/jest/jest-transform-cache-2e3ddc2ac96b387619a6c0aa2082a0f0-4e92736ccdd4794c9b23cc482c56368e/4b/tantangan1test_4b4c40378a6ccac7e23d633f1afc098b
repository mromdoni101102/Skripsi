dd46da31c567be43579d94c96996e286
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');

// ======================================================================
// TIDAK ADA MOCKING DEPENDENSI KARENA KODE INI MANDIRI
// ======================================================================

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
// Mengambil komponen utama dari file jawaban mahasiswa.
// Kita asumsikan namanya Tantangan1 atau PackingList
const Tantangan1 = require(process.env.SUBMISSION_PATH).default;

// ======================================================================
// BAGIAN 3: "CHECKLIST" PENILAIAN FUNGSIONAL
// ======================================================================
describe('Praktikum: Komponen PackingList (Tantangan 1)', () => {
  beforeEach(() => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Tantangan1, {}));
  });
  test('Kriteria 1: Harus menampilkan judul utama "Sally Ride\'s Packing List"', () => {
    const heading = screen.getByRole('heading', {
      level: 1,
      name: /Sally Ride's Packing List/i
    });
    expect(heading).toBeInTheDocument();
  });
  test('Kriteria 2: Harus me-render sebuah daftar (<ul>) dengan tepat 3 item (<li>)', () => {
    const list = screen.getByRole('list');
    expect(list).toBeInTheDocument();
    const listItems = screen.getAllByRole('listitem');
    expect(listItems).toHaveLength(3);
  });
  test('Kriteria 3: Item yang sudah dikemas (isPacked: true) harus menampilkan tanda centang ✅', () => {
    // Cari item berdasarkan teksnya dan pastikan ada tanda centang
    const spaceSuit = screen.getByText(/Space suit/i);
    expect(spaceSuit).toHaveTextContent('Space suit ✅');
    const helmet = screen.getByText(/Helmet with a golden leaf/i);
    expect(helmet).toHaveTextContent('Helmet with a golden leaf ✅');
  });
  test('Kriteria 4: Item yang belum dikemas (isPacked: false) harus menampilkan tanda silang ❌', () => {
    // Cari item berdasarkan teksnya dan pastikan ada tanda silang
    const photo = screen.getByText(/Photo of Tam/i);
    expect(photo).toHaveTextContent('Photo of Tam ❌');
  });
  test('Kriteria 5: Setiap item list harus memiliki class "item"', () => {
    const listItems = screen.getAllByRole('listitem');
    listItems.forEach(item => {
      expect(item).toHaveClass('item');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJwcm9jZXNzIiwiZW52IiwiU1VCTUlTU0lPTl9QQVRIIiwiRXJyb3IiLCJUYW50YW5nYW4xIiwiZGVmYXVsdCIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsIl9qc3hSdW50aW1lIiwianN4IiwidGVzdCIsImhlYWRpbmciLCJnZXRCeVJvbGUiLCJsZXZlbCIsIm5hbWUiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsImxpc3QiLCJsaXN0SXRlbXMiLCJnZXRBbGxCeVJvbGUiLCJ0b0hhdmVMZW5ndGgiLCJzcGFjZVN1aXQiLCJnZXRCeVRleHQiLCJ0b0hhdmVUZXh0Q29udGVudCIsImhlbG1ldCIsInBob3RvIiwiZm9yRWFjaCIsIml0ZW0iLCJ0b0hhdmVDbGFzcyJdLCJzb3VyY2VzIjpbInRhbnRhbmdhbjEudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbnJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgcmVuZGVyLCBzY3JlZW4gfSA9IHJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnKTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVElEQUsgQURBIE1PQ0tJTkcgREVQRU5ERU5TSSBLQVJFTkEgS09ERSBJTkkgTUFORElSSVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJBR0lBTiAyOiBNRU5HQU1CSUwgS09ERSBNQUhBU0lTV0Fcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmlmICghcHJvY2Vzcy5lbnYuU1VCTUlTU0lPTl9QQVRIKSB7XG4gIHRocm93IG5ldyBFcnJvcignU1VCTUlTU0lPTl9QQVRIIGVudmlyb25tZW50IHZhcmlhYmxlIG5vdCBzZXQuJyk7XG59XG4vLyBNZW5nYW1iaWwga29tcG9uZW4gdXRhbWEgZGFyaSBmaWxlIGphd2FiYW4gbWFoYXNpc3dhLlxuLy8gS2l0YSBhc3Vtc2lrYW4gbmFtYW55YSBUYW50YW5nYW4xIGF0YXUgUGFja2luZ0xpc3RcbmNvbnN0IFRhbnRhbmdhbjEgPSByZXF1aXJlKHByb2Nlc3MuZW52LlNVQk1JU1NJT05fUEFUSCkuZGVmYXVsdDtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMzogXCJDSEVDS0xJU1RcIiBQRU5JTEFJQU4gRlVOR1NJT05BTFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZGVzY3JpYmUoJ1ByYWt0aWt1bTogS29tcG9uZW4gUGFja2luZ0xpc3QgKFRhbnRhbmdhbiAxKScsICgpID0+IHtcblxuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICByZW5kZXIoPFRhbnRhbmdhbjEgLz4pO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMTogSGFydXMgbWVuYW1waWxrYW4ganVkdWwgdXRhbWEgXCJTYWxseSBSaWRlXFwncyBQYWNraW5nIExpc3RcIicsICgpID0+IHtcbiAgICAgICAgY29uc3QgaGVhZGluZyA9IHNjcmVlbi5nZXRCeVJvbGUoJ2hlYWRpbmcnLCB7IGxldmVsOiAxLCBuYW1lOiAvU2FsbHkgUmlkZSdzIFBhY2tpbmcgTGlzdC9pIH0pO1xuICAgICAgICBleHBlY3QoaGVhZGluZykudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDI6IEhhcnVzIG1lLXJlbmRlciBzZWJ1YWggZGFmdGFyICg8dWw+KSBkZW5nYW4gdGVwYXQgMyBpdGVtICg8bGk+KScsICgpID0+IHtcbiAgICAgICAgY29uc3QgbGlzdCA9IHNjcmVlbi5nZXRCeVJvbGUoJ2xpc3QnKTtcbiAgICAgICAgZXhwZWN0KGxpc3QpLnRvQmVJblRoZURvY3VtZW50KCk7XG5cbiAgICAgICAgY29uc3QgbGlzdEl0ZW1zID0gc2NyZWVuLmdldEFsbEJ5Um9sZSgnbGlzdGl0ZW0nKTtcbiAgICAgICAgZXhwZWN0KGxpc3RJdGVtcykudG9IYXZlTGVuZ3RoKDMpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMzogSXRlbSB5YW5nIHN1ZGFoIGRpa2VtYXMgKGlzUGFja2VkOiB0cnVlKSBoYXJ1cyBtZW5hbXBpbGthbiB0YW5kYSBjZW50YW5nIOKchScsICgpID0+IHtcbiAgICAgICAgLy8gQ2FyaSBpdGVtIGJlcmRhc2Fya2FuIHRla3NueWEgZGFuIHBhc3Rpa2FuIGFkYSB0YW5kYSBjZW50YW5nXG4gICAgICAgIGNvbnN0IHNwYWNlU3VpdCA9IHNjcmVlbi5nZXRCeVRleHQoL1NwYWNlIHN1aXQvaSk7XG4gICAgICAgIGV4cGVjdChzcGFjZVN1aXQpLnRvSGF2ZVRleHRDb250ZW50KCdTcGFjZSBzdWl0IOKchScpO1xuXG4gICAgICAgIGNvbnN0IGhlbG1ldCA9IHNjcmVlbi5nZXRCeVRleHQoL0hlbG1ldCB3aXRoIGEgZ29sZGVuIGxlYWYvaSk7XG4gICAgICAgIGV4cGVjdChoZWxtZXQpLnRvSGF2ZVRleHRDb250ZW50KCdIZWxtZXQgd2l0aCBhIGdvbGRlbiBsZWFmIOKchScpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgNDogSXRlbSB5YW5nIGJlbHVtIGRpa2VtYXMgKGlzUGFja2VkOiBmYWxzZSkgaGFydXMgbWVuYW1waWxrYW4gdGFuZGEgc2lsYW5nIOKdjCcsICgpID0+IHtcbiAgICAgICAgLy8gQ2FyaSBpdGVtIGJlcmRhc2Fya2FuIHRla3NueWEgZGFuIHBhc3Rpa2FuIGFkYSB0YW5kYSBzaWxhbmdcbiAgICAgICAgY29uc3QgcGhvdG8gPSBzY3JlZW4uZ2V0QnlUZXh0KC9QaG90byBvZiBUYW0vaSk7XG4gICAgICAgIGV4cGVjdChwaG90bykudG9IYXZlVGV4dENvbnRlbnQoJ1Bob3RvIG9mIFRhbSDinYwnKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDU6IFNldGlhcCBpdGVtIGxpc3QgaGFydXMgbWVtaWxpa2kgY2xhc3MgXCJpdGVtXCInLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGxpc3RJdGVtcyA9IHNjcmVlbi5nZXRBbGxCeVJvbGUoJ2xpc3RpdGVtJyk7XG4gICAgICAgIGxpc3RJdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgZXhwZWN0KGl0ZW0pLnRvSGF2ZUNsYXNzKCdpdGVtJyk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0FBLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUNwQyxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFRSxNQUFNO0VBQUVDO0FBQU8sQ0FBQyxHQUFHSCxPQUFPLENBQUMsd0JBQXdCLENBQUM7O0FBRTVEO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLENBQUNJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxlQUFlLEVBQUU7RUFDaEMsTUFBTSxJQUFJQyxLQUFLLENBQUMsK0NBQStDLENBQUM7QUFDbEU7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsVUFBVSxHQUFHUixPQUFPLENBQUNJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxlQUFlLENBQUMsQ0FBQ0csT0FBTzs7QUFHL0Q7QUFDQTtBQUNBO0FBQ0FDLFFBQVEsQ0FBQywrQ0FBK0MsRUFBRSxNQUFNO0VBRTVEQyxVQUFVLENBQUMsTUFBTTtJQUNiVCxNQUFNLGNBQUMsSUFBQVUsV0FBQSxDQUFBQyxHQUFBLEVBQUNMLFVBQVUsSUFBRSxDQUFDLENBQUM7RUFDMUIsQ0FBQyxDQUFDO0VBRUZNLElBQUksQ0FBQyx3RUFBd0UsRUFBRSxNQUFNO0lBQ2pGLE1BQU1DLE9BQU8sR0FBR1osTUFBTSxDQUFDYSxTQUFTLENBQUMsU0FBUyxFQUFFO01BQUVDLEtBQUssRUFBRSxDQUFDO01BQUVDLElBQUksRUFBRTtJQUE2QixDQUFDLENBQUM7SUFDN0ZDLE1BQU0sQ0FBQ0osT0FBTyxDQUFDLENBQUNLLGlCQUFpQixDQUFDLENBQUM7RUFDdkMsQ0FBQyxDQUFDO0VBRUZOLElBQUksQ0FBQyw2RUFBNkUsRUFBRSxNQUFNO0lBQ3RGLE1BQU1PLElBQUksR0FBR2xCLE1BQU0sQ0FBQ2EsU0FBUyxDQUFDLE1BQU0sQ0FBQztJQUNyQ0csTUFBTSxDQUFDRSxJQUFJLENBQUMsQ0FBQ0QsaUJBQWlCLENBQUMsQ0FBQztJQUVoQyxNQUFNRSxTQUFTLEdBQUduQixNQUFNLENBQUNvQixZQUFZLENBQUMsVUFBVSxDQUFDO0lBQ2pESixNQUFNLENBQUNHLFNBQVMsQ0FBQyxDQUFDRSxZQUFZLENBQUMsQ0FBQyxDQUFDO0VBQ3JDLENBQUMsQ0FBQztFQUVGVixJQUFJLENBQUMsd0ZBQXdGLEVBQUUsTUFBTTtJQUNqRztJQUNBLE1BQU1XLFNBQVMsR0FBR3RCLE1BQU0sQ0FBQ3VCLFNBQVMsQ0FBQyxhQUFhLENBQUM7SUFDakRQLE1BQU0sQ0FBQ00sU0FBUyxDQUFDLENBQUNFLGlCQUFpQixDQUFDLGNBQWMsQ0FBQztJQUVuRCxNQUFNQyxNQUFNLEdBQUd6QixNQUFNLENBQUN1QixTQUFTLENBQUMsNEJBQTRCLENBQUM7SUFDN0RQLE1BQU0sQ0FBQ1MsTUFBTSxDQUFDLENBQUNELGlCQUFpQixDQUFDLDZCQUE2QixDQUFDO0VBQ25FLENBQUMsQ0FBQztFQUVGYixJQUFJLENBQUMsd0ZBQXdGLEVBQUUsTUFBTTtJQUNqRztJQUNBLE1BQU1lLEtBQUssR0FBRzFCLE1BQU0sQ0FBQ3VCLFNBQVMsQ0FBQyxlQUFlLENBQUM7SUFDL0NQLE1BQU0sQ0FBQ1UsS0FBSyxDQUFDLENBQUNGLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDO0VBQ3JELENBQUMsQ0FBQztFQUVGYixJQUFJLENBQUMsMERBQTBELEVBQUUsTUFBTTtJQUNuRSxNQUFNUSxTQUFTLEdBQUduQixNQUFNLENBQUNvQixZQUFZLENBQUMsVUFBVSxDQUFDO0lBQ2pERCxTQUFTLENBQUNRLE9BQU8sQ0FBQ0MsSUFBSSxJQUFJO01BQ3RCWixNQUFNLENBQUNZLElBQUksQ0FBQyxDQUFDQyxXQUFXLENBQUMsTUFBTSxDQUFDO0lBQ3BDLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztBQUVOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==