df76c4760068e336754b6342ce387a22
"use strict";

// ======================================================================
// LANGKAH 1: BUAT KOMPONEN 'CARD' PALSU DI SINI
// ======================================================================
// Ini memberitahu Jest: "Setiap kali ada kode yang mencoba `import Card from './Card.js'`,
// jangan cari filenya. Pakai saja fungsi Card palsu yang sudah aku siapkan di sini."
// Ini adalah solusi untuk masalah 'Cannot find module'.
_getJestObj().mock('./Card.js', () => {
  // Fungsi ini akan menjadi komponen Card tiruan kita
  return function MockedCard({
    children
  }) {
    // Ia hanya akan me-render konten di dalam sebuah div biasa.
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: children
    });
  };
}, {
  virtual: true
});

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
// Mengambil komponen MyProfileV2 dari file jawaban mahasiswa
const MyProfileV2 = require(process.env.SUBMISSION_PATH).default;

// ======================================================================
// BAGIAN 3: TES YANG FOKUS PADA HASIL AKHIR
// ======================================================================
describe('Praktikum: Komponen MyProfileV2', () => {
  beforeEach(() => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(MyProfileV2, {}));
  });
  test('Kriteria 1: Harus menampilkan dua judul, yaitu "Foto" dan "Tentang"', () => {
    // Kita cari elemen heading yang berisi teks "Foto" dan "Tentang"
    const photoHeading = screen.getByRole('heading', {
      name: /Foto/i
    });
    const aboutHeading = screen.getByRole('heading', {
      name: /Tentang/i
    });
    expect(photoHeading).toBeInTheDocument();
    expect(aboutHeading).toBeInTheDocument();
  });
  test('Kriteria 2: Harus menampilkan gambar avatar Aklilu Lemma', () => {
    const avatarImage = screen.getByAltText('Aklilu Lemma');
    expect(avatarImage).toBeInTheDocument();
    expect(avatarImage).toHaveAttribute('src', 'https://i.imgur.com/OKS67lhm.jpg');
    expect(avatarImage).toHaveAttribute('width', '70');
  });
  test('Kriteria 3: Harus menampilkan paragraf deskripsi tentang Aklilu Lemma', () => {
    const description = screen.getByText(/seorang ilmuwan terkemuka dari Etiopia/i);
    expect(description).toBeInTheDocument();
  });
  test('Kriteria 4: Komponen "MyProfileV2" harus diexport dengan benar', () => {
    expect(MyProfileV2).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJNb2NrZWRDYXJkIiwiY2hpbGRyZW4iLCJfanN4UnVudGltZSIsImpzeCIsInZpcnR1YWwiLCJyZXF1aXJlIiwiamVzdCIsIlJlYWN0IiwicmVuZGVyIiwic2NyZWVuIiwicHJvY2VzcyIsImVudiIsIlNVQk1JU1NJT05fUEFUSCIsIkVycm9yIiwiTXlQcm9maWxlVjIiLCJkZWZhdWx0IiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwidGVzdCIsInBob3RvSGVhZGluZyIsImdldEJ5Um9sZSIsIm5hbWUiLCJhYm91dEhlYWRpbmciLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsImF2YXRhckltYWdlIiwiZ2V0QnlBbHRUZXh0IiwidG9IYXZlQXR0cmlidXRlIiwiZGVzY3JpcHRpb24iLCJnZXRCeVRleHQiLCJ0b0JlRGVmaW5lZCJdLCJzb3VyY2VzIjpbIm15cHJvZmlsZXYyLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAamVzdC1lbnZpcm9ubWVudCBqc2RvbVxuICovXG5yZXF1aXJlKCdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tJyk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHJlbmRlciwgc2NyZWVuIH0gPSByZXF1aXJlKCdAdGVzdGluZy1saWJyYXJ5L3JlYWN0Jyk7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIExBTkdLQUggMTogQlVBVCBLT01QT05FTiAnQ0FSRCcgUEFMU1UgREkgU0lOSVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gSW5pIG1lbWJlcml0YWh1IEplc3Q6IFwiU2V0aWFwIGthbGkgYWRhIGtvZGUgeWFuZyBtZW5jb2JhIGBpbXBvcnQgQ2FyZCBmcm9tICcuL0NhcmQuanMnYCxcbi8vIGphbmdhbiBjYXJpIGZpbGVueWEuIFBha2FpIHNhamEgZnVuZ3NpIENhcmQgcGFsc3UgeWFuZyBzdWRhaCBha3Ugc2lhcGthbiBkaSBzaW5pLlwiXG4vLyBJbmkgYWRhbGFoIHNvbHVzaSB1bnR1ayBtYXNhbGFoICdDYW5ub3QgZmluZCBtb2R1bGUnLlxuamVzdC5tb2NrKCcuL0NhcmQuanMnLCAoKSA9PiB7XG4gICAgLy8gRnVuZ3NpIGluaSBha2FuIG1lbmphZGkga29tcG9uZW4gQ2FyZCB0aXJ1YW4ga2l0YVxuICAgIHJldHVybiBmdW5jdGlvbiBNb2NrZWRDYXJkKHsgY2hpbGRyZW4gfSkge1xuICAgICAgICAvLyBJYSBoYW55YSBha2FuIG1lLXJlbmRlciBrb250ZW4gZGkgZGFsYW0gc2VidWFoIGRpdiBiaWFzYS5cbiAgICAgICAgcmV0dXJuIDxkaXY+e2NoaWxkcmVufTwvZGl2PjtcbiAgICB9O1xufSwgeyB2aXJ0dWFsOiB0cnVlIH0pO1xuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJBR0lBTiAyOiBNRU5HQU1CSUwgS09ERSBNQUhBU0lTV0Fcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmlmICghcHJvY2Vzcy5lbnYuU1VCTUlTU0lPTl9QQVRIKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTVUJNSVNTSU9OX1BBVEggZW52aXJvbm1lbnQgdmFyaWFibGUgbm90IHNldC4nKTtcbn1cbi8vIE1lbmdhbWJpbCBrb21wb25lbiBNeVByb2ZpbGVWMiBkYXJpIGZpbGUgamF3YWJhbiBtYWhhc2lzd2FcbmNvbnN0IE15UHJvZmlsZVYyID0gcmVxdWlyZShwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpLmRlZmF1bHQ7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDM6IFRFUyBZQU5HIEZPS1VTIFBBREEgSEFTSUwgQUtISVJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmRlc2NyaWJlKCdQcmFrdGlrdW06IEtvbXBvbmVuIE15UHJvZmlsZVYyJywgKCkgPT4ge1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIHJlbmRlcig8TXlQcm9maWxlVjIgLz4pO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMTogSGFydXMgbWVuYW1waWxrYW4gZHVhIGp1ZHVsLCB5YWl0dSBcIkZvdG9cIiBkYW4gXCJUZW50YW5nXCInLCAoKSA9PiB7XG4gICAgICAgIC8vIEtpdGEgY2FyaSBlbGVtZW4gaGVhZGluZyB5YW5nIGJlcmlzaSB0ZWtzIFwiRm90b1wiIGRhbiBcIlRlbnRhbmdcIlxuICAgICAgICBjb25zdCBwaG90b0hlYWRpbmcgPSBzY3JlZW4uZ2V0QnlSb2xlKCdoZWFkaW5nJywgeyBuYW1lOiAvRm90by9pIH0pO1xuICAgICAgICBjb25zdCBhYm91dEhlYWRpbmcgPSBzY3JlZW4uZ2V0QnlSb2xlKCdoZWFkaW5nJywgeyBuYW1lOiAvVGVudGFuZy9pIH0pO1xuICAgICAgICBleHBlY3QocGhvdG9IZWFkaW5nKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgICBleHBlY3QoYWJvdXRIZWFkaW5nKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMjogSGFydXMgbWVuYW1waWxrYW4gZ2FtYmFyIGF2YXRhciBBa2xpbHUgTGVtbWEnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGF2YXRhckltYWdlID0gc2NyZWVuLmdldEJ5QWx0VGV4dCgnQWtsaWx1IExlbW1hJyk7XG4gICAgICAgIGV4cGVjdChhdmF0YXJJbWFnZSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICAgICAgZXhwZWN0KGF2YXRhckltYWdlKS50b0hhdmVBdHRyaWJ1dGUoJ3NyYycsICdodHRwczovL2kuaW1ndXIuY29tL09LUzY3bGhtLmpwZycpO1xuICAgICAgICBleHBlY3QoYXZhdGFySW1hZ2UpLnRvSGF2ZUF0dHJpYnV0ZSgnd2lkdGgnLCAnNzAnKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDM6IEhhcnVzIG1lbmFtcGlsa2FuIHBhcmFncmFmIGRlc2tyaXBzaSB0ZW50YW5nIEFrbGlsdSBMZW1tYScsICgpID0+IHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBzY3JlZW4uZ2V0QnlUZXh0KC9zZW9yYW5nIGlsbXV3YW4gdGVya2VtdWthIGRhcmkgRXRpb3BpYS9pKTtcbiAgICAgICAgZXhwZWN0KGRlc2NyaXB0aW9uKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgNDogS29tcG9uZW4gXCJNeVByb2ZpbGVWMlwiIGhhcnVzIGRpZXhwb3J0IGRlbmdhbiBiZW5hcicsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KE15UHJvZmlsZVYyKS50b0JlRGVmaW5lZCgpO1xuICAgIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLFdBQVcsRUFBRSxNQUFNO0VBQ3pCO0VBQ0EsT0FBTyxTQUFTQyxVQUFVQSxDQUFDO0lBQUVDO0VBQVMsQ0FBQyxFQUFFO0lBQ3JDO0lBQ0Esb0JBQU8sSUFBQUMsV0FBQSxDQUFBQyxHQUFBO01BQUFGLFFBQUEsRUFBTUE7SUFBUSxDQUFNLENBQUM7RUFDaEMsQ0FBQztBQUNMLENBQUMsRUFBRTtFQUFFRyxPQUFPLEVBQUU7QUFBSyxDQUFDLENBQUM7O0FBR3JCO0FBQ0E7QUFDQTtBQUFBLElBQUFGLFdBQUEsR0FBQUcsT0FBQTtBQUFBLFNBQUFQLFlBQUE7RUFBQTtJQUFBUTtFQUFBLElBQUFELE9BQUE7RUFBQVAsV0FBQSxHQUFBQSxDQUFBLEtBQUFRLElBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUF4QkE7QUFDQTtBQUNBO0FBQ0FELE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUNwQyxNQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFRyxNQUFNO0VBQUVDO0FBQU8sQ0FBQyxHQUFHSixPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFvQjVELElBQUksQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNDLGVBQWUsRUFBRTtFQUM5QixNQUFNLElBQUlDLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQztBQUNwRTtBQUNBO0FBQ0EsTUFBTUMsV0FBVyxHQUFHVCxPQUFPLENBQUNLLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxlQUFlLENBQUMsQ0FBQ0csT0FBTzs7QUFHaEU7QUFDQTtBQUNBO0FBQ0FDLFFBQVEsQ0FBQyxpQ0FBaUMsRUFBRSxNQUFNO0VBRTlDQyxVQUFVLENBQUMsTUFBTTtJQUNiVCxNQUFNLGNBQUMsSUFBQU4sV0FBQSxDQUFBQyxHQUFBLEVBQUNXLFdBQVcsSUFBRSxDQUFDLENBQUM7RUFDM0IsQ0FBQyxDQUFDO0VBRUZJLElBQUksQ0FBQyxxRUFBcUUsRUFBRSxNQUFNO0lBQzlFO0lBQ0EsTUFBTUMsWUFBWSxHQUFHVixNQUFNLENBQUNXLFNBQVMsQ0FBQyxTQUFTLEVBQUU7TUFBRUMsSUFBSSxFQUFFO0lBQVEsQ0FBQyxDQUFDO0lBQ25FLE1BQU1DLFlBQVksR0FBR2IsTUFBTSxDQUFDVyxTQUFTLENBQUMsU0FBUyxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFXLENBQUMsQ0FBQztJQUN0RUUsTUFBTSxDQUFDSixZQUFZLENBQUMsQ0FBQ0ssaUJBQWlCLENBQUMsQ0FBQztJQUN4Q0QsTUFBTSxDQUFDRCxZQUFZLENBQUMsQ0FBQ0UsaUJBQWlCLENBQUMsQ0FBQztFQUM1QyxDQUFDLENBQUM7RUFFRk4sSUFBSSxDQUFDLDBEQUEwRCxFQUFFLE1BQU07SUFDbkUsTUFBTU8sV0FBVyxHQUFHaEIsTUFBTSxDQUFDaUIsWUFBWSxDQUFDLGNBQWMsQ0FBQztJQUN2REgsTUFBTSxDQUFDRSxXQUFXLENBQUMsQ0FBQ0QsaUJBQWlCLENBQUMsQ0FBQztJQUN2Q0QsTUFBTSxDQUFDRSxXQUFXLENBQUMsQ0FBQ0UsZUFBZSxDQUFDLEtBQUssRUFBRSxrQ0FBa0MsQ0FBQztJQUM5RUosTUFBTSxDQUFDRSxXQUFXLENBQUMsQ0FBQ0UsZUFBZSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7RUFDdEQsQ0FBQyxDQUFDO0VBRUZULElBQUksQ0FBQyx1RUFBdUUsRUFBRSxNQUFNO0lBQ2hGLE1BQU1VLFdBQVcsR0FBR25CLE1BQU0sQ0FBQ29CLFNBQVMsQ0FBQyx5Q0FBeUMsQ0FBQztJQUMvRU4sTUFBTSxDQUFDSyxXQUFXLENBQUMsQ0FBQ0osaUJBQWlCLENBQUMsQ0FBQztFQUMzQyxDQUFDLENBQUM7RUFFRk4sSUFBSSxDQUFDLGdFQUFnRSxFQUFFLE1BQU07SUFDekVLLE1BQU0sQ0FBQ1QsV0FBVyxDQUFDLENBQUNnQixXQUFXLENBQUMsQ0FBQztFQUNyQyxDQUFDLENBQUM7QUFDTixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=