{"version":3,"names":["_getJestObj","mock","MockedProfile","_jsxRuntime","jsx","virtual","getImageUrl","person","imageId","require","jest","React","render","screen","process","env","SUBMISSION_PATH","Error","submission","MyGallery","default","describe","beforeEach","test","mainHeading","getByRole","level","name","expect","toBeInTheDocument","mariaHeading","katsukoHeading","profileMocks","getAllByTestId","toHaveLength","getByText"],"sources":["mygallery.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN (MOCKING YANG LEBIH PINTAR)\n// ======================================================================\n\n// Ini adalah trik yang sangat kuat.\n// Kita memberitahu Jest: \"Jika ada kode yang mencoba `import Profile from './profile.js'`\n// atau dari path serupa, jangan cari file aslinya. Berikan saja komponen tiruan ini.\"\n// Ini akan mencegah error \"Cannot find module\" di dalam kode mahasiswa.\njest.mock('./profile', () => {\n    return function MockedProfile() {\n        // Kita beri tanda pengenal agar bisa kita hitung di dalam tes.\n        return <div data-testid=\"profile-component\"></div>;\n    };\n}, { virtual: true }); // virtual: true membuatnya tidak perlu file asli sama sekali.\n\n// Lakukan hal yang sama untuk getImageUrl jika dibutuhkan\njest.mock('./utils', () => ({\n    getImageUrl: (person) => `https://i.imgur.com/${person.imageId}s.jpg`,\n}), { virtual: true });\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\nconst submission = require(process.env.SUBMISSION_PATH);\nconst MyGallery = submission.MyGallery || submission.default || submission;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN YANG SUDAH DISESUAIKAN\n// ======================================================================\ndescribe('Praktikum: Komponen MyGallery', () => {\n\n  beforeEach(() => {\n    // Dengan mock yang benar, render ini seharusnya tidak lagi crash.\n    render(<MyGallery />);\n  });\n\n  test('Kriteria 1: Harus menampilkan judul utama \"Notable Scientists\"', () => {\n    const mainHeading = screen.getByRole('heading', { level: 1, name: /Notable Scientists/i });\n    expect(mainHeading).toBeInTheDocument();\n  });\n\n  test('Kriteria 2: Harus menampilkan DUA nama ilmuwan sebagai sub-judul', () => {\n    const mariaHeading = screen.getByRole('heading', { name: /Maria SkÅ‚odowska-Curie/i });\n    const katsukoHeading = screen.getByRole('heading', { name: /Katsuko Saruhashi/i });\n\n    expect(mariaHeading).toBeInTheDocument();\n    expect(katsukoHeading).toBeInTheDocument();\n  });\n\n  test('Kriteria 3: Harus me-render TEPAT 2 komponen Profile tiruan', () => {\n    // Kita sekarang bisa mencari 'data-testid' dari komponen tiruan kita.\n    const profileMocks = screen.getAllByTestId('profile-component');\n    expect(profileMocks).toHaveLength(2);\n  });\n\n  test('Kriteria 4: Harus menampilkan detail spesifik seperti profesi', () => {\n    // Kita tetap bisa menguji teks yang seharusnya ada di dalam komponen MyGallery.\n    expect(screen.getByText(/Fisikawan dan kimiawan/i)).toBeInTheDocument();\n    expect(screen.getByText(/Ahli Geokimia/i)).toBeInTheDocument();\n  });\n\n});\n"],"mappings":"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","ignoreList":[]}