{"version":3,"names":["require","React","render","screen","process","env","SUBMISSION_PATH","Error","Tantangan1","default","describe","beforeEach","_jsxRuntime","jsx","test","heading","getByRole","level","name","expect","toBeInTheDocument","list","section","closest","listItems","getAllByRole","toHaveLength","forEach","item","toHaveClass","spaceSuit","getByText","toHaveTextContent","helmet","photo","packedItems","getAllByText","unpackedItems","toBeDefined"],"sources":["tantangan1.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// TIDAK ADA MOCKING DEPENDENSI KARENA KODE INI MANDIRI\n// ======================================================================\n\n\n// ======================================================================\n// MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Mengambil komponen utama dari file jawaban mahasiswa.\nconst Tantangan1 = require(process.env.SUBMISSION_PATH).default;\n\n\n// ======================================================================\n// CHECKLIST PENILAIAN FUNGSIONAL (VERSI LENGKAP ANDA)\n// ======================================================================\ndescribe('Praktikum: Komponen PackingList (Tantangan 1)', () => {\n\n    // Render komponen sebelum setiap tes agar tidak perlu diulang\n    beforeEach(() => {\n        render(<Tantangan1 />);\n    });\n\n    test('Kriteria 1: Harus menampilkan judul utama \"Sally Ride\\'s Packing List\"', () => {\n        const heading = screen.getByRole('heading', { level: 1, name: /Sally Ride's Packing List/i });\n        expect(heading).toBeInTheDocument();\n    });\n\n    test('Kriteria 2: Harus me-render struktur dasar (section > ul > 3 li)', () => {\n        const list = screen.getByRole('list'); // Mencari <ul>\n        expect(list).toBeInTheDocument();\n\n        // Memastikan list berada di dalam section\n        const section = list.closest('section');\n        expect(section).toBeInTheDocument();\n\n        const listItems = screen.getAllByRole('listitem'); // Mencari semua <li>\n        expect(listItems).toHaveLength(3);\n    });\n\n    test('Kriteria 3: Semua item list harus memiliki class \"item\"', () => {\n        const listItems = screen.getAllByRole('listitem');\n        listItems.forEach(item => {\n            expect(item).toHaveClass('item');\n        });\n    });\n\n    test('Kriteria 4: Item yang dikemas (isPacked=true) harus menampilkan teks dan simbol ✅', () => {\n        // Cari item berdasarkan teksnya dan pastikan ada tanda centang\n        const spaceSuit = screen.getByText(/Space suit/i);\n        expect(spaceSuit).toHaveTextContent('Space suit ✅');\n\n        const helmet = screen.getByText(/Helmet with a golden leaf/i);\n        expect(helmet).toHaveTextContent('Helmet with a golden leaf ✅');\n    });\n\n    test('Kriteria 5: Item yang belum dikemas (isPacked=false) harus menampilkan teks dan simbol ❌', () => {\n        // Cari item berdasarkan teksnya dan pastikan ada tanda silang\n        const photo = screen.getByText(/Photo of Tam/i);\n        expect(photo).toHaveTextContent('Photo of Tam ❌');\n    });\n\n    test('Kriteria 6: Harus ada tepat 2 item yang dikemas (✅) dan 1 item yang tidak (❌)', () => {\n        // Tes ini memvalidasi logika kondisional secara keseluruhan\n        const packedItems = screen.getAllByText('✅');\n        expect(packedItems).toHaveLength(2);\n\n        const unpackedItems = screen.getAllByText('❌');\n        expect(unpackedItems).toHaveLength(1);\n    });\n\n    test('Kriteria 7: Komponen harus diexport sebagai default dengan benar', () => {\n        expect(Tantangan1).toBeDefined();\n    });\n});\n"],"mappings":"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","ignoreList":[]}