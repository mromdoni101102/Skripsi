{"version":3,"names":["_getJestObj","mock","getImageUrl","imageId","virtual","_jsxRuntime","require","jest","React","render","screen","process","env","SUBMISSION_PATH","Error","submission","MyGallery","default","describe","beforeEach","jsx","test","mainHeading","getByRole","level","name","expect","toBeInTheDocument","mariaHeading","katsukoHeading","mariaAvatar","getByAltText","toHaveAttribute","katsukoAvatar","getByText","toBeDefined"],"sources":["mygallery.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN (MOCKING YANG TEPAT SASARAN)\n// ======================================================================\n// Kode mahasiswa membutuhkan 'getImageUrl' dari path ini.\n// Kita harus membuat mock yang ALAMATNYA SAMA PERSIS.\n// jest.mock yang baru\njest.mock('../../utils/utils.js', () => ({\n  // Terima argumen sebagai 'imageId' (sebuah string), bukan 'person' (objek)\n  getImageUrl: (imageId) => `https://i.imgur.com/${imageId}s.jpg`,\n}), { virtual: true });\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Kita ambil komponen MyGallery dari file mahasiswa\nconst submission = require(process.env.SUBMISSION_PATH);\nconst MyGallery = submission.MyGallery || submission.default || submission;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL (VERSI LENGKAP ANDA)\n// ======================================================================\ndescribe('Praktikum: Komponen MyGallery dan Profile', () => {\n\n    // Render komponen mahasiswa sebelum setiap tes\n    beforeEach(() => {\n        render(<MyGallery />);\n    });\n\n    test('Kriteria 1: Harus menampilkan judul utama \"Notable Scientists\"', () => {\n        const mainHeading = screen.getByRole('heading', { level: 1, name: /Notable Scientists/i });\n        expect(mainHeading).toBeInTheDocument();\n    });\n\n    test('Kriteria 2: Harus menampilkan DUA nama ilmuwan sebagai sub-judul (di dalam tag <h2>)', () => {\n        const mariaHeading = screen.getByRole('heading', { level: 2, name: /Maria Skłodowska-Curie/i });\n        const katsukoHeading = screen.getByRole('heading', { level: 2, name: /Katsuko Saruhashi/i });\n\n        expect(mariaHeading).toBeInTheDocument();\n        expect(katsukoHeading).toBeInTheDocument();\n    });\n\n    test('Kriteria 3: Harus menampilkan gambar avatar dengan SUMBER (src) dan TULISAN ALT yang benar', () => {\n        const mariaAvatar = screen.getByAltText('Maria Skłodowska-Curie');\n        expect(mariaAvatar).toBeInTheDocument();\n        expect(mariaAvatar).toHaveAttribute('src', 'https://i.imgur.com/szV5sdGs.jpg');\n\n        const katsukoAvatar = screen.getByAltText('Katsuko Saruhashi');\n        expect(katsukoAvatar).toBeInTheDocument();\n        expect(katsukoAvatar).toHaveAttribute('src', 'https://i.imgur.com/YfeOqp2s.jpg');\n    });\n\n    test('Kriteria 4: Harus menampilkan detail profesi untuk kedua ilmuwan', () => {\n        expect(screen.getByText(/Fisikawan dan kimiawan/i)).toBeInTheDocument();\n        expect(screen.getByText(/Ahli Geokimia/i)).toBeInTheDocument();\n    });\n\n    test('Kriteria 5: Harus menampilkan jumlah penghargaan yang benar', () => {\n        expect(screen.getByText(/Penghargaan: 4/)).toBeInTheDocument();\n        expect(screen.getByText(/Penghargaan: 2/)).toBeInTheDocument();\n    });\n\n    test('Kriteria 6: Harus menampilkan daftar penghargaan yang benar', () => {\n        expect(screen.getByText(/Penghargaan Nobel Fisika, Penghargaan Nobel Kimia/)).toBeInTheDocument();\n        expect(screen.getByText(/Penghargaan Miyake Geokimia, Penghargaan Tanaka/)).toBeInTheDocument();\n    });\n\n    test('Kriteria 7: Komponen \"MyGallery\" harus diexport dengan benar', () => {\n        expect(MyGallery).toBeDefined();\n    });\n});\n"],"mappings":"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","ignoreList":[]}