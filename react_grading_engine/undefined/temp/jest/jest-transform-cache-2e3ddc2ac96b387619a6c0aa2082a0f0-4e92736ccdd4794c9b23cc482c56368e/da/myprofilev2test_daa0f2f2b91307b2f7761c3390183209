5742c4ebd0329988da6c8ff64f1177d6
"use strict";

// ======================================================================
// BAGIAN 1: MENYIAPKAN "KARTU PALSU"
// ======================================================================
// Ini memberitahu Jest: "Aku tahu kode mahasiswa butuh './Card.js'.
// Ini adalah versi palsunya, gunakan ini."
// Ini harus sama persis dengan path yang ada di `import` mahasiswa.
_getJestObj().mock('./Card.js', () => {
  // Fungsi ini akan menjadi komponen Card tiruan kita
  return function MockedCard({
    children
  }) {
    // Kita beri class "card-mock" untuk membuktikan ia terpanggil
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "card-mock",
      children: children
    });
  };
}, {
  virtual: true
}); // virtual: true penting agar tidak butuh file fisik

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
const submission = require(process.env.SUBMISSION_PATH);
const MyProfileV2 = submission.MyProfileV2 || submission.default || submission;

// ======================================================================
// BAGIAN 3: SATU TES UNTUK MEMBUKTIKAN SEMUANYA
// ======================================================================
describe('Praktikum: Komponen MyProfileV2', () => {
  test('Kriteria Paling Dasar: Komponen harus bisa dirender tanpa crash', () => {
    // Jika tes ini LULUS, berarti masalah dependency sudah teratasi.
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(MyProfileV2, {}));

    // Kita cek apakah "Kartu Palsu" kita benar-benar muncul di layar.
    // Ini membuktikan bahwa mocking berhasil.
    const mockedCards = screen.getAllByRole('generic', {
      name: ''
    }).filter(el => el.classList.contains('card-mock'));
    expect(mockedCards.length).toBe(2);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJNb2NrZWRDYXJkIiwiY2hpbGRyZW4iLCJfanN4UnVudGltZSIsImpzeCIsImNsYXNzTmFtZSIsInZpcnR1YWwiLCJyZXF1aXJlIiwiamVzdCIsIlJlYWN0IiwicmVuZGVyIiwic2NyZWVuIiwicHJvY2VzcyIsImVudiIsIlNVQk1JU1NJT05fUEFUSCIsIkVycm9yIiwic3VibWlzc2lvbiIsIk15UHJvZmlsZVYyIiwiZGVmYXVsdCIsImRlc2NyaWJlIiwidGVzdCIsIm1vY2tlZENhcmRzIiwiZ2V0QWxsQnlSb2xlIiwibmFtZSIsImZpbHRlciIsImVsIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJleHBlY3QiLCJsZW5ndGgiLCJ0b0JlIl0sInNvdXJjZXMiOlsibXlwcm9maWxldjIudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbnJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgcmVuZGVyLCBzY3JlZW4gfSA9IHJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnKTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDE6IE1FTllJQVBLQU4gXCJLQVJUVSBQQUxTVVwiXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBJbmkgbWVtYmVyaXRhaHUgSmVzdDogXCJBa3UgdGFodSBrb2RlIG1haGFzaXN3YSBidXR1aCAnLi9DYXJkLmpzJy5cbi8vIEluaSBhZGFsYWggdmVyc2kgcGFsc3VueWEsIGd1bmFrYW4gaW5pLlwiXG4vLyBJbmkgaGFydXMgc2FtYSBwZXJzaXMgZGVuZ2FuIHBhdGggeWFuZyBhZGEgZGkgYGltcG9ydGAgbWFoYXNpc3dhLlxuamVzdC5tb2NrKCcuL0NhcmQuanMnLCAoKSA9PiB7XG4gICAgLy8gRnVuZ3NpIGluaSBha2FuIG1lbmphZGkga29tcG9uZW4gQ2FyZCB0aXJ1YW4ga2l0YVxuICAgIHJldHVybiBmdW5jdGlvbiBNb2NrZWRDYXJkKHsgY2hpbGRyZW4gfSkge1xuICAgICAgICAvLyBLaXRhIGJlcmkgY2xhc3MgXCJjYXJkLW1vY2tcIiB1bnR1ayBtZW1idWt0aWthbiBpYSB0ZXJwYW5nZ2lsXG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtbW9ja1wiPntjaGlsZHJlbn08L2Rpdj47XG4gICAgfTtcbn0sIHsgdmlydHVhbDogdHJ1ZSB9KTsgLy8gdmlydHVhbDogdHJ1ZSBwZW50aW5nIGFnYXIgdGlkYWsgYnV0dWggZmlsZSBmaXNpa1xuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJBR0lBTiAyOiBNRU5HQU1CSUwgS09ERSBNQUhBU0lTV0Fcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmlmICghcHJvY2Vzcy5lbnYuU1VCTUlTU0lPTl9QQVRIKSB7XG4gIHRocm93IG5ldyBFcnJvcignU1VCTUlTU0lPTl9QQVRIIGVudmlyb25tZW50IHZhcmlhYmxlIG5vdCBzZXQuJyk7XG59XG5jb25zdCBzdWJtaXNzaW9uID0gcmVxdWlyZShwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpO1xuY29uc3QgTXlQcm9maWxlVjIgPSBzdWJtaXNzaW9uLk15UHJvZmlsZVYyIHx8IHN1Ym1pc3Npb24uZGVmYXVsdCB8fCBzdWJtaXNzaW9uO1xuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJBR0lBTiAzOiBTQVRVIFRFUyBVTlRVSyBNRU1CVUtUSUtBTiBTRU1VQU5ZQVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZGVzY3JpYmUoJ1ByYWt0aWt1bTogS29tcG9uZW4gTXlQcm9maWxlVjInLCAoKSA9PiB7XG5cbiAgdGVzdCgnS3JpdGVyaWEgUGFsaW5nIERhc2FyOiBLb21wb25lbiBoYXJ1cyBiaXNhIGRpcmVuZGVyIHRhbnBhIGNyYXNoJywgKCkgPT4ge1xuICAgIC8vIEppa2EgdGVzIGluaSBMVUxVUywgYmVyYXJ0aSBtYXNhbGFoIGRlcGVuZGVuY3kgc3VkYWggdGVyYXRhc2kuXG4gICAgcmVuZGVyKDxNeVByb2ZpbGVWMiAvPik7XG5cbiAgICAvLyBLaXRhIGNlayBhcGFrYWggXCJLYXJ0dSBQYWxzdVwiIGtpdGEgYmVuYXItYmVuYXIgbXVuY3VsIGRpIGxheWFyLlxuICAgIC8vIEluaSBtZW1idWt0aWthbiBiYWh3YSBtb2NraW5nIGJlcmhhc2lsLlxuICAgIGNvbnN0IG1vY2tlZENhcmRzID0gc2NyZWVuLmdldEFsbEJ5Um9sZSgnZ2VuZXJpYycsIHsgbmFtZTogJycgfSkuZmlsdGVyKGVsID0+IGVsLmNsYXNzTGlzdC5jb250YWlucygnY2FyZC1tb2NrJykpO1xuICAgIGV4cGVjdChtb2NrZWRDYXJkcy5sZW5ndGgpLnRvQmUoMik7XG4gIH0pO1xuXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsV0FBVyxFQUFFLE1BQU07RUFDekI7RUFDQSxPQUFPLFNBQVNDLFVBQVVBLENBQUM7SUFBRUM7RUFBUyxDQUFDLEVBQUU7SUFDckM7SUFDQSxvQkFBTyxJQUFBQyxXQUFBLENBQUFDLEdBQUE7TUFBS0MsU0FBUyxFQUFDLFdBQVc7TUFBQUgsUUFBQSxFQUFFQTtJQUFRLENBQU0sQ0FBQztFQUN0RCxDQUFDO0FBQ0wsQ0FBQyxFQUFFO0VBQUVJLE9BQU8sRUFBRTtBQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7O0FBR3ZCO0FBQ0E7QUFDQTtBQUFBLElBQUFILFdBQUEsR0FBQUksT0FBQTtBQUFBLFNBQUFSLFlBQUE7RUFBQTtJQUFBUztFQUFBLElBQUFELE9BQUE7RUFBQVIsV0FBQSxHQUFBQSxDQUFBLEtBQUFTLElBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUF4QkE7QUFDQTtBQUNBO0FBQ0FELE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUNwQyxNQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFRyxNQUFNO0VBQUVDO0FBQU8sQ0FBQyxHQUFHSixPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFvQjVELElBQUksQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNDLGVBQWUsRUFBRTtFQUNoQyxNQUFNLElBQUlDLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQztBQUNsRTtBQUNBLE1BQU1DLFVBQVUsR0FBR1QsT0FBTyxDQUFDSyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDO0FBQ3ZELE1BQU1HLFdBQVcsR0FBR0QsVUFBVSxDQUFDQyxXQUFXLElBQUlELFVBQVUsQ0FBQ0UsT0FBTyxJQUFJRixVQUFVOztBQUc5RTtBQUNBO0FBQ0E7QUFDQUcsUUFBUSxDQUFDLGlDQUFpQyxFQUFFLE1BQU07RUFFaERDLElBQUksQ0FBQyxpRUFBaUUsRUFBRSxNQUFNO0lBQzVFO0lBQ0FWLE1BQU0sY0FBQyxJQUFBUCxXQUFBLENBQUFDLEdBQUEsRUFBQ2EsV0FBVyxJQUFFLENBQUMsQ0FBQzs7SUFFdkI7SUFDQTtJQUNBLE1BQU1JLFdBQVcsR0FBR1YsTUFBTSxDQUFDVyxZQUFZLENBQUMsU0FBUyxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFHLENBQUMsQ0FBQyxDQUFDQyxNQUFNLENBQUNDLEVBQUUsSUFBSUEsRUFBRSxDQUFDQyxTQUFTLENBQUNDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqSEMsTUFBTSxDQUFDUCxXQUFXLENBQUNRLE1BQU0sQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0VBQ3BDLENBQUMsQ0FBQztBQUVKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==