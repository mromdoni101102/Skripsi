47582e0ff219974c1510e8b81e6777d1
"use strict";

// ======================================================================
// BAGIAN 1: PERSIAPAN LINGKUNGAN (MOCKING FUNGSI getImageUrlV2)
// ======================================================================

// Ini adalah bagian terpenting. Kita beritahu Jest untuk mencegat TEPAT
// alamat yang diminta oleh kode mahasiswa.
_getJestObj().mock('../../utils/utils.js', () => ({
  // Sebagai gantinya, berikan fungsi getImageUrlV2 tiruan yang simpel ini.
  // Fungsi ini akan selalu mengembalikan URL yang bisa kita prediksi.
  getImageUrlV2: (person, sizeCode) => `https://i.imgur.com/${person.imageId}${sizeCode}.jpg`
}), {
  virtual: true
}); // virtual: true membuatnya tidak perlu file fisik sama sekali.

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
// Mengambil komponen MyProfile dari file jawaban mahasiswa.
const MyProfile = require(process.env.SUBMISSION_PATH).default;

// ======================================================================
// BAGIAN 3: "CHECKLIST" PENILAIAN FUNGSIONAL UNTUK MYPROFILE
// ======================================================================
describe('Praktikum: Komponen MyProfile dan MyAvatar', () => {
  beforeEach(() => {
    // Render komponen mahasiswa sebelum setiap tes
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(MyProfile, {}));
  });
  test('Kriteria 1: Harus me-render DUA gambar avatar', () => {
    // Cari semua elemen dengan peran 'img'
    const avatars = screen.getAllByRole('img');
    expect(avatars).toHaveLength(2);
  });
  test('Kriteria 2: Avatar Gregorio Y. Zara harus memiliki atribut yang benar', () => {
    // Cari gambar berdasarkan teks alternatifnya
    const gregorioAvatar = screen.getByAltText('Gregorio Y. Zara');
    expect(gregorioAvatar).toBeInTheDocument();
    expect(gregorioAvatar).toHaveClass('avatar');
    // Verifikasi src berdasarkan hasil dari fungsi tiruan kita
    expect(gregorioAvatar).toHaveAttribute('src', 'https://i.imgur.com/7vQD0fPs.jpg');
    // Verifikasi ukuran
    expect(gregorioAvatar).toHaveAttribute('width', '40');
  });
  test('Kriteria 3: Avatar Ada Lovelace harus memiliki atribut yang benar', () => {
    // Cari gambar berdasarkan teks alternatifnya
    const adaAvatar = screen.getByAltText('Ada Lovelace');
    expect(adaAvatar).toBeInTheDocument();
    expect(adaAvatar).toHaveClass('avatar');
    // Verifikasi src berdasarkan hasil dari fungsi tiruan kita
    expect(adaAvatar).toHaveAttribute('src', 'https://i.imgur.com/rDE2SL3Lb.jpg');
    // Verifikasi ukuran
    expect(adaAvatar).toHaveAttribute('width', '100');
  });
  test('Kriteria 4: Komponen "MyProfile" harus diexport dengan benar', () => {
    expect(MyProfile).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJnZXRJbWFnZVVybFYyIiwicGVyc29uIiwic2l6ZUNvZGUiLCJpbWFnZUlkIiwidmlydHVhbCIsIl9qc3hSdW50aW1lIiwicmVxdWlyZSIsImplc3QiLCJSZWFjdCIsInJlbmRlciIsInNjcmVlbiIsInByb2Nlc3MiLCJlbnYiLCJTVUJNSVNTSU9OX1BBVEgiLCJFcnJvciIsIk15UHJvZmlsZSIsImRlZmF1bHQiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJqc3giLCJ0ZXN0IiwiYXZhdGFycyIsImdldEFsbEJ5Um9sZSIsImV4cGVjdCIsInRvSGF2ZUxlbmd0aCIsImdyZWdvcmlvQXZhdGFyIiwiZ2V0QnlBbHRUZXh0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJ0b0hhdmVDbGFzcyIsInRvSGF2ZUF0dHJpYnV0ZSIsImFkYUF2YXRhciIsInRvQmVEZWZpbmVkIl0sInNvdXJjZXMiOlsibXlwcm9maWxlLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAamVzdC1lbnZpcm9ubWVudCBqc2RvbVxuICovXG5yZXF1aXJlKCdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tJyk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHJlbmRlciwgc2NyZWVuIH0gPSByZXF1aXJlKCdAdGVzdGluZy1saWJyYXJ5L3JlYWN0Jyk7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJBR0lBTiAxOiBQRVJTSUFQQU4gTElOR0tVTkdBTiAoTU9DS0lORyBGVU5HU0kgZ2V0SW1hZ2VVcmxWMilcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gSW5pIGFkYWxhaCBiYWdpYW4gdGVycGVudGluZy4gS2l0YSBiZXJpdGFodSBKZXN0IHVudHVrIG1lbmNlZ2F0IFRFUEFUXG4vLyBhbGFtYXQgeWFuZyBkaW1pbnRhIG9sZWgga29kZSBtYWhhc2lzd2EuXG5qZXN0Lm1vY2soJy4uLy4uL3V0aWxzL3V0aWxzLmpzJywgKCkgPT4gKHtcbiAgLy8gU2ViYWdhaSBnYW50aW55YSwgYmVyaWthbiBmdW5nc2kgZ2V0SW1hZ2VVcmxWMiB0aXJ1YW4geWFuZyBzaW1wZWwgaW5pLlxuICAvLyBGdW5nc2kgaW5pIGFrYW4gc2VsYWx1IG1lbmdlbWJhbGlrYW4gVVJMIHlhbmcgYmlzYSBraXRhIHByZWRpa3NpLlxuICBnZXRJbWFnZVVybFYyOiAocGVyc29uLCBzaXplQ29kZSkgPT4gYGh0dHBzOi8vaS5pbWd1ci5jb20vJHtwZXJzb24uaW1hZ2VJZH0ke3NpemVDb2RlfS5qcGdgLFxufSksIHsgdmlydHVhbDogdHJ1ZSB9KTsgLy8gdmlydHVhbDogdHJ1ZSBtZW1idWF0bnlhIHRpZGFrIHBlcmx1IGZpbGUgZmlzaWsgc2FtYSBzZWthbGkuXG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDI6IE1FTkdBTUJJTCBLT0RFIE1BSEFTSVNXQVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaWYgKCFwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdTVUJNSVNTSU9OX1BBVEggZW52aXJvbm1lbnQgdmFyaWFibGUgbm90IHNldC4nKTtcbn1cbi8vIE1lbmdhbWJpbCBrb21wb25lbiBNeVByb2ZpbGUgZGFyaSBmaWxlIGphd2FiYW4gbWFoYXNpc3dhLlxuY29uc3QgTXlQcm9maWxlID0gcmVxdWlyZShwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpLmRlZmF1bHQ7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDM6IFwiQ0hFQ0tMSVNUXCIgUEVOSUxBSUFOIEZVTkdTSU9OQUwgVU5UVUsgTVlQUk9GSUxFXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5kZXNjcmliZSgnUHJha3Rpa3VtOiBLb21wb25lbiBNeVByb2ZpbGUgZGFuIE15QXZhdGFyJywgKCkgPT4ge1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIC8vIFJlbmRlciBrb21wb25lbiBtYWhhc2lzd2Egc2ViZWx1bSBzZXRpYXAgdGVzXG4gICAgcmVuZGVyKDxNeVByb2ZpbGUgLz4pO1xuICB9KTtcblxuICB0ZXN0KCdLcml0ZXJpYSAxOiBIYXJ1cyBtZS1yZW5kZXIgRFVBIGdhbWJhciBhdmF0YXInLCAoKSA9PiB7XG4gICAgLy8gQ2FyaSBzZW11YSBlbGVtZW4gZGVuZ2FuIHBlcmFuICdpbWcnXG4gICAgY29uc3QgYXZhdGFycyA9IHNjcmVlbi5nZXRBbGxCeVJvbGUoJ2ltZycpO1xuICAgIGV4cGVjdChhdmF0YXJzKS50b0hhdmVMZW5ndGgoMik7XG4gIH0pO1xuXG4gIHRlc3QoJ0tyaXRlcmlhIDI6IEF2YXRhciBHcmVnb3JpbyBZLiBaYXJhIGhhcnVzIG1lbWlsaWtpIGF0cmlidXQgeWFuZyBiZW5hcicsICgpID0+IHtcbiAgICAvLyBDYXJpIGdhbWJhciBiZXJkYXNhcmthbiB0ZWtzIGFsdGVybmF0aWZueWFcbiAgICBjb25zdCBncmVnb3Jpb0F2YXRhciA9IHNjcmVlbi5nZXRCeUFsdFRleHQoJ0dyZWdvcmlvIFkuIFphcmEnKTtcbiAgICBleHBlY3QoZ3JlZ29yaW9BdmF0YXIpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgZXhwZWN0KGdyZWdvcmlvQXZhdGFyKS50b0hhdmVDbGFzcygnYXZhdGFyJyk7XG4gICAgLy8gVmVyaWZpa2FzaSBzcmMgYmVyZGFzYXJrYW4gaGFzaWwgZGFyaSBmdW5nc2kgdGlydWFuIGtpdGFcbiAgICBleHBlY3QoZ3JlZ29yaW9BdmF0YXIpLnRvSGF2ZUF0dHJpYnV0ZSgnc3JjJywgJ2h0dHBzOi8vaS5pbWd1ci5jb20vN3ZRRDBmUHMuanBnJyk7XG4gICAgLy8gVmVyaWZpa2FzaSB1a3VyYW5cbiAgICBleHBlY3QoZ3JlZ29yaW9BdmF0YXIpLnRvSGF2ZUF0dHJpYnV0ZSgnd2lkdGgnLCAnNDAnKTtcbiAgfSk7XG5cbiAgdGVzdCgnS3JpdGVyaWEgMzogQXZhdGFyIEFkYSBMb3ZlbGFjZSBoYXJ1cyBtZW1pbGlraSBhdHJpYnV0IHlhbmcgYmVuYXInLCAoKSA9PiB7XG4gICAgLy8gQ2FyaSBnYW1iYXIgYmVyZGFzYXJrYW4gdGVrcyBhbHRlcm5hdGlmbnlhXG4gICAgY29uc3QgYWRhQXZhdGFyID0gc2NyZWVuLmdldEJ5QWx0VGV4dCgnQWRhIExvdmVsYWNlJyk7XG4gICAgZXhwZWN0KGFkYUF2YXRhcikudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBleHBlY3QoYWRhQXZhdGFyKS50b0hhdmVDbGFzcygnYXZhdGFyJyk7XG4gICAgLy8gVmVyaWZpa2FzaSBzcmMgYmVyZGFzYXJrYW4gaGFzaWwgZGFyaSBmdW5nc2kgdGlydWFuIGtpdGFcbiAgICBleHBlY3QoYWRhQXZhdGFyKS50b0hhdmVBdHRyaWJ1dGUoJ3NyYycsICdodHRwczovL2kuaW1ndXIuY29tL3JERTJTTDNMYi5qcGcnKTtcbiAgICAvLyBWZXJpZmlrYXNpIHVrdXJhblxuICAgIGV4cGVjdChhZGFBdmF0YXIpLnRvSGF2ZUF0dHJpYnV0ZSgnd2lkdGgnLCAnMTAwJyk7XG4gIH0pO1xuXG4gIHRlc3QoJ0tyaXRlcmlhIDQ6IEtvbXBvbmVuIFwiTXlQcm9maWxlXCIgaGFydXMgZGlleHBvcnQgZGVuZ2FuIGJlbmFyJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KE15UHJvZmlsZSkudG9CZURlZmluZWQoKTtcbiAgfSk7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