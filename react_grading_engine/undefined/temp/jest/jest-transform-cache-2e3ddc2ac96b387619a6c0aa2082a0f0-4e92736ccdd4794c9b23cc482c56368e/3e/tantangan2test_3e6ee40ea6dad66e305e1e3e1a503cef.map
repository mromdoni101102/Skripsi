{"version":3,"names":["require","React","render","screen","process","env","SUBMISSION_PATH","Error","Tantangan2","default","describe","beforeEach","_jsxRuntime","jsx","test","heading","getByRole","level","name","expect","toBeInTheDocument","list","listItems","getAllByRole","toHaveLength","spaceSuit","getByText","toHaveTextContent","photo","helmet","not","italicElements","filter","el","tagName","toLowerCase"],"sources":["tantangan2.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// TIDAK ADA MOCKING DEPENDENSI KARENA KODE INI MANDIRI\n// ======================================================================\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Mengambil komponen utama dari file jawaban mahasiswa.\nconst Tantangan2 = require(process.env.SUBMISSION_PATH).default;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL\n// ======================================================================\ndescribe('Praktikum: Komponen PackingList (Tantangan 2)', () => {\n\n    beforeEach(() => {\n        render(<Tantangan2 />);\n    });\n\n    test('Kriteria 1: Harus menampilkan judul utama \"Sally Ride\\'s Packing List\"', () => {\n        const heading = screen.getByRole('heading', { level: 1, name: /Sally Ride's Packing List/i });\n        expect(heading).toBeInTheDocument();\n    });\n\n    test('Kriteria 2: Harus me-render sebuah daftar (<ul>) dengan tepat 3 item (<li>)', () => {\n        const list = screen.getByRole('list');\n        expect(list).toBeInTheDocument();\n\n        const listItems = screen.getAllByRole('listitem');\n        expect(listItems).toHaveLength(3);\n    });\n\n    test('Kriteria 3: Item dengan importance > 0 harus menampilkan teks importance', () => {\n        // Cari item berdasarkan teksnya dan pastikan teks importance muncul\n        const spaceSuit = screen.getByText(/Space suit/i);\n        expect(spaceSuit).toHaveTextContent('(Importance: 9)');\n\n        const photo = screen.getByText(/Photo of Tam/i);\n        expect(photo).toHaveTextContent('(Importance: 6)');\n    });\n\n    test('Kriteria 4: Item dengan importance = 0 TIDAK boleh menampilkan teks importance', () => {\n        // Cari item berdasarkan teksnya\n        const helmet = screen.getByText(/Helmet with a golden leaf/i);\n\n        // Pastikan tidak ada teks \"Importance\" pada item ini\n        expect(helmet).not.toHaveTextContent('Importance');\n    });\n\n    test('Kriteria 5: Teks importance harus berada di dalam tag <i> (italic)', () => {\n        // Cari semua elemen <i>, seharusnya ada 2\n        const italicElements = screen.getAllByRole('generic', { name: '' }).filter(el => el.tagName.toLowerCase() === 'i');\n        expect(italicElements).toHaveLength(2);\n\n        // Periksa isinya\n        expect(screen.getByText('(Importance: 9)')).toBeInTheDocument();\n        expect(screen.getByText('(Importance: 6)')).toBeInTheDocument();\n    });\n\n});\n"],"mappings":";;;AAAA;AACA;AACA;AACAA,OAAO,CAAC,2BAA2B,CAAC;AACpC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEE,MAAM;EAAEC;AAAO,CAAC,GAAGH,OAAO,CAAC,wBAAwB,CAAC;;AAE5D;AACA;AACA;;AAGA;AACA;AACA;AACA,IAAI,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE;AACA;AACA,MAAMC,UAAU,GAAGR,OAAO,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC,CAACG,OAAO;;AAG/D;AACA;AACA;AACAC,QAAQ,CAAC,+CAA+C,EAAE,MAAM;EAE5DC,UAAU,CAAC,MAAM;IACbT,MAAM,cAAC,IAAAU,WAAA,CAAAC,GAAA,EAACL,UAAU,IAAE,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEFM,IAAI,CAAC,wEAAwE,EAAE,MAAM;IACjF,MAAMC,OAAO,GAAGZ,MAAM,CAACa,SAAS,CAAC,SAAS,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE;IAA6B,CAAC,CAAC;IAC7FC,MAAM,CAACJ,OAAO,CAAC,CAACK,iBAAiB,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFN,IAAI,CAAC,6EAA6E,EAAE,MAAM;IACtF,MAAMO,IAAI,GAAGlB,MAAM,CAACa,SAAS,CAAC,MAAM,CAAC;IACrCG,MAAM,CAACE,IAAI,CAAC,CAACD,iBAAiB,CAAC,CAAC;IAEhC,MAAME,SAAS,GAAGnB,MAAM,CAACoB,YAAY,CAAC,UAAU,CAAC;IACjDJ,MAAM,CAACG,SAAS,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFV,IAAI,CAAC,0EAA0E,EAAE,MAAM;IACnF;IACA,MAAMW,SAAS,GAAGtB,MAAM,CAACuB,SAAS,CAAC,aAAa,CAAC;IACjDP,MAAM,CAACM,SAAS,CAAC,CAACE,iBAAiB,CAAC,iBAAiB,CAAC;IAEtD,MAAMC,KAAK,GAAGzB,MAAM,CAACuB,SAAS,CAAC,eAAe,CAAC;IAC/CP,MAAM,CAACS,KAAK,CAAC,CAACD,iBAAiB,CAAC,iBAAiB,CAAC;EACtD,CAAC,CAAC;EAEFb,IAAI,CAAC,gFAAgF,EAAE,MAAM;IACzF;IACA,MAAMe,MAAM,GAAG1B,MAAM,CAACuB,SAAS,CAAC,4BAA4B,CAAC;;IAE7D;IACAP,MAAM,CAACU,MAAM,CAAC,CAACC,GAAG,CAACH,iBAAiB,CAAC,YAAY,CAAC;EACtD,CAAC,CAAC;EAEFb,IAAI,CAAC,oEAAoE,EAAE,MAAM;IAC7E;IACA,MAAMiB,cAAc,GAAG5B,MAAM,CAACoB,YAAY,CAAC,SAAS,EAAE;MAAEL,IAAI,EAAE;IAAG,CAAC,CAAC,CAACc,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC,KAAK,GAAG,CAAC;IAClHhB,MAAM,CAACY,cAAc,CAAC,CAACP,YAAY,CAAC,CAAC,CAAC;;IAEtC;IACAL,MAAM,CAAChB,MAAM,CAACuB,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAACN,iBAAiB,CAAC,CAAC;IAC/DD,MAAM,CAAChB,MAAM,CAACuB,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAACN,iBAAiB,CAAC,CAAC;EACnE,CAAC,CAAC;AAEN,CAAC,CAAC","ignoreList":[]}