a689a96a4c3894e109c32f5ac5f2e0be
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen,
  waitFor
} = require('@testing-library/react');
const userEvent = require('@testing-library/user-event').default;
const Form = require(process.env.SUBMISSION_PATH).default;
describe('Praktikum: Komponen Form Interaktif', () => {
  const user = userEvent.setup();
  test('Kriteria 1: Harus menampilkan semua elemen form saat awal render', () => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Form, {}));
    expect(screen.getByRole('heading', {
      name: /Tebak Nama Hewan/i
    })).toBeInTheDocument();
    expect(screen.getByRole('textbox')).toBeInTheDocument();
    expect(screen.getByRole('button', {
      name: /Submit/i
    })).toBeInTheDocument();
  });
  test('Kriteria 2: Tombol "Submit" harus nonaktif jika textarea kosong', () => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Form, {}));
    expect(screen.getByRole('button', {
      name: /Submit/i
    })).toBeDisabled();
  });
  test('Kriteria 3: Menampilkan pesan error jika jawaban salah', async () => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Form, {}));
    await user.type(screen.getByRole('textbox'), 'kucing');
    await user.click(screen.getByRole('button', {
      name: /Submit/i
    }));
    expect(await screen.findByText(/Tebakan yang bagus tetapi jawaban salah/i)).toBeInTheDocument();
  });
  test('Kriteria 4: Menampilkan pesan sukses jika jawaban benar', async () => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Form, {}));
    await user.type(screen.getByRole('textbox'), 'tikus');
    await user.click(screen.getByRole('button', {
      name: /Submit/i
    }));
    expect(await screen.findByRole('heading', {
      name: /Yay... Jawaban Benar!/i
    })).toBeInTheDocument();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJ3YWl0Rm9yIiwidXNlckV2ZW50IiwiZGVmYXVsdCIsIkZvcm0iLCJwcm9jZXNzIiwiZW52IiwiU1VCTUlTU0lPTl9QQVRIIiwiZGVzY3JpYmUiLCJ1c2VyIiwic2V0dXAiLCJ0ZXN0IiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJleHBlY3QiLCJnZXRCeVJvbGUiLCJuYW1lIiwidG9CZUluVGhlRG9jdW1lbnQiLCJ0b0JlRGlzYWJsZWQiLCJ0eXBlIiwiY2xpY2siLCJmaW5kQnlUZXh0IiwiZmluZEJ5Um9sZSJdLCJzb3VyY2VzIjpbImZvcm0udGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbnJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgcmVuZGVyLCBzY3JlZW4sIHdhaXRGb3IgfSA9IHJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnKTtcbmNvbnN0IHVzZXJFdmVudCA9IHJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvdXNlci1ldmVudCcpLmRlZmF1bHQ7XG5cbmNvbnN0IEZvcm0gPSByZXF1aXJlKHByb2Nlc3MuZW52LlNVQk1JU1NJT05fUEFUSCkuZGVmYXVsdDtcblxuZGVzY3JpYmUoJ1ByYWt0aWt1bTogS29tcG9uZW4gRm9ybSBJbnRlcmFrdGlmJywgKCkgPT4ge1xuICAgIGNvbnN0IHVzZXIgPSB1c2VyRXZlbnQuc2V0dXAoKTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDE6IEhhcnVzIG1lbmFtcGlsa2FuIHNlbXVhIGVsZW1lbiBmb3JtIHNhYXQgYXdhbCByZW5kZXInLCAoKSA9PiB7XG4gICAgICAgIHJlbmRlcig8Rm9ybSAvPik7XG4gICAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlSb2xlKCdoZWFkaW5nJywgeyBuYW1lOiAvVGViYWsgTmFtYSBIZXdhbi9pIH0pKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5Um9sZSgndGV4dGJveCcpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvU3VibWl0L2kgfSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSAyOiBUb21ib2wgXCJTdWJtaXRcIiBoYXJ1cyBub25ha3RpZiBqaWthIHRleHRhcmVhIGtvc29uZycsICgpID0+IHtcbiAgICAgICAgcmVuZGVyKDxGb3JtIC8+KTtcbiAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogL1N1Ym1pdC9pIH0pKS50b0JlRGlzYWJsZWQoKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDM6IE1lbmFtcGlsa2FuIHBlc2FuIGVycm9yIGppa2EgamF3YWJhbiBzYWxhaCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgcmVuZGVyKDxGb3JtIC8+KTtcbiAgICAgICAgYXdhaXQgdXNlci50eXBlKHNjcmVlbi5nZXRCeVJvbGUoJ3RleHRib3gnKSwgJ2t1Y2luZycpO1xuICAgICAgICBhd2FpdCB1c2VyLmNsaWNrKHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogL1N1Ym1pdC9pIH0pKTtcbiAgICAgICAgZXhwZWN0KGF3YWl0IHNjcmVlbi5maW5kQnlUZXh0KC9UZWJha2FuIHlhbmcgYmFndXMgdGV0YXBpIGphd2FiYW4gc2FsYWgvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSA0OiBNZW5hbXBpbGthbiBwZXNhbiBzdWtzZXMgamlrYSBqYXdhYmFuIGJlbmFyJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICByZW5kZXIoPEZvcm0gLz4pO1xuICAgICAgICBhd2FpdCB1c2VyLnR5cGUoc2NyZWVuLmdldEJ5Um9sZSgndGV4dGJveCcpLCAndGlrdXMnKTtcbiAgICAgICAgYXdhaXQgdXNlci5jbGljayhzY3JlZW4uZ2V0QnlSb2xlKCdidXR0b24nLCB7IG5hbWU6IC9TdWJtaXQvaSB9KSk7XG4gICAgICAgIGV4cGVjdChhd2FpdCBzY3JlZW4uZmluZEJ5Um9sZSgnaGVhZGluZycsIHsgbmFtZTogL1lheS4uLiBKYXdhYmFuIEJlbmFyIS9pIH0pKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBQSxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDcEMsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUUsTUFBTTtFQUFFQyxNQUFNO0VBQUVDO0FBQVEsQ0FBQyxHQUFHSixPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFDckUsTUFBTUssU0FBUyxHQUFHTCxPQUFPLENBQUMsNkJBQTZCLENBQUMsQ0FBQ00sT0FBTztBQUVoRSxNQUFNQyxJQUFJLEdBQUdQLE9BQU8sQ0FBQ1EsT0FBTyxDQUFDQyxHQUFHLENBQUNDLGVBQWUsQ0FBQyxDQUFDSixPQUFPO0FBRXpESyxRQUFRLENBQUMscUNBQXFDLEVBQUUsTUFBTTtFQUNsRCxNQUFNQyxJQUFJLEdBQUdQLFNBQVMsQ0FBQ1EsS0FBSyxDQUFDLENBQUM7RUFFOUJDLElBQUksQ0FBQyxrRUFBa0UsRUFBRSxNQUFNO0lBQzNFWixNQUFNLGNBQUMsSUFBQWEsV0FBQSxDQUFBQyxHQUFBLEVBQUNULElBQUksSUFBRSxDQUFDLENBQUM7SUFDaEJVLE1BQU0sQ0FBQ2QsTUFBTSxDQUFDZSxTQUFTLENBQUMsU0FBUyxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFvQixDQUFDLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3RGSCxNQUFNLENBQUNkLE1BQU0sQ0FBQ2UsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUNFLGlCQUFpQixDQUFDLENBQUM7SUFDdkRILE1BQU0sQ0FBQ2QsTUFBTSxDQUFDZSxTQUFTLENBQUMsUUFBUSxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFVLENBQUMsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7RUFDL0UsQ0FBQyxDQUFDO0VBRUZOLElBQUksQ0FBQyxpRUFBaUUsRUFBRSxNQUFNO0lBQzFFWixNQUFNLGNBQUMsSUFBQWEsV0FBQSxDQUFBQyxHQUFBLEVBQUNULElBQUksSUFBRSxDQUFDLENBQUM7SUFDaEJVLE1BQU0sQ0FBQ2QsTUFBTSxDQUFDZSxTQUFTLENBQUMsUUFBUSxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFVLENBQUMsQ0FBQyxDQUFDLENBQUNFLFlBQVksQ0FBQyxDQUFDO0VBQzFFLENBQUMsQ0FBQztFQUVGUCxJQUFJLENBQUMsd0RBQXdELEVBQUUsWUFBWTtJQUN2RVosTUFBTSxjQUFDLElBQUFhLFdBQUEsQ0FBQUMsR0FBQSxFQUFDVCxJQUFJLElBQUUsQ0FBQyxDQUFDO0lBQ2hCLE1BQU1LLElBQUksQ0FBQ1UsSUFBSSxDQUFDbkIsTUFBTSxDQUFDZSxTQUFTLENBQUMsU0FBUyxDQUFDLEVBQUUsUUFBUSxDQUFDO0lBQ3RELE1BQU1OLElBQUksQ0FBQ1csS0FBSyxDQUFDcEIsTUFBTSxDQUFDZSxTQUFTLENBQUMsUUFBUSxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ2pFRixNQUFNLENBQUMsTUFBTWQsTUFBTSxDQUFDcUIsVUFBVSxDQUFDLDBDQUEwQyxDQUFDLENBQUMsQ0FBQ0osaUJBQWlCLENBQUMsQ0FBQztFQUNuRyxDQUFDLENBQUM7RUFFRk4sSUFBSSxDQUFDLHlEQUF5RCxFQUFFLFlBQVk7SUFDeEVaLE1BQU0sY0FBQyxJQUFBYSxXQUFBLENBQUFDLEdBQUEsRUFBQ1QsSUFBSSxJQUFFLENBQUMsQ0FBQztJQUNoQixNQUFNSyxJQUFJLENBQUNVLElBQUksQ0FBQ25CLE1BQU0sQ0FBQ2UsU0FBUyxDQUFDLFNBQVMsQ0FBQyxFQUFFLE9BQU8sQ0FBQztJQUNyRCxNQUFNTixJQUFJLENBQUNXLEtBQUssQ0FBQ3BCLE1BQU0sQ0FBQ2UsU0FBUyxDQUFDLFFBQVEsRUFBRTtNQUFFQyxJQUFJLEVBQUU7SUFBVSxDQUFDLENBQUMsQ0FBQztJQUNqRUYsTUFBTSxDQUFDLE1BQU1kLE1BQU0sQ0FBQ3NCLFVBQVUsQ0FBQyxTQUFTLEVBQUU7TUFBRU4sSUFBSSxFQUFFO0lBQXlCLENBQUMsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7RUFDdEcsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119