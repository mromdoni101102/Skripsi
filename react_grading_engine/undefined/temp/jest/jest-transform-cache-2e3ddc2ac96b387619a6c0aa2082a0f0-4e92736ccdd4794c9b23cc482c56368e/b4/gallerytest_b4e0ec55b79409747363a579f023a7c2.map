{"version":3,"names":["_getJestObj","mock","MockedProfile","_jsxRuntime","jsx","children","require","jest","React","render","screen","process","env","SUBMISSION_PATH","Error","submission","Gallery","default","describe","beforeEach","test","sectionElement","getByRole","expect","toBeInTheDocument","headingElement","level","name","profileComponents","getAllByTestId","toHaveLength","toBeDefined"],"sources":["gallery.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN\n// ======================================================================\n\n// Kita membuat tiruan (mock) dari komponen Profile.\n// Ini penting karena saat menguji Gallery, kita tidak peduli dengan isi Profile,\n// kita hanya ingin tahu apakah Gallery berhasil me-render komponen Profile.\n// data-testid akan kita gunakan untuk menghitung jumlah Profile yang dirender.\njest.mock('./profile.js', () => {\n  return function MockedProfile() {\n    return <div data-testid=\"profile-component\">Profile Component</div>;\n  };\n});\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA (Satu-satunya yang di-import)\n// ======================================================================\n\n// Mengambil file jawaban mahasiswa yang dikirim oleh Controller Laravel.\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Menggunakan logika cerdas untuk menangani berbagai jenis export dari mahasiswa.\nconst submission = require(process.env.SUBMISSION_PATH);\nconst Gallery = submission.Gallery || submission.default || submission;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL UNTUK GALLERY\n// ======================================================================\n\ndescribe('Praktikum: Komponen Gallery', () => {\n\n  // Render komponen mahasiswa sebelum setiap tes dijalankan\n  beforeEach(() => {\n    render(<Gallery />);\n  });\n\n  test('Kriteria 1: Harus me-render sebuah section sebagai pembungkus utama', () => {\n    // getByRole('region') adalah cara yang baik untuk mencari tag <section>\n    const sectionElement = screen.getByRole('region');\n    expect(sectionElement).toBeInTheDocument();\n  });\n\n  test('Kriteria 2: Harus menampilkan judul \"Ilmuwan Luar Biasa\"', () => {\n    // Cari heading level 1 (h1) yang berisi teks yang diinginkan.\n    const headingElement = screen.getByRole('heading', { level: 1, name: /ilmuwan luar biasa/i });\n    expect(headingElement).toBeInTheDocument();\n  });\n\n  test('Kriteria 3: Harus me-render TEPAT 3 komponen Profile di dalamnya', () => {\n    // Kita gunakan data-testid yang sudah kita siapkan di mock untuk menghitungnya.\n    const profileComponents = screen.getAllByTestId('profile-component');\n    expect(profileComponents).toHaveLength(3);\n  });\n\n  test('Kriteria 4: Komponen Gallery harus diexport dengan benar', () => {\n    // Tes ini memastikan mahasiswa tidak lupa mengekspor komponen mereka.\n    expect(Gallery).toBeDefined();\n  });\n\n});\n"],"mappings":";;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAA,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE,MAAM;EAC9B,OAAO,SAASC,aAAaA,CAAA,EAAG;IAC9B,oBAAO,IAAAC,WAAA,CAAAC,GAAA;MAAK,eAAY,mBAAmB;MAAAC,QAAA,EAAC;IAAiB,CAAK,CAAC;EACrE,CAAC;AACH,CAAC,CAAC;;AAGF;AACA;AACA;;AAEA;AAAA,IAAAF,WAAA,GAAAG,OAAA;AAAA,SAAAN,YAAA;EAAA;IAAAO;EAAA,IAAAD,OAAA;EAAAN,WAAA,GAAAA,CAAA,KAAAO,IAAA;EAAA,OAAAA,IAAA;AAAA;AA1BA;AACA;AACA;AACAD,OAAO,CAAC,2BAA2B,CAAC;AACpC,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEG,MAAM;EAAEC;AAAO,CAAC,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAsB5D,IAAI,CAACK,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE;AACA;AACA,MAAMC,UAAU,GAAGT,OAAO,CAACK,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC;AACvD,MAAMG,OAAO,GAAGD,UAAU,CAACC,OAAO,IAAID,UAAU,CAACE,OAAO,IAAIF,UAAU;;AAGtE;AACA;AACA;;AAEAG,QAAQ,CAAC,6BAA6B,EAAE,MAAM;EAE5C;EACAC,UAAU,CAAC,MAAM;IACfV,MAAM,cAAC,IAAAN,WAAA,CAAAC,GAAA,EAACY,OAAO,IAAE,CAAC,CAAC;EACrB,CAAC,CAAC;EAEFI,IAAI,CAAC,qEAAqE,EAAE,MAAM;IAChF;IACA,MAAMC,cAAc,GAAGX,MAAM,CAACY,SAAS,CAAC,QAAQ,CAAC;IACjDC,MAAM,CAACF,cAAc,CAAC,CAACG,iBAAiB,CAAC,CAAC;EAC5C,CAAC,CAAC;EAEFJ,IAAI,CAAC,0DAA0D,EAAE,MAAM;IACrE;IACA,MAAMK,cAAc,GAAGf,MAAM,CAACY,SAAS,CAAC,SAAS,EAAE;MAAEI,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAsB,CAAC,CAAC;IAC7FJ,MAAM,CAACE,cAAc,CAAC,CAACD,iBAAiB,CAAC,CAAC;EAC5C,CAAC,CAAC;EAEFJ,IAAI,CAAC,kEAAkE,EAAE,MAAM;IAC7E;IACA,MAAMQ,iBAAiB,GAAGlB,MAAM,CAACmB,cAAc,CAAC,mBAAmB,CAAC;IACpEN,MAAM,CAACK,iBAAiB,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEFV,IAAI,CAAC,0DAA0D,EAAE,MAAM;IACrE;IACAG,MAAM,CAACP,OAAO,CAAC,CAACe,WAAW,CAAC,CAAC;EAC/B,CAAC,CAAC;AAEJ,CAAC,CAAC","ignoreList":[]}