{"version":3,"names":["_getJestObj","mock","getImageUrlV2","jest","fn","person","sizeCode","imageId","virtual","_jsxRuntime","require","React","render","screen","process","env","SUBMISSION_PATH","Error","MyProfile","default","describe","beforeEach","jsx","test","avatars","getAllByRole","expect","toHaveLength","gregorioAvatar","getByAltText","toBeInTheDocument","toHaveClass","toHaveAttribute","adaAvatar","toHaveBeenCalledWith","objectContaining","name","toBeDefined"],"sources":["myprofile.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN (MOCKING FUNGSI getImageUrlV2)\n// ======================================================================\n\n// Ini adalah bagian terpenting. Kita beritahu Jest untuk mencegat TEPAT\n// alamat yang diminta oleh kode mahasiswa.\n// jest.mock yang baru dan sudah benar\njest.mock('../../utils/utils.js', () => ({\n  // Kita bungkus fungsi kita di dalam jest.fn() agar bisa dilacak\n  getImageUrlV2: jest.fn((person, sizeCode) => `https://i.imgur.com/${person.imageId}${sizeCode}.jpg`),\n}), { virtual: true });\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Mengambil komponen MyProfile dari file jawaban mahasiswa.\nconst MyProfile = require(process.env.SUBMISSION_PATH).default;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL (VERSI LENGKAP ANDA)\n// ======================================================================\ndescribe('Praktikum: Komponen MyProfile dan MyAvatar', () => {\n\n    beforeEach(() => {\n        // Render komponen mahasiswa sebelum setiap tes\n        render(<MyProfile />);\n    });\n\n    test('Kriteria 1: Harus me-render DUA gambar avatar', () => {\n        // Cari semua elemen dengan peran 'img'\n        const avatars = screen.getAllByRole('img');\n        expect(avatars).toHaveLength(2);\n    });\n\n    test('Kriteria 2: Avatar Gregorio Y. Zara harus memiliki atribut yang benar', () => {\n        // Cari gambar berdasarkan teks alternatifnya\n        const gregorioAvatar = screen.getByAltText('Gregorio Y. Zara');\n        expect(gregorioAvatar).toBeInTheDocument();\n        expect(gregorioAvatar).toHaveClass('avatar');\n        // Verifikasi src berdasarkan hasil dari fungsi tiruan kita\n        expect(gregorioAvatar).toHaveAttribute('src', 'https://i.imgur.com/7vQD0fPs.jpg');\n        // Verifikasi ukuran\n        expect(gregorioAvatar).toHaveAttribute('width', '40');\n    });\n\n    test('Kriteria 3: Avatar Ada Lovelace harus memiliki atribut yang benar', () => {\n        // Cari gambar berdasarkan teks alternatifnya\n        const adaAvatar = screen.getByAltText('Ada Lovelace');\n        expect(adaAvatar).toBeInTheDocument();\n        expect(adaAvatar).toHaveClass('avatar');\n        // Verifikasi src berdasarkan hasil dari fungsi tiruan kita\n        expect(adaAvatar).toHaveAttribute('src', 'https://i.imgur.com/rDE2SL3Lb.jpg');\n        // Verifikasi ukuran\n        expect(adaAvatar).toHaveAttribute('width', '100');\n    });\n\n    test('Kriteria 4: Logika untuk ukuran gambar harus benar (size < 90 vs size >= 90)', () => {\n        // Kita butuh referensi ke fungsi tiruan kita untuk memeriksa panggilannya\n        const { getImageUrlV2 } = require('../../utils/utils.js');\n\n        // Panggil ulang render di sini agar kita bisa memastikan mock-nya bersih\n        render(<MyProfile />);\n\n        // Cek bahwa untuk Gregorio (size 40), size code yang dikirim adalah 's'\n        expect(getImageUrlV2).toHaveBeenCalledWith(\n            expect.objectContaining({ name: 'Gregorio Y. Zara' }),\n            's'\n        );\n\n        // Cek bahwa untuk Ada (size 100), size code yang dikirim adalah 'b'\n        expect(getImageUrlV2).toHaveBeenCalledWith(\n            expect.objectContaining({ name: 'Ada Lovelace' }),\n            'b'\n        );\n    });\n\n    test('Kriteria 5: Komponen \"MyProfile\" harus diexport dengan benar', () => {\n        expect(MyProfile).toBeDefined();\n    });\n});\n"],"mappings":"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","ignoreList":[]}