{"version":3,"names":["_getJestObj","mock","MockedCard","children","_jsxRuntime","jsx","className","virtual","require","jest","React","render","screen","process","env","SUBMISSION_PATH","Error","submission","MyProfileV2","default","describe","beforeEach","test","cardElements","getAllByRole","name","filter","el","classList","contains","expect","toHaveLength","photoHeading","getByRole","level","toBeInTheDocument","avatarImage","getByAltText","parentElement","toBe","toHaveClass","toHaveAttribute","aboutHeading","description","getByText","tagName","toLowerCase","toBeDefined"],"sources":["myprofilev2.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN (MOCKING KOMPONEN CARD)\n// ======================================================================\n\n// Kode jawaban mahasiswa membutuhkan komponen 'Card'.\n// Kita buat tiruannya agar tes kita tidak bergantung pada file Card.js yang sebenarnya.\n// Tiruan ini akan me-render children di dalam sebuah div dengan class 'card'.\njest.mock('./Card.js', () => {\n  return function MockedCard({ children }) {\n    return <div className=\"card\">{children}</div>;\n  };\n}, { virtual: true });\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Mengambil komponen MyProfileV2 dari file jawaban mahasiswa.\nconst submission = require(process.env.SUBMISSION_PATH);\nconst MyProfileV2 = submission.MyProfileV2 || submission.default || submission;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL UNTUK MYPROFILEV2\n// ======================================================================\ndescribe('Praktikum: Komponen MyProfileV2', () => {\n\n  beforeEach(() => {\n    // Render komponen mahasiswa sebelum setiap tes\n    render(<MyProfileV2 />);\n  });\n\n  test('Kriteria 1: Harus me-render DUA komponen Card', () => {\n    // Kita cari berdasarkan class 'card' yang ada di komponen tiruan kita.\n    const cardElements = screen.getAllByRole('generic', { name: '' }).filter(el => el.classList.contains('card'));\n    // Atau cara yang lebih sederhana jika tidak ada elemen lain:\n    // const cardElements = document.querySelectorAll('.card');\n    expect(cardElements).toHaveLength(2);\n  });\n\n  test('Kriteria 2: Card pertama harus berisi judul \"Foto\" dan sebuah gambar', () => {\n    // Cari heading 'Foto'\n    const photoHeading = screen.getByRole('heading', { name: /Foto/i, level: 1 });\n    expect(photoHeading).toBeInTheDocument();\n\n    // Cari gambar di dalam Card yang sama\n    const avatarImage = screen.getByAltText('Aklilu Lemma');\n    expect(avatarImage).toBeInTheDocument();\n\n    // Pastikan heading dan gambar berada di dalam satu Card yang sama\n    expect(photoHeading.parentElement).toBe(avatarImage.parentElement);\n  });\n\n  test('Kriteria 3: Gambar di Card \"Foto\" harus memiliki atribut yang benar', () => {\n    const avatarImage = screen.getByAltText('Aklilu Lemma');\n    expect(avatarImage).toHaveClass('avatar');\n    expect(avatarImage).toHaveAttribute('src', 'https://i.imgur.com/OKS67lhm.jpg');\n    expect(avatarImage).toHaveAttribute('width', '70');\n  });\n\n  test('Kriteria 4: Card kedua harus berisi judul \"Tentang\" dan sebuah paragraf deskripsi', () => {\n    // Cari heading 'Tentang'\n    const aboutHeading = screen.getByRole('heading', { name: /Tentang/i, level: 1 });\n    expect(aboutHeading).toBeInTheDocument();\n\n    // Cari paragraf deskripsi\n    const description = screen.getByText(/Aklilu Lemma adalah seorang ilmuwan/i);\n    expect(description).toBeInTheDocument();\n    expect(description.tagName.toLowerCase()).toBe('p');\n\n    // Pastikan heading dan paragraf berada di dalam satu Card yang sama\n    expect(aboutHeading.parentElement).toBe(description.parentElement);\n  });\n\n  test('Kriteria 5: Komponen \"MyProfileV2\" harus diexport dengan benar', () => {\n    expect(MyProfileV2).toBeDefined();\n  });\n\n});\n"],"mappings":";;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACAA,WAAA,GAAKC,IAAI,CAAC,WAAW,EAAE,MAAM;EAC3B,OAAO,SAASC,UAAUA,CAAC;IAAEC;EAAS,CAAC,EAAE;IACvC,oBAAO,IAAAC,WAAA,CAAAC,GAAA;MAAKC,SAAS,EAAC,MAAM;MAAAH,QAAA,EAAEA;IAAQ,CAAM,CAAC;EAC/C,CAAC;AACH,CAAC,EAAE;EAAEI,OAAO,EAAE;AAAK,CAAC,CAAC;;AAGrB;AACA;AACA;AAAA,IAAAH,WAAA,GAAAI,OAAA;AAAA,SAAAR,YAAA;EAAA;IAAAS;EAAA,IAAAD,OAAA;EAAAR,WAAA,GAAAA,CAAA,KAAAS,IAAA;EAAA,OAAAA,IAAA;AAAA;AAvBA;AACA;AACA;AACAD,OAAO,CAAC,2BAA2B,CAAC;AACpC,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEG,MAAM;EAAEC;AAAO,CAAC,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAmB5D,IAAI,CAACK,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE;AACA;AACA,MAAMC,UAAU,GAAGT,OAAO,CAACK,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC;AACvD,MAAMG,WAAW,GAAGD,UAAU,CAACC,WAAW,IAAID,UAAU,CAACE,OAAO,IAAIF,UAAU;;AAG9E;AACA;AACA;AACAG,QAAQ,CAAC,iCAAiC,EAAE,MAAM;EAEhDC,UAAU,CAAC,MAAM;IACf;IACAV,MAAM,cAAC,IAAAP,WAAA,CAAAC,GAAA,EAACa,WAAW,IAAE,CAAC,CAAC;EACzB,CAAC,CAAC;EAEFI,IAAI,CAAC,+CAA+C,EAAE,MAAM;IAC1D;IACA,MAAMC,YAAY,GAAGX,MAAM,CAACY,YAAY,CAAC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,CAACC,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC7G;IACA;IACAC,MAAM,CAACP,YAAY,CAAC,CAACQ,YAAY,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC;EAEFT,IAAI,CAAC,sEAAsE,EAAE,MAAM;IACjF;IACA,MAAMU,YAAY,GAAGpB,MAAM,CAACqB,SAAS,CAAC,SAAS,EAAE;MAAER,IAAI,EAAE,OAAO;MAAES,KAAK,EAAE;IAAE,CAAC,CAAC;IAC7EJ,MAAM,CAACE,YAAY,CAAC,CAACG,iBAAiB,CAAC,CAAC;;IAExC;IACA,MAAMC,WAAW,GAAGxB,MAAM,CAACyB,YAAY,CAAC,cAAc,CAAC;IACvDP,MAAM,CAACM,WAAW,CAAC,CAACD,iBAAiB,CAAC,CAAC;;IAEvC;IACAL,MAAM,CAACE,YAAY,CAACM,aAAa,CAAC,CAACC,IAAI,CAACH,WAAW,CAACE,aAAa,CAAC;EACpE,CAAC,CAAC;EAEFhB,IAAI,CAAC,qEAAqE,EAAE,MAAM;IAChF,MAAMc,WAAW,GAAGxB,MAAM,CAACyB,YAAY,CAAC,cAAc,CAAC;IACvDP,MAAM,CAACM,WAAW,CAAC,CAACI,WAAW,CAAC,QAAQ,CAAC;IACzCV,MAAM,CAACM,WAAW,CAAC,CAACK,eAAe,CAAC,KAAK,EAAE,kCAAkC,CAAC;IAC9EX,MAAM,CAACM,WAAW,CAAC,CAACK,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;EACpD,CAAC,CAAC;EAEFnB,IAAI,CAAC,mFAAmF,EAAE,MAAM;IAC9F;IACA,MAAMoB,YAAY,GAAG9B,MAAM,CAACqB,SAAS,CAAC,SAAS,EAAE;MAAER,IAAI,EAAE,UAAU;MAAES,KAAK,EAAE;IAAE,CAAC,CAAC;IAChFJ,MAAM,CAACY,YAAY,CAAC,CAACP,iBAAiB,CAAC,CAAC;;IAExC;IACA,MAAMQ,WAAW,GAAG/B,MAAM,CAACgC,SAAS,CAAC,sCAAsC,CAAC;IAC5Ed,MAAM,CAACa,WAAW,CAAC,CAACR,iBAAiB,CAAC,CAAC;IACvCL,MAAM,CAACa,WAAW,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAACP,IAAI,CAAC,GAAG,CAAC;;IAEnD;IACAT,MAAM,CAACY,YAAY,CAACJ,aAAa,CAAC,CAACC,IAAI,CAACI,WAAW,CAACL,aAAa,CAAC;EACpE,CAAC,CAAC;EAEFhB,IAAI,CAAC,gEAAgE,EAAE,MAAM;IAC3EQ,MAAM,CAACZ,WAAW,CAAC,CAAC6B,WAAW,CAAC,CAAC;EACnC,CAAC,CAAC;AAEJ,CAAC,CAAC","ignoreList":[]}