27cd29316b75a7318d5bd569f67207c7
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');

// ======================================================================
// BAGIAN 1: PERSIAPAN LINGKUNGAN
// Untuk komponen Card ini, kita tidak perlu 'mocking' apa pun karena
// ia tidak memiliki ketergantungan pada file atau komponen lain.
// ======================================================================

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
// Logika cerdas untuk mengambil komponen Card, apapun cara mahasiswa mengekspornya.
const submission = require(process.env.SUBMISSION_PATH);
const Card = submission.Card || submission.default || submission;

// ======================================================================
// BAGIAN 3: "CHECKLIST" PENILAIAN FUNGSIONAL UNTUK CARD
// ======================================================================
describe('Praktikum: Komponen Card', () => {
  test('Kriteria 1: Harus me-render sebuah div luar dengan class "card"', () => {
    // Kita render dengan konten dummy untuk dicari
    const {
      container
    } = render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Card, {
      children: "Konten Tes"
    }));

    // container.firstChild adalah elemen paling luar yang dirender
    const outerDiv = container.firstChild;
    expect(outerDiv).toHaveClass('card');
  });
  test('Kriteria 2: Harus me-render sebuah div dalam dengan class "card-content"', () => {
    const {
      container
    } = render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Card, {
      children: "Konten Tes"
    }));
    const outerDiv = container.firstChild;

    // outerDiv.firstChild adalah elemen pertama di dalam div.card
    const innerDiv = outerDiv.firstChild;
    expect(innerDiv).toHaveClass('card-content');
  });
  test('Kriteria 3: Harus bisa menampilkan konten teks sederhana (children)', () => {
    const teksAnak = "Ini adalah konten di dalam Card.";
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Card, {
      children: teksAnak
    }));

    // Cari apakah teks tersebut muncul di layar
    const renderedText = screen.getByText(teksAnak);
    expect(renderedText).toBeInTheDocument();
  });
  test('Kriteria 4: Harus bisa menampilkan konten JSX yang lebih kompleks (children)', () => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsxs)(Card, {
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
        children: "Judul di Dalam Card"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
        children: "Paragraf di dalam Card."
      })]
    }));

    // Cari apakah kedua elemen tersebut muncul di layar
    const heading = screen.getByRole('heading', {
      name: /Judul di Dalam Card/i
    });
    const paragraph = screen.getByText(/Paragraf di dalam Card/i);
    expect(heading).toBeInTheDocument();
    expect(paragraph).toBeInTheDocument();
  });
  test('Kriteria 5: Komponen "Card" harus diexport dengan benar', () => {
    // Tes ini memastikan mahasiswa tidak lupa mengekspor komponen mereka
    expect(Card).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJwcm9jZXNzIiwiZW52IiwiU1VCTUlTU0lPTl9QQVRIIiwiRXJyb3IiLCJzdWJtaXNzaW9uIiwiQ2FyZCIsImRlZmF1bHQiLCJkZXNjcmliZSIsInRlc3QiLCJjb250YWluZXIiLCJfanN4UnVudGltZSIsImpzeCIsImNoaWxkcmVuIiwib3V0ZXJEaXYiLCJmaXJzdENoaWxkIiwiZXhwZWN0IiwidG9IYXZlQ2xhc3MiLCJpbm5lckRpdiIsInRla3NBbmFrIiwicmVuZGVyZWRUZXh0IiwiZ2V0QnlUZXh0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJqc3hzIiwiaGVhZGluZyIsImdldEJ5Um9sZSIsIm5hbWUiLCJwYXJhZ3JhcGgiLCJ0b0JlRGVmaW5lZCJdLCJzb3VyY2VzIjpbImNhcmQudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbnJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgcmVuZGVyLCBzY3JlZW4gfSA9IHJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnKTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDE6IFBFUlNJQVBBTiBMSU5HS1VOR0FOXG4vLyBVbnR1ayBrb21wb25lbiBDYXJkIGluaSwga2l0YSB0aWRhayBwZXJsdSAnbW9ja2luZycgYXBhIHB1biBrYXJlbmFcbi8vIGlhIHRpZGFrIG1lbWlsaWtpIGtldGVyZ2FudHVuZ2FuIHBhZGEgZmlsZSBhdGF1IGtvbXBvbmVuIGxhaW4uXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDI6IE1FTkdBTUJJTCBLT0RFIE1BSEFTSVNXQVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaWYgKCFwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdTVUJNSVNTSU9OX1BBVEggZW52aXJvbm1lbnQgdmFyaWFibGUgbm90IHNldC4nKTtcbn1cbi8vIExvZ2lrYSBjZXJkYXMgdW50dWsgbWVuZ2FtYmlsIGtvbXBvbmVuIENhcmQsIGFwYXB1biBjYXJhIG1haGFzaXN3YSBtZW5nZWtzcG9ybnlhLlxuY29uc3Qgc3VibWlzc2lvbiA9IHJlcXVpcmUocHJvY2Vzcy5lbnYuU1VCTUlTU0lPTl9QQVRIKTtcbmNvbnN0IENhcmQgPSBzdWJtaXNzaW9uLkNhcmQgfHwgc3VibWlzc2lvbi5kZWZhdWx0IHx8IHN1Ym1pc3Npb247XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDM6IFwiQ0hFQ0tMSVNUXCIgUEVOSUxBSUFOIEZVTkdTSU9OQUwgVU5UVUsgQ0FSRFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZGVzY3JpYmUoJ1ByYWt0aWt1bTogS29tcG9uZW4gQ2FyZCcsICgpID0+IHtcblxuICB0ZXN0KCdLcml0ZXJpYSAxOiBIYXJ1cyBtZS1yZW5kZXIgc2VidWFoIGRpdiBsdWFyIGRlbmdhbiBjbGFzcyBcImNhcmRcIicsICgpID0+IHtcbiAgICAvLyBLaXRhIHJlbmRlciBkZW5nYW4ga29udGVuIGR1bW15IHVudHVrIGRpY2FyaVxuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSByZW5kZXIoPENhcmQ+S29udGVuIFRlczwvQ2FyZD4pO1xuXG4gICAgLy8gY29udGFpbmVyLmZpcnN0Q2hpbGQgYWRhbGFoIGVsZW1lbiBwYWxpbmcgbHVhciB5YW5nIGRpcmVuZGVyXG4gICAgY29uc3Qgb3V0ZXJEaXYgPSBjb250YWluZXIuZmlyc3RDaGlsZDtcbiAgICBleHBlY3Qob3V0ZXJEaXYpLnRvSGF2ZUNsYXNzKCdjYXJkJyk7XG4gIH0pO1xuXG4gIHRlc3QoJ0tyaXRlcmlhIDI6IEhhcnVzIG1lLXJlbmRlciBzZWJ1YWggZGl2IGRhbGFtIGRlbmdhbiBjbGFzcyBcImNhcmQtY29udGVudFwiJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSByZW5kZXIoPENhcmQ+S29udGVuIFRlczwvQ2FyZD4pO1xuICAgIGNvbnN0IG91dGVyRGl2ID0gY29udGFpbmVyLmZpcnN0Q2hpbGQ7XG5cbiAgICAvLyBvdXRlckRpdi5maXJzdENoaWxkIGFkYWxhaCBlbGVtZW4gcGVydGFtYSBkaSBkYWxhbSBkaXYuY2FyZFxuICAgIGNvbnN0IGlubmVyRGl2ID0gb3V0ZXJEaXYuZmlyc3RDaGlsZDtcbiAgICBleHBlY3QoaW5uZXJEaXYpLnRvSGF2ZUNsYXNzKCdjYXJkLWNvbnRlbnQnKTtcbiAgfSk7XG5cbiAgdGVzdCgnS3JpdGVyaWEgMzogSGFydXMgYmlzYSBtZW5hbXBpbGthbiBrb250ZW4gdGVrcyBzZWRlcmhhbmEgKGNoaWxkcmVuKScsICgpID0+IHtcbiAgICBjb25zdCB0ZWtzQW5hayA9IFwiSW5pIGFkYWxhaCBrb250ZW4gZGkgZGFsYW0gQ2FyZC5cIjtcbiAgICByZW5kZXIoPENhcmQ+e3Rla3NBbmFrfTwvQ2FyZD4pO1xuXG4gICAgLy8gQ2FyaSBhcGFrYWggdGVrcyB0ZXJzZWJ1dCBtdW5jdWwgZGkgbGF5YXJcbiAgICBjb25zdCByZW5kZXJlZFRleHQgPSBzY3JlZW4uZ2V0QnlUZXh0KHRla3NBbmFrKTtcbiAgICBleHBlY3QocmVuZGVyZWRUZXh0KS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcblxuICB0ZXN0KCdLcml0ZXJpYSA0OiBIYXJ1cyBiaXNhIG1lbmFtcGlsa2FuIGtvbnRlbiBKU1ggeWFuZyBsZWJpaCBrb21wbGVrcyAoY2hpbGRyZW4pJywgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxDYXJkPlxuICAgICAgICA8aDI+SnVkdWwgZGkgRGFsYW0gQ2FyZDwvaDI+XG4gICAgICAgIDxwPlBhcmFncmFmIGRpIGRhbGFtIENhcmQuPC9wPlxuICAgICAgPC9DYXJkPlxuICAgICk7XG5cbiAgICAvLyBDYXJpIGFwYWthaCBrZWR1YSBlbGVtZW4gdGVyc2VidXQgbXVuY3VsIGRpIGxheWFyXG4gICAgY29uc3QgaGVhZGluZyA9IHNjcmVlbi5nZXRCeVJvbGUoJ2hlYWRpbmcnLCB7IG5hbWU6IC9KdWR1bCBkaSBEYWxhbSBDYXJkL2kgfSk7XG4gICAgY29uc3QgcGFyYWdyYXBoID0gc2NyZWVuLmdldEJ5VGV4dCgvUGFyYWdyYWYgZGkgZGFsYW0gQ2FyZC9pKTtcblxuICAgIGV4cGVjdChoZWFkaW5nKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIGV4cGVjdChwYXJhZ3JhcGgpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIHRlc3QoJ0tyaXRlcmlhIDU6IEtvbXBvbmVuIFwiQ2FyZFwiIGhhcnVzIGRpZXhwb3J0IGRlbmdhbiBiZW5hcicsICgpID0+IHtcbiAgICAgIC8vIFRlcyBpbmkgbWVtYXN0aWthbiBtYWhhc2lzd2EgdGlkYWsgbHVwYSBtZW5nZWtzcG9yIGtvbXBvbmVuIG1lcmVrYVxuICAgICAgZXhwZWN0KENhcmQpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0FBLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUNwQyxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FB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