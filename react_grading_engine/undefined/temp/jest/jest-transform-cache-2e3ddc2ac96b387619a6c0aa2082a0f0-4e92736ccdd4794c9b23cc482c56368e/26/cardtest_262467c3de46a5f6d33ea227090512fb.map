{"version":3,"names":["require","React","render","screen","process","env","SUBMISSION_PATH","Error","submission","Card","default","describe","test","container","_jsxRuntime","jsx","children","outerDiv","firstChild","expect","toHaveClass","innerDiv","teksAnak","renderedText","getByText","toBeInTheDocument","jsxs","heading","getByRole","name","paragraph","toBeDefined"],"sources":["card.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN\n// Untuk komponen Card ini, kita tidak perlu 'mocking' apa pun karena\n// ia tidak memiliki ketergantungan pada file atau komponen lain.\n// ======================================================================\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA\n// ======================================================================\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\n// Logika cerdas untuk mengambil komponen Card, apapun cara mahasiswa mengekspornya.\nconst submission = require(process.env.SUBMISSION_PATH);\nconst Card = submission.Card || submission.default || submission;\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL UNTUK CARD\n// ======================================================================\ndescribe('Praktikum: Komponen Card', () => {\n\n  test('Kriteria 1: Harus me-render sebuah div luar dengan class \"card\"', () => {\n    // Kita render dengan konten dummy untuk dicari\n    const { container } = render(<Card>Konten Tes</Card>);\n\n    // container.firstChild adalah elemen paling luar yang dirender\n    const outerDiv = container.firstChild;\n    expect(outerDiv).toHaveClass('card');\n  });\n\n  test('Kriteria 2: Harus me-render sebuah div dalam dengan class \"card-content\"', () => {\n    const { container } = render(<Card>Konten Tes</Card>);\n    const outerDiv = container.firstChild;\n\n    // outerDiv.firstChild adalah elemen pertama di dalam div.card\n    const innerDiv = outerDiv.firstChild;\n    expect(innerDiv).toHaveClass('card-content');\n  });\n\n  test('Kriteria 3: Harus bisa menampilkan konten teks sederhana (children)', () => {\n    const teksAnak = \"Ini adalah konten di dalam Card.\";\n    render(<Card>{teksAnak}</Card>);\n\n    // Cari apakah teks tersebut muncul di layar\n    const renderedText = screen.getByText(teksAnak);\n    expect(renderedText).toBeInTheDocument();\n  });\n\n  test('Kriteria 4: Harus bisa menampilkan konten JSX yang lebih kompleks (children)', () => {\n    render(\n      <Card>\n        <h2>Judul di Dalam Card</h2>\n        <p>Paragraf di dalam Card.</p>\n      </Card>\n    );\n\n    // Cari apakah kedua elemen tersebut muncul di layar\n    const heading = screen.getByRole('heading', { name: /Judul di Dalam Card/i });\n    const paragraph = screen.getByText(/Paragraf di dalam Card/i);\n\n    expect(heading).toBeInTheDocument();\n    expect(paragraph).toBeInTheDocument();\n  });\n\n  test('Kriteria 5: Komponen \"Card\" harus diexport dengan benar', () => {\n      // Tes ini memastikan mahasiswa tidak lupa mengekspor komponen mereka\n      expect(Card).toBeDefined();\n  });\n\n});\n"],"mappings":";;;AAAA;AACA;AACA;AACAA,OAAO,CAAC,2BAA2B,CAAC;AACpC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEE,MAAM;EAAEC;AAAO,CAAC,GAAGH,OAAO,CAAC,wBAAwB,CAAC;;AAE5D;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,IAAI,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE;AACA;AACA,MAAMC,UAAU,GAAGR,OAAO,CAACI,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC;AACvD,MAAMG,IAAI,GAAGD,UAAU,CAACC,IAAI,IAAID,UAAU,CAACE,OAAO,IAAIF,UAAU;;AAGhE;AACA;AACA;AACAG,QAAQ,CAAC,0BAA0B,EAAE,MAAM;EAEzCC,IAAI,CAAC,iEAAiE,EAAE,MAAM;IAC5E;IACA,MAAM;MAAEC;IAAU,CAAC,GAAGX,MAAM,cAAC,IAAAY,WAAA,CAAAC,GAAA,EAACN,IAAI;MAAAO,QAAA,EAAC;IAAU,CAAM,CAAC,CAAC;;IAErD;IACA,MAAMC,QAAQ,GAAGJ,SAAS,CAACK,UAAU;IACrCC,MAAM,CAACF,QAAQ,CAAC,CAACG,WAAW,CAAC,MAAM,CAAC;EACtC,CAAC,CAAC;EAEFR,IAAI,CAAC,0EAA0E,EAAE,MAAM;IACrF,MAAM;MAAEC;IAAU,CAAC,GAAGX,MAAM,cAAC,IAAAY,WAAA,CAAAC,GAAA,EAACN,IAAI;MAAAO,QAAA,EAAC;IAAU,CAAM,CAAC,CAAC;IACrD,MAAMC,QAAQ,GAAGJ,SAAS,CAACK,UAAU;;IAErC;IACA,MAAMG,QAAQ,GAAGJ,QAAQ,CAACC,UAAU;IACpCC,MAAM,CAACE,QAAQ,CAAC,CAACD,WAAW,CAAC,cAAc,CAAC;EAC9C,CAAC,CAAC;EAEFR,IAAI,CAAC,qEAAqE,EAAE,MAAM;IAChF,MAAMU,QAAQ,GAAG,kCAAkC;IACnDpB,MAAM,cAAC,IAAAY,WAAA,CAAAC,GAAA,EAACN,IAAI;MAAAO,QAAA,EAAEM;IAAQ,CAAO,CAAC,CAAC;;IAE/B;IACA,MAAMC,YAAY,GAAGpB,MAAM,CAACqB,SAAS,CAACF,QAAQ,CAAC;IAC/CH,MAAM,CAACI,YAAY,CAAC,CAACE,iBAAiB,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEFb,IAAI,CAAC,8EAA8E,EAAE,MAAM;IACzFV,MAAM,cACJ,IAAAY,WAAA,CAAAY,IAAA,EAACjB,IAAI;MAAAO,QAAA,gBACH,IAAAF,WAAA,CAAAC,GAAA;QAAAC,QAAA,EAAI;MAAmB,CAAI,CAAC,eAC5B,IAAAF,WAAA,CAAAC,GAAA;QAAAC,QAAA,EAAG;MAAuB,CAAG,CAAC;IAAA,CAC1B,CACR,CAAC;;IAED;IACA,MAAMW,OAAO,GAAGxB,MAAM,CAACyB,SAAS,CAAC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAuB,CAAC,CAAC;IAC7E,MAAMC,SAAS,GAAG3B,MAAM,CAACqB,SAAS,CAAC,yBAAyB,CAAC;IAE7DL,MAAM,CAACQ,OAAO,CAAC,CAACF,iBAAiB,CAAC,CAAC;IACnCN,MAAM,CAACW,SAAS,CAAC,CAACL,iBAAiB,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFb,IAAI,CAAC,yDAAyD,EAAE,MAAM;IAClE;IACAO,MAAM,CAACV,IAAI,CAAC,CAACsB,WAAW,CAAC,CAAC;EAC9B,CAAC,CAAC;AAEJ,CAAC,CAAC","ignoreList":[]}