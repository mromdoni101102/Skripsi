ac197d30b26336d38e282d8e2dc575c5
"use strict";

// ======================================================================
// LANGKAH 1: "MENCEGAT" IMPORT YANG BERMASALAH
// ======================================================================
// Ini adalah bagian terpenting. Kita beritahu Jest untuk mencegat TEPAT
// alamat yang diminta oleh kode mahasiswa.
_getJestObj().mock('../../components/props/Card.js', () => {
  // Sebagai gantinya, berikan komponen Card tiruan yang simpel ini.
  return function MockedCard({
    children
  }) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: children
    });
  };
}, {
  virtual: true
}); // virtual: true membuatnya tidak perlu file fisik sama sekali.

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA (TIDAK BERUBAH)
// ======================================================================
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
const MyProfileV2 = require(process.env.SUBMISSION_PATH).default;

// ======================================================================
// BAGIAN 3: TES YANG FOKUS PADA HASIL AKHIR
// ======================================================================
describe('Praktikum: Komponen MyProfileV2', () => {
  beforeEach(() => {
    // Karena import sudah dicegat, render ini sekarang tidak akan crash.
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(MyProfileV2, {}));
  });
  test('Kriteria 1: Harus menampilkan dua judul, "Foto" dan "Tentang"', () => {
    const photoHeading = screen.getByRole('heading', {
      name: /Foto/i,
      level: 1
    });
    const aboutHeading = screen.getByRole('heading', {
      name: /Tentang/i,
      level: 1
    });
    expect(photoHeading).toBeInTheDocument();
    expect(aboutHeading).toBeInTheDocument();
  });
  test('Kriteria 2: Harus menampilkan gambar avatar Aklilu Lemma', () => {
    const avatarImage = screen.getByAltText('Aklilu Lemma');
    expect(avatarImage).toBeInTheDocument();
    expect(avatarImage).toHaveClass('avatar');
  });
  test('Kriteria 3: Harus menampilkan paragraf deskripsi tentang Aklilu Lemma', () => {
    const description = screen.getByText(/seorang ilmuwan terkemuka dari Etiopia/i);
    expect(description).toBeInTheDocument();
    expect(description.tagName.toLowerCase()).toBe('p');
  });
  test('Kriteria 4: Komponen harus diexport dengan benar', () => {
    expect(MyProfileV2).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJNb2NrZWRDYXJkIiwiY2hpbGRyZW4iLCJfanN4UnVudGltZSIsImpzeCIsInZpcnR1YWwiLCJyZXF1aXJlIiwiamVzdCIsIlJlYWN0IiwicmVuZGVyIiwic2NyZWVuIiwicHJvY2VzcyIsImVudiIsIlNVQk1JU1NJT05fUEFUSCIsIkVycm9yIiwiTXlQcm9maWxlVjIiLCJkZWZhdWx0IiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwidGVzdCIsInBob3RvSGVhZGluZyIsImdldEJ5Um9sZSIsIm5hbWUiLCJsZXZlbCIsImFib3V0SGVhZGluZyIsImV4cGVjdCIsInRvQmVJblRoZURvY3VtZW50IiwiYXZhdGFySW1hZ2UiLCJnZXRCeUFsdFRleHQiLCJ0b0hhdmVDbGFzcyIsImRlc2NyaXB0aW9uIiwiZ2V0QnlUZXh0IiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwidG9CZSIsInRvQmVEZWZpbmVkIl0sInNvdXJjZXMiOlsibXlwcm9maWxldjIudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbnJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgcmVuZGVyLCBzY3JlZW4gfSA9IHJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnKTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTEFOR0tBSCAxOiBcIk1FTkNFR0FUXCIgSU1QT1JUIFlBTkcgQkVSTUFTQUxBSFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gSW5pIGFkYWxhaCBiYWdpYW4gdGVycGVudGluZy4gS2l0YSBiZXJpdGFodSBKZXN0IHVudHVrIG1lbmNlZ2F0IFRFUEFUXG4vLyBhbGFtYXQgeWFuZyBkaW1pbnRhIG9sZWgga29kZSBtYWhhc2lzd2EuXG5qZXN0Lm1vY2soJy4uLy4uL2NvbXBvbmVudHMvcHJvcHMvQ2FyZC5qcycsICgpID0+IHtcbiAgICAvLyBTZWJhZ2FpIGdhbnRpbnlhLCBiZXJpa2FuIGtvbXBvbmVuIENhcmQgdGlydWFuIHlhbmcgc2ltcGVsIGluaS5cbiAgICByZXR1cm4gZnVuY3Rpb24gTW9ja2VkQ2FyZCh7IGNoaWxkcmVuIH0pIHtcbiAgICAgICAgcmV0dXJuIDxkaXY+e2NoaWxkcmVufTwvZGl2PjtcbiAgICB9O1xufSwgeyB2aXJ0dWFsOiB0cnVlIH0pOyAvLyB2aXJ0dWFsOiB0cnVlIG1lbWJ1YXRueWEgdGlkYWsgcGVybHUgZmlsZSBmaXNpayBzYW1hIHNla2FsaS5cblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMjogTUVOR0FNQklMIEtPREUgTUFIQVNJU1dBIChUSURBSyBCRVJVQkFIKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaWYgKCFwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdTVUJNSVNTSU9OX1BBVEggZW52aXJvbm1lbnQgdmFyaWFibGUgbm90IHNldC4nKTtcbn1cbmNvbnN0IE15UHJvZmlsZVYyID0gcmVxdWlyZShwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpLmRlZmF1bHQ7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDM6IFRFUyBZQU5HIEZPS1VTIFBBREEgSEFTSUwgQUtISVJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmRlc2NyaWJlKCdQcmFrdGlrdW06IEtvbXBvbmVuIE15UHJvZmlsZVYyJywgKCkgPT4ge1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIC8vIEthcmVuYSBpbXBvcnQgc3VkYWggZGljZWdhdCwgcmVuZGVyIGluaSBzZWthcmFuZyB0aWRhayBha2FuIGNyYXNoLlxuICAgICAgICByZW5kZXIoPE15UHJvZmlsZVYyIC8+KTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDE6IEhhcnVzIG1lbmFtcGlsa2FuIGR1YSBqdWR1bCwgXCJGb3RvXCIgZGFuIFwiVGVudGFuZ1wiJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBwaG90b0hlYWRpbmcgPSBzY3JlZW4uZ2V0QnlSb2xlKCdoZWFkaW5nJywgeyBuYW1lOiAvRm90by9pLCBsZXZlbDogMSB9KTtcbiAgICAgICAgY29uc3QgYWJvdXRIZWFkaW5nID0gc2NyZWVuLmdldEJ5Um9sZSgnaGVhZGluZycsIHsgbmFtZTogL1RlbnRhbmcvaSwgbGV2ZWw6IDEgfSk7XG4gICAgICAgIGV4cGVjdChwaG90b0hlYWRpbmcpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICAgIGV4cGVjdChhYm91dEhlYWRpbmcpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSAyOiBIYXJ1cyBtZW5hbXBpbGthbiBnYW1iYXIgYXZhdGFyIEFrbGlsdSBMZW1tYScsICgpID0+IHtcbiAgICAgICAgY29uc3QgYXZhdGFySW1hZ2UgPSBzY3JlZW4uZ2V0QnlBbHRUZXh0KCdBa2xpbHUgTGVtbWEnKTtcbiAgICAgICAgZXhwZWN0KGF2YXRhckltYWdlKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgICBleHBlY3QoYXZhdGFySW1hZ2UpLnRvSGF2ZUNsYXNzKCdhdmF0YXInKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDM6IEhhcnVzIG1lbmFtcGlsa2FuIHBhcmFncmFmIGRlc2tyaXBzaSB0ZW50YW5nIEFrbGlsdSBMZW1tYScsICgpID0+IHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBzY3JlZW4uZ2V0QnlUZXh0KC9zZW9yYW5nIGlsbXV3YW4gdGVya2VtdWthIGRhcmkgRXRpb3BpYS9pKTtcbiAgICAgICAgZXhwZWN0KGRlc2NyaXB0aW9uKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgICBleHBlY3QoZGVzY3JpcHRpb24udGFnTmFtZS50b0xvd2VyQ2FzZSgpKS50b0JlKCdwJyk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSA0OiBLb21wb25lbiBoYXJ1cyBkaWV4cG9ydCBkZW5nYW4gYmVuYXInLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChNeVByb2ZpbGVWMikudG9CZURlZmluZWQoKTtcbiAgICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsZ0NBQWdDLEVBQUUsTUFBTTtFQUM5QztFQUNBLE9BQU8sU0FBU0MsVUFBVUEsQ0FBQztJQUFFQztFQUFTLENBQUMsRUFBRTtJQUNyQyxvQkFBTyxJQUFBQyxXQUFBLENBQUFDLEdBQUE7TUFBQUYsUUFBQSxFQUFNQTtJQUFRLENBQU0sQ0FBQztFQUNoQyxDQUFDO0FBQ0wsQ0FBQyxFQUFFO0VBQUVHLE9BQU8sRUFBRTtBQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7O0FBR3ZCO0FBQ0E7QUFDQTtBQUFBLElBQUFGLFdBQUEsR0FBQUcsT0FBQTtBQUFBLFNBQUFQLFlBQUE7RUFBQTtJQUFBUTtFQUFBLElBQUFELE9BQUE7RUFBQVAsV0FBQSxHQUFBQSxDQUFBLEtBQUFRLElBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUF0QkE7QUFDQTtBQUNBO0FBQ0FELE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUNwQyxNQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFRyxNQUFNO0VBQUVDO0FBQU8sQ0FBQyxHQUFHSixPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFrQjVELElBQUksQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNDLGVBQWUsRUFBRTtFQUNoQyxNQUFNLElBQUlDLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQztBQUNsRTtBQUNBLE1BQU1DLFdBQVcsR0FBR1QsT0FBTyxDQUFDSyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDLENBQUNHLE9BQU87O0FBR2hFO0FBQ0E7QUFDQTtBQUNBQyxRQUFRLENBQUMsaUNBQWlDLEVBQUUsTUFBTTtFQUU5Q0MsVUFBVSxDQUFDLE1BQU07SUFDYjtJQUNBVCxNQUFNLGNBQUMsSUFBQU4sV0FBQSxDQUFBQyxHQUFBLEVBQUNXLFdBQVcsSUFBRSxDQUFDLENBQUM7RUFDM0IsQ0FBQyxDQUFDO0VBRUZJLElBQUksQ0FBQywrREFBK0QsRUFBRSxNQUFNO0lBQ3hFLE1BQU1DLFlBQVksR0FBR1YsTUFBTSxDQUFDVyxTQUFTLENBQUMsU0FBUyxFQUFFO01BQUVDLElBQUksRUFBRSxPQUFPO01BQUVDLEtBQUssRUFBRTtJQUFFLENBQUMsQ0FBQztJQUM3RSxNQUFNQyxZQUFZLEdBQUdkLE1BQU0sQ0FBQ1csU0FBUyxDQUFDLFNBQVMsRUFBRTtNQUFFQyxJQUFJLEVBQUUsVUFBVTtNQUFFQyxLQUFLLEVBQUU7SUFBRSxDQUFDLENBQUM7SUFDaEZFLE1BQU0sQ0FBQ0wsWUFBWSxDQUFDLENBQUNNLGlCQUFpQixDQUFDLENBQUM7SUFDeENELE1BQU0sQ0FBQ0QsWUFBWSxDQUFDLENBQUNFLGlCQUFpQixDQUFDLENBQUM7RUFDNUMsQ0FBQyxDQUFDO0VBRUZQLElBQUksQ0FBQywwREFBMEQsRUFBRSxNQUFNO0lBQ25FLE1BQU1RLFdBQVcsR0FBR2pCLE1BQU0sQ0FBQ2tCLFlBQVksQ0FBQyxjQUFjLENBQUM7SUFDdkRILE1BQU0sQ0FBQ0UsV0FBVyxDQUFDLENBQUNELGlCQUFpQixDQUFDLENBQUM7SUFDdkNELE1BQU0sQ0FBQ0UsV0FBVyxDQUFDLENBQUNFLFdBQVcsQ0FBQyxRQUFRLENBQUM7RUFDN0MsQ0FBQyxDQUFDO0VBRUZWLElBQUksQ0FBQyx1RUFBdUUsRUFBRSxNQUFNO0lBQ2hGLE1BQU1XLFdBQVcsR0FBR3BCLE1BQU0sQ0FBQ3FCLFNBQVMsQ0FBQyx5Q0FBeUMsQ0FBQztJQUMvRU4sTUFBTSxDQUFDSyxXQUFXLENBQUMsQ0FBQ0osaUJBQWlCLENBQUMsQ0FBQztJQUN2Q0QsTUFBTSxDQUFDSyxXQUFXLENBQUNFLE9BQU8sQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsR0FBRyxDQUFDO0VBQ3ZELENBQUMsQ0FBQztFQUVGZixJQUFJLENBQUMsa0RBQWtELEVBQUUsTUFBTTtJQUMzRE0sTUFBTSxDQUFDVixXQUFXLENBQUMsQ0FBQ29CLFdBQVcsQ0FBQyxDQUFDO0VBQ3JDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==