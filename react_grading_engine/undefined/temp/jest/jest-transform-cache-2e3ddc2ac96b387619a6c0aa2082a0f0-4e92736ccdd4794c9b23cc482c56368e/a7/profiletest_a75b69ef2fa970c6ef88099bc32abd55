7d2aff6e661c1ab3344524fb52959beb
"use strict";

// ======================================================================
// BAGIAN 1: MENCEGAT IMPORT `next/image` (Jika Digunakan)
// ======================================================================
// Ini adalah "jaring pengaman". Jika kode mahasiswa menggunakan <Image> dari Next.js,
// kita akan menggantinya dengan tag <img> biasa agar tidak error.
_getJestObj().mock('next/image', () => {
  // eslint-disable-next-line @next/next/no-img-element
  return props => /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
    ...props
  });
}, {
  virtual: true
});

// ======================================================================
// BAGIAN 2: MENGAMBIL KODE MAHASISWA
// ======================================================================
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
/**
 * @jest-environment jsdom
 */
require('@testing-library/jest-dom');
const React = require('react');
const {
  render,
  screen
} = require('@testing-library/react');
if (!process.env.SUBMISSION_PATH) {
  throw new Error('SUBMISSION_PATH environment variable not set.');
}
// Logika cerdas untuk mengambil komponen Profile, apapun cara mahasiswa mengekspornya
const submission = require(process.env.SUBMISSION_PATH);
const Profile = submission.Profile || submission.default || submission;

// ======================================================================
// BAGIAN 3: CHECKLIST PENILAIAN YANG PALING ANDAL
// ======================================================================
describe('Praktikum: Komponen Profile', () => {
  beforeEach(() => {
    render(/*#__PURE__*/(0, _jsxRuntime.jsx)(Profile, {}));
  });
  test('Kriteria 1: Harus menampilkan sebuah elemen gambar (image)', () => {
    // Tes paling dasar: apakah ada gambar yang muncul di layar?
    const image = screen.getByRole('img');
    expect(image).toBeInTheDocument();
  });
  test('Kriteria 2: Gambar harus memiliki teks alternatif (alt) yang benar', () => {
    // Cari gambar berdasarkan alt text yang diharapkan
    const image = screen.getByAltText('Katherine Johnson');
    expect(image).toBeInTheDocument();
  });
  test('Kriteria 3: Gambar harus memiliki ukuran width dan height yang benar', () => {
    const image = screen.getByRole('img', {
      name: 'Katherine Johnson'
    });
    expect(image).toHaveAttribute('width', '100');
    expect(image).toHaveAttribute('height', '100');
  });
  test('Kriteria 4: Gambar harus memiliki sumber (src) yang benar', () => {
    const image = screen.getByRole('img', {
      name: 'Katherine Johnson'
    });
    expect(image).toHaveAttribute('src', 'https://i.imgur.com/MK3eW3Am.jpg');
  });
  test('Kriteria 5: Komponen "Profile" harus diexport dengan benar', () => {
    expect(Profile).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJwcm9wcyIsIl9qc3hSdW50aW1lIiwianN4IiwidmlydHVhbCIsInJlcXVpcmUiLCJqZXN0IiwiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJwcm9jZXNzIiwiZW52IiwiU1VCTUlTU0lPTl9QQVRIIiwiRXJyb3IiLCJzdWJtaXNzaW9uIiwiUHJvZmlsZSIsImRlZmF1bHQiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJ0ZXN0IiwiaW1hZ2UiLCJnZXRCeVJvbGUiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsImdldEJ5QWx0VGV4dCIsIm5hbWUiLCJ0b0hhdmVBdHRyaWJ1dGUiLCJ0b0JlRGVmaW5lZCJdLCJzb3VyY2VzIjpbInByb2ZpbGUudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbnJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgcmVuZGVyLCBzY3JlZW4gfSA9IHJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnKTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDE6IE1FTkNFR0FUIElNUE9SVCBgbmV4dC9pbWFnZWAgKEppa2EgRGlndW5ha2FuKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gSW5pIGFkYWxhaCBcImphcmluZyBwZW5nYW1hblwiLiBKaWthIGtvZGUgbWFoYXNpc3dhIG1lbmdndW5ha2FuIDxJbWFnZT4gZGFyaSBOZXh0LmpzLFxuLy8ga2l0YSBha2FuIG1lbmdnYW50aW55YSBkZW5nYW4gdGFnIDxpbWc+IGJpYXNhIGFnYXIgdGlkYWsgZXJyb3IuXG5qZXN0Lm1vY2soJ25leHQvaW1hZ2UnLCAoKSA9PiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBuZXh0L25leHQvbm8taW1nLWVsZW1lbnRcbiAgICByZXR1cm4gKHByb3BzKSA9PiA8aW1nIHsuLi5wcm9wc30gLz47XG59LCB7IHZpcnR1YWw6IHRydWUgfSk7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFHSUFOIDI6IE1FTkdBTUJJTCBLT0RFIE1BSEFTSVNXQVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaWYgKCFwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdTVUJNSVNTSU9OX1BBVEggZW52aXJvbm1lbnQgdmFyaWFibGUgbm90IHNldC4nKTtcbn1cbi8vIExvZ2lrYSBjZXJkYXMgdW50dWsgbWVuZ2FtYmlsIGtvbXBvbmVuIFByb2ZpbGUsIGFwYXB1biBjYXJhIG1haGFzaXN3YSBtZW5nZWtzcG9ybnlhXG5jb25zdCBzdWJtaXNzaW9uID0gcmVxdWlyZShwcm9jZXNzLmVudi5TVUJNSVNTSU9OX1BBVEgpO1xuY29uc3QgUHJvZmlsZSA9IHN1Ym1pc3Npb24uUHJvZmlsZSB8fCBzdWJtaXNzaW9uLmRlZmF1bHQgfHwgc3VibWlzc2lvbjtcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCQUdJQU4gMzogQ0hFQ0tMSVNUIFBFTklMQUlBTiBZQU5HIFBBTElORyBBTkRBTFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZGVzY3JpYmUoJ1ByYWt0aWt1bTogS29tcG9uZW4gUHJvZmlsZScsICgpID0+IHtcblxuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICByZW5kZXIoPFByb2ZpbGUgLz4pO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMTogSGFydXMgbWVuYW1waWxrYW4gc2VidWFoIGVsZW1lbiBnYW1iYXIgKGltYWdlKScsICgpID0+IHtcbiAgICAgICAgLy8gVGVzIHBhbGluZyBkYXNhcjogYXBha2FoIGFkYSBnYW1iYXIgeWFuZyBtdW5jdWwgZGkgbGF5YXI/XG4gICAgICAgIGNvbnN0IGltYWdlID0gc2NyZWVuLmdldEJ5Um9sZSgnaW1nJyk7XG4gICAgICAgIGV4cGVjdChpbWFnZSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ0tyaXRlcmlhIDI6IEdhbWJhciBoYXJ1cyBtZW1pbGlraSB0ZWtzIGFsdGVybmF0aWYgKGFsdCkgeWFuZyBiZW5hcicsICgpID0+IHtcbiAgICAgICAgLy8gQ2FyaSBnYW1iYXIgYmVyZGFzYXJrYW4gYWx0IHRleHQgeWFuZyBkaWhhcmFwa2FuXG4gICAgICAgIGNvbnN0IGltYWdlID0gc2NyZWVuLmdldEJ5QWx0VGV4dCgnS2F0aGVyaW5lIEpvaG5zb24nKTtcbiAgICAgICAgZXhwZWN0KGltYWdlKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnS3JpdGVyaWEgMzogR2FtYmFyIGhhcnVzIG1lbWlsaWtpIHVrdXJhbiB3aWR0aCBkYW4gaGVpZ2h0IHlhbmcgYmVuYXInLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGltYWdlID0gc2NyZWVuLmdldEJ5Um9sZSgnaW1nJywgeyBuYW1lOiAnS2F0aGVyaW5lIEpvaG5zb24nIH0pO1xuICAgICAgICBleHBlY3QoaW1hZ2UpLnRvSGF2ZUF0dHJpYnV0ZSgnd2lkdGgnLCAnMTAwJyk7XG4gICAgICAgIGV4cGVjdChpbWFnZSkudG9IYXZlQXR0cmlidXRlKCdoZWlnaHQnLCAnMTAwJyk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSA0OiBHYW1iYXIgaGFydXMgbWVtaWxpa2kgc3VtYmVyIChzcmMpIHlhbmcgYmVuYXInLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGltYWdlID0gc2NyZWVuLmdldEJ5Um9sZSgnaW1nJywgeyBuYW1lOiAnS2F0aGVyaW5lIEpvaG5zb24nIH0pO1xuICAgICAgICBleHBlY3QoaW1hZ2UpLnRvSGF2ZUF0dHJpYnV0ZSgnc3JjJywgJ2h0dHBzOi8vaS5pbWd1ci5jb20vTUszZVczQW0uanBnJyk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdLcml0ZXJpYSA1OiBLb21wb25lbiBcIlByb2ZpbGVcIiBoYXJ1cyBkaWV4cG9ydCBkZW5nYW4gYmVuYXInLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChQcm9maWxlKS50b0JlRGVmaW5lZCgpO1xuICAgIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQSxXQUFBLEdBQUtDLElBQUksQ0FBQyxZQUFZLEVBQUUsTUFBTTtFQUMxQjtFQUNBLE9BQVFDLEtBQUssaUJBQUssSUFBQUMsV0FBQSxDQUFBQyxHQUFBO0lBQUEsR0FBU0Y7RUFBSyxDQUFHLENBQUM7QUFDeEMsQ0FBQyxFQUFFO0VBQUVHLE9BQU8sRUFBRTtBQUFLLENBQUMsQ0FBQzs7QUFHckI7QUFDQTtBQUNBO0FBQUEsSUFBQUYsV0FBQSxHQUFBRyxPQUFBO0FBQUEsU0FBQU4sWUFBQTtFQUFBO0lBQUFPO0VBQUEsSUFBQUQsT0FBQTtFQUFBTixXQUFBLEdBQUFBLENBQUEsS0FBQU8sSUFBQTtFQUFBLE9BQUFBLElBQUE7QUFBQTtBQXBCQTtBQUNBO0FBQ0E7QUFDQUQsT0FBTyxDQUFDLDJCQUEyQixDQUFDO0FBQ3BDLE1BQU1FLEtBQUssR0FBR0YsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixNQUFNO0VBQUVHLE1BQU07RUFBRUM7QUFBTyxDQUFDLEdBQUdKLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQztBQWdCNUQsSUFBSSxDQUFDSyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsZUFBZSxFQUFFO0VBQ2hDLE1BQU0sSUFBSUMsS0FBSyxDQUFDLCtDQUErQyxDQUFDO0FBQ2xFO0FBQ0E7QUFDQSxNQUFNQyxVQUFVLEdBQUdULE9BQU8sQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNDLGVBQWUsQ0FBQztBQUN2RCxNQUFNRyxPQUFPLEdBQUdELFVBQVUsQ0FBQ0MsT0FBTyxJQUFJRCxVQUFVLENBQUNFLE9BQU8sSUFBSUYsVUFBVTs7QUFHdEU7QUFDQTtBQUNBO0FBQ0FHLFFBQVEsQ0FBQyw2QkFBNkIsRUFBRSxNQUFNO0VBRTFDQyxVQUFVLENBQUMsTUFBTTtJQUNiVixNQUFNLGNBQUMsSUFBQU4sV0FBQSxDQUFBQyxHQUFBLEVBQUNZLE9BQU8sSUFBRSxDQUFDLENBQUM7RUFDdkIsQ0FBQyxDQUFDO0VBRUZJLElBQUksQ0FBQyw0REFBNEQsRUFBRSxNQUFNO0lBQ3JFO0lBQ0EsTUFBTUMsS0FBSyxHQUFHWCxNQUFNLENBQUNZLFNBQVMsQ0FBQyxLQUFLLENBQUM7SUFDckNDLE1BQU0sQ0FBQ0YsS0FBSyxDQUFDLENBQUNHLGlCQUFpQixDQUFDLENBQUM7RUFDckMsQ0FBQyxDQUFDO0VBRUZKLElBQUksQ0FBQyxvRUFBb0UsRUFBRSxNQUFNO0lBQzdFO0lBQ0EsTUFBTUMsS0FBSyxHQUFHWCxNQUFNLENBQUNlLFlBQVksQ0FBQyxtQkFBbUIsQ0FBQztJQUN0REYsTUFBTSxDQUFDRixLQUFLLENBQUMsQ0FBQ0csaUJBQWlCLENBQUMsQ0FBQztFQUNyQyxDQUFDLENBQUM7RUFFRkosSUFBSSxDQUFDLHNFQUFzRSxFQUFFLE1BQU07SUFDL0UsTUFBTUMsS0FBSyxHQUFHWCxNQUFNLENBQUNZLFNBQVMsQ0FBQyxLQUFLLEVBQUU7TUFBRUksSUFBSSxFQUFFO0lBQW9CLENBQUMsQ0FBQztJQUNwRUgsTUFBTSxDQUFDRixLQUFLLENBQUMsQ0FBQ00sZUFBZSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUM7SUFDN0NKLE1BQU0sQ0FBQ0YsS0FBSyxDQUFDLENBQUNNLGVBQWUsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDO0VBQ2xELENBQUMsQ0FBQztFQUVGUCxJQUFJLENBQUMsMkRBQTJELEVBQUUsTUFBTTtJQUNwRSxNQUFNQyxLQUFLLEdBQUdYLE1BQU0sQ0FBQ1ksU0FBUyxDQUFDLEtBQUssRUFBRTtNQUFFSSxJQUFJLEVBQUU7SUFBb0IsQ0FBQyxDQUFDO0lBQ3BFSCxNQUFNLENBQUNGLEtBQUssQ0FBQyxDQUFDTSxlQUFlLENBQUMsS0FBSyxFQUFFLGtDQUFrQyxDQUFDO0VBQzVFLENBQUMsQ0FBQztFQUVGUCxJQUFJLENBQUMsNERBQTRELEVBQUUsTUFBTTtJQUNyRUcsTUFBTSxDQUFDUCxPQUFPLENBQUMsQ0FBQ1ksV0FBVyxDQUFDLENBQUM7RUFDakMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119