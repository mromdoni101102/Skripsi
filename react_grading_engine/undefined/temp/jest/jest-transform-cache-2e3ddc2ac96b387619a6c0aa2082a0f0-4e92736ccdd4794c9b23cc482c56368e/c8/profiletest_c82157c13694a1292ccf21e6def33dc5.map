{"version":3,"names":["_getJestObj","mock","props","_jsxRuntime","jsx","require","jest","React","render","screen","process","env","SUBMISSION_PATH","Error","Profile","describe","beforeEach","test","image","getByRole","expect","toBeInTheDocument","toHaveAttribute","toHaveStyle","toBeDefined"],"sources":["profile.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nrequire('@testing-library/jest-dom');\nconst React = require('react');\nconst { render, screen } = require('@testing-library/react');\n\n// ======================================================================\n// BAGIAN 1: PERSIAPAN LINGKUNGAN\n// ======================================================================\n\n// Mocking (membuat tiruan) dari komponen 'next/image'.\n// Ini diperlukan karena kita menjalankan tes di luar lingkungan Next.js.\njest.mock('next/image', () => {\n  // eslint-disable-next-line @next/next/no-img-element\n  return (props) => <img {...props} />;\n});\n\n\n// ======================================================================\n// BAGIAN 2: MENGAMBIL KODE MAHASISWA (Satu-satunya yang di-import)\n// ======================================================================\n\n// PENTING: Kode ini secara dinamis mengimpor file mahasiswa yang di-upload.\n// Path-nya dikirim oleh Controller Laravel melalui environment variable.\nif (!process.env.SUBMISSION_PATH) {\n  throw new Error('SUBMISSION_PATH environment variable not set.');\n}\nconst { Profile } = require(process.env.SUBMISSION_PATH);\n\n\n// ======================================================================\n// BAGIAN 3: \"CHECKLIST\" PENILAIAN FUNGSIONAL\n// ======================================================================\n\n// Ini adalah inti dari \"kunci jawaban\" Anda.\n// Setiap 'test' adalah satu kriteria penilaian yang akan menghasilkan LULUS atau GAGAL.\ndescribe('Praktikum: Komponen Profile', () => {\n\n  // Fungsi ini akan dijalankan sebelum setiap 'test' di bawah ini.\n  // Tujuannya agar kita tidak perlu menulis `render(<Profile />)` berulang kali.\n  beforeEach(() => {\n    render(<Profile />);\n  });\n\n  test('Kriteria 1: Harus menampilkan sebuah elemen gambar (image)', () => {\n    const image = screen.getByRole('img');\n    expect(image).toBeInTheDocument();\n  });\n\n  test('Kriteria 2: Gambar harus memiliki sumber (src) yang benar', () => {\n    const image = screen.getByRole('img');\n    expect(image).toHaveAttribute('src', 'https://i.imgur.com/MK3eW3Am.jpg');\n  });\n\n  test('Kriteria 3: Gambar harus memiliki teks alternatif (alt) yang benar', () => {\n    const image = screen.getByRole('img');\n    expect(image).toHaveAttribute('alt', 'Katherine Johnson');\n  });\n\n  test('Kriteria 4: Gambar harus memiliki atribut \"width\" dan \"height\" sebesar 100', () => {\n    const image = screen.getByRole('img');\n    expect(image).toHaveAttribute('width', '100');\n    expect(image).toHaveAttribute('height', '100');\n  });\n\n  test('Kriteria 5: Gambar harus memiliki styling \"margin\" yang benar', () => {\n    const image = screen.getByRole('img');\n    // .toHaveStyle() adalah cara yang andal untuk memeriksa properti CSS\n    expect(image).toHaveStyle('margin: 13px');\n  });\n\n  test('Kriteria 6: Komponen \"Profile\" harus diexport dengan benar', () => {\n      // Tes ini memastikan mahasiswa tidak lupa mengekspor komponen mereka\n      expect(Profile).toBeDefined();\n  });\n});\n"],"mappings":";;AAOA;AACA;AACA;;AAEA;AACA;AACAA,WAAA,GAAKC,IAAI,CAAC,YAAY,EAAE,MAAM;EAC5B;EACA,OAAQC,KAAK,iBAAK,IAAAC,WAAA,CAAAC,GAAA;IAAA,GAASF;EAAK,CAAG,CAAC;AACtC,CAAC,CAAC;;AAGF;AACA;AACA;;AAEA;AACA;AAAA,IAAAC,WAAA,GAAAE,OAAA;AAAA,SAAAL,YAAA;EAAA;IAAAM;EAAA,IAAAD,OAAA;EAAAL,WAAA,GAAAA,CAAA,KAAAM,IAAA;EAAA,OAAAA,IAAA;AAAA;AAxBA;AACA;AACA;AACAD,OAAO,CAAC,2BAA2B,CAAC;AACpC,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEG,MAAM;EAAEC;AAAO,CAAC,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAoB5D,IAAI,CAACK,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE;AACA,MAAM;EAAEC;AAAQ,CAAC,GAAGT,OAAO,CAACK,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC;;AAGxD;AACA;AACA;;AAEA;AACA;AACAG,QAAQ,CAAC,6BAA6B,EAAE,MAAM;EAE5C;EACA;EACAC,UAAU,CAAC,MAAM;IACfR,MAAM,cAAC,IAAAL,WAAA,CAAAC,GAAA,EAACU,OAAO,IAAE,CAAC,CAAC;EACrB,CAAC,CAAC;EAEFG,IAAI,CAAC,4DAA4D,EAAE,MAAM;IACvE,MAAMC,KAAK,GAAGT,MAAM,CAACU,SAAS,CAAC,KAAK,CAAC;IACrCC,MAAM,CAACF,KAAK,CAAC,CAACG,iBAAiB,CAAC,CAAC;EACnC,CAAC,CAAC;EAEFJ,IAAI,CAAC,2DAA2D,EAAE,MAAM;IACtE,MAAMC,KAAK,GAAGT,MAAM,CAACU,SAAS,CAAC,KAAK,CAAC;IACrCC,MAAM,CAACF,KAAK,CAAC,CAACI,eAAe,CAAC,KAAK,EAAE,kCAAkC,CAAC;EAC1E,CAAC,CAAC;EAEFL,IAAI,CAAC,oEAAoE,EAAE,MAAM;IAC/E,MAAMC,KAAK,GAAGT,MAAM,CAACU,SAAS,CAAC,KAAK,CAAC;IACrCC,MAAM,CAACF,KAAK,CAAC,CAACI,eAAe,CAAC,KAAK,EAAE,mBAAmB,CAAC;EAC3D,CAAC,CAAC;EAEFL,IAAI,CAAC,4EAA4E,EAAE,MAAM;IACvF,MAAMC,KAAK,GAAGT,MAAM,CAACU,SAAS,CAAC,KAAK,CAAC;IACrCC,MAAM,CAACF,KAAK,CAAC,CAACI,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC;IAC7CF,MAAM,CAACF,KAAK,CAAC,CAACI,eAAe,CAAC,QAAQ,EAAE,KAAK,CAAC;EAChD,CAAC,CAAC;EAEFL,IAAI,CAAC,+DAA+D,EAAE,MAAM;IAC1E,MAAMC,KAAK,GAAGT,MAAM,CAACU,SAAS,CAAC,KAAK,CAAC;IACrC;IACAC,MAAM,CAACF,KAAK,CAAC,CAACK,WAAW,CAAC,cAAc,CAAC;EAC3C,CAAC,CAAC;EAEFN,IAAI,CAAC,4DAA4D,EAAE,MAAM;IACrE;IACAG,MAAM,CAACN,OAAO,CAAC,CAACU,WAAW,CAAC,CAAC;EACjC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}